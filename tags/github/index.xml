<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on Pythonistan, Python Cumhuriyeti</title>
    <link>http://pythonistan.net/tags/github/</link>
    <description>Recent content in Github on Pythonistan, Python Cumhuriyeti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>tr-TR</language>
    <lastBuildDate>Thu, 01 Sep 2016 00:17:50 -0400</lastBuildDate>
    <atom:link href="http://pythonistan.net/tags/github/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo ile Statik Bir Websitesi Nasıl Yapılır? - Beşinci Bölüm : Sitemizi Github&#39;da Yayınlayalım</title>
      <link>http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-5/</link>
      <pubDate>Thu, 01 Sep 2016 00:17:50 -0400</pubDate>
      
      <guid>http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-5/</guid>
      <description>

&lt;p&gt;Nihayet bugün, &lt;strong&gt;Hugo ile statik bir websitesi nasıl yapılır&lt;/strong&gt; serimizi &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-5/&#34;&gt;beşinci bölümü&lt;/a&gt; ile sonlandırıyoruz.&lt;/p&gt;

&lt;p&gt;Birinci bölümde &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-1/&#34;&gt;Hugo kurulumunu&lt;/a&gt;, ikinci bölümde &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-2/&#34;&gt;Hugo ile Siteyi Lokal Bilgisayarda Oluşturma&lt;/a&gt;&amp;lsquo;yı, üçüncü bölümde &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-3/&#34;&gt;Temamızı Özelleştirme&lt;/a&gt;&amp;lsquo;yi, dördüncü bölümde ise &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-4/&#34;&gt;post sayfalarını editleme&lt;/a&gt; konusunu işlemiştik.&lt;/p&gt;

&lt;p&gt;Bugünkü konumuz, sitemizi ücretsiz olarak &lt;strong&gt;Github&lt;/strong&gt;&amp;lsquo;da barındırma ve bu işlemi &lt;a href=&#34;http://pythonistan.net/blog/git-ve-github/&#34;&gt;git&lt;/a&gt; vasıtası ile nasıl yapacağımız.&lt;/p&gt;

&lt;h2 id=&#34;github-hakkında&#34;&gt;Github Hakkında&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; yazılım geliştiricilerin kullandığı Dünya&amp;rsquo;nın en önemli ortak - paylaşılan sitelerinden biri (hub). Bu site 5 milyondan fazla açık kaynak kodlu yazılıma ev sahipliği yapıyor.&lt;/p&gt;

&lt;p&gt;Özellikle açık kaynak kodlu (&lt;em&gt;open source&lt;/em&gt;) yazılımlar &lt;strong&gt;Github&lt;/strong&gt;&amp;lsquo;a yükleniyor ve Dünyanın her tarafından programcılar bu yazılımları her an geliştirme ve destekleme şansı elde ediyorlar.&lt;/p&gt;

&lt;p&gt;Siz de herhangi bir projeye destek vermek isterseniz yapmanız gereken yazılım projesini bilgisayarınıza indirmek (&lt;code&gt;fork-clone&lt;/code&gt;) ve yazılım üzerinde yaptığınız değişiklikleri tekrar Github&amp;rsquo;a yüklemek. (&lt;code&gt;pull request&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;Yaptığınız değişikliklerin projeye eklenebilmesi için projeyi sürdürenlerin onaylaması gerekiyor.&lt;/p&gt;

&lt;h2 id=&#34;github-ı-ücretsiz-hosting-servisi-olarak-kullanmak&#34;&gt;Github&amp;rsquo;ı Ücretsiz Hosting Servisi Olarak Kullanmak&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; aynı zamanda &lt;a href=&#34;http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/&#34;&gt;(Jekyll, Hugo)&lt;/a&gt; v.s. S.S.G.ler ile yapılan statik web sitelerine ücretsiz barındırma servisi (hosting) sağlaması ile göz dolduruyor.&lt;/p&gt;

&lt;p&gt;Bu sayede kendi blogunuzu teorik olarak &lt;strong&gt;0&lt;/strong&gt; masrafla hayata geçirmeniz mümkün. (Hosting masrafı dışında bir websitenin tek masrafı -eğer alacaksanız- custom domain ücretidir.)&lt;/p&gt;

&lt;p&gt;Sitenize özel bir domain ismi almak isterseniz &lt;strong&gt;.com&lt;/strong&gt; ve &lt;strong&gt;.net&lt;/strong&gt; gibi çok kullanılanlar dışındaki domainleri bedavaya getirebilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; görüp görebileceğiniz en sağlam (stabil) hosting servislerinden, site yüzbinlerce geliştiriciye hizmet verdiğinden 365 gün full hizmete açık. Down (hizmet dışı kalma) istisna süresi 0.0001% seviyesinde.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; hakkında daha önce oldukça bilgi vermiştim zaten. Lütfen o &lt;a href=&#34;http://pythonistan.net/blog/git-ve-github/&#34;&gt;makaleme&lt;/a&gt; bir göz atın.&lt;/p&gt;

&lt;h3 id=&#34;github-a-giriş&#34;&gt;Github&amp;rsquo;a Giriş&lt;/h3&gt;

&lt;p&gt;Github&amp;rsquo;ı kullanmak için üye olmak gerekiyor. &lt;strong&gt;Github&lt;/strong&gt; &lt;a href =&#34;https://github.com/&#34; target = &#34;_blank&#34;&gt; ana sayfasında&lt;/a&gt; üye olun (Sign Up) ve kendinize bir kullanıcı ismi belirleyin.&lt;/p&gt;

&lt;p&gt;Kullanıcı isminiz ile giriş yaptığınızda ana sayfada &lt;code&gt;Start a project&lt;/code&gt; düğmesine basın. Projenize &lt;em&gt;kullanıcıisminiz.github.io&lt;/em&gt; ismini verin ve &lt;code&gt;Create repository&lt;/code&gt; yeşil düğmesine basın. (&amp;#8593;)&lt;/p&gt;

&lt;h2 id=&#34;web-site-dosyalarımızı-hazırlayalım&#34;&gt;Web Site Dosyalarımızı Hazırlayalım&lt;/h2&gt;

&lt;p&gt;Sitemizi &lt;a href=&#34;http://pythonistan.net/categories/hugo/&#34;&gt;yapıp bitirdik&lt;/a&gt;, son olarak sitemizin ana klasöründe &lt;code&gt;hugo&lt;/code&gt; komutunu verdik ve &lt;strong&gt;Github&lt;/strong&gt;&amp;lsquo;a yükleyeceğimiz dosyalar site ana klasörünün altında yeni oluşturulan &lt;em&gt;public&lt;/em&gt; klasörümüzün altında hazır. (Foto 1 ve 2)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-5/hugo_generating_website.png&#34; alt=&#34;Hugo Websiteyi Oluşturdu - Generate&#34; /&gt;
&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-5/hugo_public_klasoru.png&#34; alt=&#34;Hugo Public Klasörü Görüntüsü&#34; /&gt; &lt;br&gt;&lt;em&gt;&amp;ldquo;Foto1: Hugo Websiteyi Oluşturdu - Generate&amp;rdquo; &amp;mdash; &amp;ldquo;Foto2: Hugo Public Klasörü Görüntüsü&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ÖNEMLİ NOT&lt;/strong&gt;: Siteyi generate etmeden (yani &lt;code&gt;hugo&lt;/code&gt; komutunu vermeden önce) konfigürasyon dosyanızdaki (&lt;em&gt;config.toml&lt;/em&gt;) baseURL kısmının karşısında &amp;ldquo;&lt;a href=&#34;https://kullanıcıadınız.github.io&amp;quot;&#34;&gt;https://kullanıcıadınız.github.io&amp;quot;&lt;/a&gt; yazdığınızdan emin olun.&lt;/p&gt;

&lt;p&gt;Yukarıdaki işlemi yapmadan siteyi oluşturduysanız &lt;em&gt;public&lt;/em&gt; klasörünü silin, bu işlemi yapın ve sonrasında siteyi tekrar oluşturun(&lt;code&gt;hugo&lt;/code&gt;). Aksi halde Github&amp;rsquo;da tema şablonlarını doğru olarak göremeyebilirsiniz.&lt;/p&gt;

&lt;h3 id=&#34;web-sitemize-de-hadi-git-gari-diyoruz&#34;&gt;Web Sitemize &amp;lsquo;de hadi &amp;ldquo;git&amp;rdquo; gari&amp;rsquo; Diyoruz&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;1. Şimdi *public* klasörüne Powershell ile gidin. (D:\siteler\deneme\public)
2. Github&#39;a yüklemek için bunu bir proje olarak tanıtalım. `git init` komutunu verin.
3. Klasör içindeki her şeyi komit için eklemek üzere işaretleyin. `git add .`
4. Dosyaları komitle. `git commit -m &amp;quot;ilk komitimiz&amp;quot;
5. Şimdi uzak sunucuyu tanıtalım. `git remote add origin https://github.com/kullaniciadiniz/kullaniciadiniz.github.io.git`
6. Evet, şimdi gidiyoruz: `git push -u origin master`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; bize kullanıcı adımızı ve parolamızı soracak. Onlara cevap verin ve en geç 3 saniye içinde sitemiz yüklenmiş olacak. 1-2 saniye de sitenin kendine gelmesini bekleyin. Sitenizi tarayıcınızda açtığınızda artık sitenizin webde olduğunu göreceksiniz. Vauv!&lt;/p&gt;

&lt;h2 id=&#34;sitenize-custom-özel-domain-ismi-verme&#34;&gt;Sitenize Custom (Özel) Domain İsmi Verme&lt;/h2&gt;

&lt;p&gt;kullanıcıisminiz.github.io ismi herkes için uygun olmayabilir. Siz daha profesyonel görünme adına ornek.net / www.ornek.com gibi bir isim kullanmak isteyebilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; özel &lt;em&gt;domain&lt;/em&gt; isimleri için destek sağlıyor. İsminizi aldıktan sonra yapmanız gereken &lt;strong&gt;iki&lt;/strong&gt; (2) şey var:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Domaini aldığınız şirketin control panelinde bir &lt;strong&gt;CNAME&lt;/strong&gt; kaydı (duruma göre &lt;strong&gt;A record&lt;/strong&gt;) oluşturup buraya Github&amp;rsquo;ın IP adreslerini vermek.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CNAME&lt;/strong&gt; isimli bir metin dosyası oluşturup bu dosyanın içine &lt;em&gt;domain&lt;/em&gt; isminiz ne ise onu yazarak (örnek: www.domainisminiz.com) dosyayı sitenin &lt;em&gt;static&lt;/em&gt; klasörünün içine atmak.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Detaylı bilgiye &lt;a href = &#34;https://help.github.com/articles/using-a-custom-domain-with-github-pages/&#34; target = &#34;_blank&#34;&gt; Github destek sayfaları&lt;/a&gt;ndan ulaşabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-5/hugo_sitemiz_githuba_yuklendi.png&#34; alt=&#34;Sitemizin Github&#39;a Yüklenmiş Görüntüsü&#34; /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Şükür, &lt;strong&gt;Hugo ile statik bir websitesi nasıl yapılır&lt;/strong&gt; serimiz burada bitti. Bitmeyeceğini sanmıştım bir an.&lt;/p&gt;

&lt;p&gt;Umarım faydalı olmuştur. Seride daha detaylı açıklamaya ihtiyaç duyduğunuz konuları sormaktan çekinmeyin lütfen. İyi çalışmalar&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo ile Statik Bir Websitesi Nasıl Yapılır? - Birinci Bölüm : Hugo Kurulumu</title>
      <link>http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-1/</link>
      <pubDate>Mon, 22 Aug 2016 00:17:50 -0400</pubDate>
      
      <guid>http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-1/</guid>
      <description>

&lt;h2 id=&#34;web-teknolojileri&#34;&gt;Web Teknolojileri&lt;/h2&gt;

&lt;p&gt;Sitemi yayınlamaya başladığımda ele almayı planladığım konulardan biri &lt;a href=&#34;http://pythonistan.net/blog/merhaba-dunya/&#34;&gt;web teknolojileri&lt;/a&gt; idi.&lt;/p&gt;

&lt;h3 id=&#34;django-python-temelli-bir-web-framework&#34;&gt;Django: Python Temelli Bir Web Framework&lt;/h3&gt;

&lt;p&gt;Amatör bir Paytonsever olarak web teknolojileri konusunu işlerken konumun &lt;a href = &#34;https://www.djangoproject.com/&#34; target = &#34;_blank&#34; &gt; &lt;strong&gt;Django&lt;/strong&gt; Web Framework&lt;/a&gt; olmasını arzu ederdim. Henüz kendimi Django&amp;rsquo;yu (Jango olarak okunuyor) size arz etmek için yetkin görmüyorum.&lt;/p&gt;

&lt;p&gt;Yine de madem &lt;em&gt;web teknolojileri&lt;/em&gt; dedik, bu konuda karınca kararınca işinize yarayacağına inandığım bilgileri paylaşmaya çalışacağım.&lt;/p&gt;

&lt;h3 id=&#34;hugo-statik-site-geliştiricisi-ssg&#34;&gt;Hugo Statik Site Geliştiricisi (SSG)&lt;/h3&gt;

&lt;p&gt;Statik bir web sitesini &lt;a href = &#34;https://gohugo.io/&#34; target = &#34;_blank&#34; &gt; Hugo&lt;/a&gt; ve &lt;a href = &#34;https://github.com/&#34; target = &#34;_blank&#34; &gt; Github&lt;/a&gt; yardımı ile &lt;strong&gt;0&lt;/strong&gt; (evet, yanlış duymadınız. Sıfır) masraf ile kurabilir, sözünüzü Dünya ile paylaşabilirsiniz. Bu meyanda size herhangi bir katkı sağlayabilirsem bu benim için büyük bir kıvanç olur.&lt;/p&gt;

&lt;p&gt;Evet, gelelim Hugo&amp;rsquo;ya ve faydalarına! Geçen yazımda Hugo&amp;rsquo;dan ve faydalarından biraz &lt;a href=&#34;http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/&#34;&gt;bahsetmiştim&lt;/a&gt;. Arzu edenler o yazıya bir göz atabilirler.&lt;/p&gt;

&lt;p&gt;Bu yazıda SSG&amp;rsquo;miz Hugo&amp;rsquo;yu bilgisayarımıza nasıl kuracağımızı herkesin anlayabileceği bir şekilde bebek adımlarıyla anlatmaya çalışacağım.&lt;/p&gt;

&lt;p&gt;Geçen haftaki yazıda aslında &lt;a href=&#34;http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/&#34;&gt;Hugo kurulumundan&lt;/a&gt; azıcık bahsetmiştim, ama o makale istediğim netlikte olmadı, bu sefer çok daha detaylı bir &lt;strong&gt;nasıl yapılır klavuzu&lt;/strong&gt; hazırlamaya karar verdim.&lt;/p&gt;

&lt;p&gt;Beş bölümlük &lt;strong&gt;Hugo ile statik bir websitesi nasıl yapılır&lt;/strong&gt; serimin huzurunuzdaki ilk &lt;strong&gt;(1.)&lt;/strong&gt; bölümü &lt;a href = &#34;#hugokur&#34;&gt; Hugo kurulumuna&lt;/a&gt; ayrıldı. Diğer adımlar ise şöyle: &lt;strong&gt;2.&lt;/strong&gt;: &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-2/&#34;&gt;Hugo ile Siteyi Lokal Bilgisayarda Geliştirme&lt;/a&gt;, &lt;strong&gt;3.&lt;/strong&gt;: &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-3/&#34;&gt;Geliştirdiğimiz Web Sitesini ve Temayı Özelleştirme&lt;/a&gt;, &lt;strong&gt;4.&lt;/strong&gt;: &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-4/&#34;&gt;Geliştirdiğimiz Web Sitesinin Sayfalarını Düzenleme (Editing)&lt;/a&gt; &lt;strong&gt;5.&lt;/strong&gt;: &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-5/&#34;&gt;Geliştirdiğimiz Web Sitesini Github ile Web&amp;rsquo;de Ücretsiz Barındırma (Hosting)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Evet, fazla uzattık, şimdi hemen aksiyona geçelim&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;windows-için-hugo-kurulumu&#34;&gt;Windows İçin Hugo Kurulumu&lt;/h2&gt;

&lt;p&gt;Windows versiyonunuz ne olursa olsun (Win10/8/7/Xp) (&lt;em&gt;&amp;ldquo;Xp kullanan var mı hala ya???&amp;rdquo; :)&lt;/em&gt; ) aşağıda gösterildiği gibi Hugo&amp;rsquo;yu kurabilirsiniz.&lt;/p&gt;

&lt;h3 id=&#34;1-sistem-mimarisini-tespit-ve-hugo-yu-indirme&#34;&gt;1. Sistem Mimarisini Tespit ve Hugo&amp;rsquo;yu İndirme&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;İlk iş olarak Windows&amp;rsquo;unuzun hangi bit mimarisi ile çalıştığını belirleyin. Zira 32 ve 64 Bit mimari için farklı Hugo sürümleri var.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a)&lt;/strong&gt; Masaüstü&amp;rsquo;nüzdeki Bilgisayar simgesine sağ tıklayıp açılan menüden &lt;code&gt;Özellikler&lt;/code&gt;&amp;lsquo;i seçin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;b)&lt;/strong&gt; Açılacak pencerede &lt;strong&gt;Sistem Türü&lt;/strong&gt; bilgisinin karşısında sisteminizin mimarisini öğrenebilirsiniz. (Bkz. Üstteki Ekran Görüntüsü)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Mimarinizi öğrendiğize göre size uygun olan &lt;strong&gt;Hugo&lt;/strong&gt; sürümünü indirelim.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a)&lt;/strong&gt; Hugo &lt;a href = &#34;https://github.com/spf13/hugo/releases&#34; target = &#34;_blank&#34; &gt; download sayfasına&lt;/a&gt; gidin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;b)&lt;/strong&gt; Bugün itibarı ile (&lt;strong&gt;22 Ağustos 2016&lt;/strong&gt;) Hugo&amp;rsquo;nun stabil sürüm no.su &lt;strong&gt;0.16&lt;/strong&gt;. Aşağıdaki resimde görülen Windows dosyalarından size uygun olanı indirin. (download)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugo_windows_uygun_surum.png&#34; alt=&#34;Windows&#39;umuz İçin Hugo&#39;nun Uygun Versiyonunu İndiriyoruz&#34; /&gt; &lt;br&gt;&lt;em&gt;&amp;ldquo;Windows&amp;rsquo;umuz İçin Hugo&amp;rsquo;nun Uygun Sürümünü İndiriyoruz&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-hugo-zip-dosyasını-açma-ve-sürücüye-kopyalama&#34;&gt;2. Hugo Zip Dosyasını Açma ve Sürücüye Kopyalama&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Hugo&lt;/strong&gt; executable (.exe) dosyasını bilgisayarımıza indirdikten sonra kolay ulaşım için daha uygun bir yere koyacağız.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a)&lt;/strong&gt; Bilgisayarımızın &lt;code&gt;C:\&lt;/code&gt; klasörünün hemen altına &lt;code&gt;hugo&lt;/code&gt; isimli yeni bir boş klasör oluşturun.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;b)&lt;/strong&gt; Zip dosyasının içinde bulunan &lt;code&gt;hugo.exe&lt;/code&gt; dosyasını oluşturduğumuz yeni klasörün içine kopyalayın. (yada taşıyın, fark etmez.) [Alt solda ilk resim&amp;#8595;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;c)&lt;/strong&gt; Zip dosyasını ve gereksiz diğer dosyaları (readme,copyright v.s.) silebilirsiniz. İhtiyacımız olan tek dosya &lt;code&gt;hugo.exe&lt;/code&gt; çünkü.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugoyu_windowsa_koyma.gif&#34; alt=&#34;Hugo&#39;yu Yerel Diskimizde Uygun Bir Yere Koyuyoruz&#34; /&gt; &lt;br&gt;&lt;em&gt;&amp;ldquo;Hugo&amp;rsquo;yu Yerel Diskimizde Uygun Bir Yere Koyuyoruz&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-hugo-yu-ortam-değişkenine-path-ekleme&#34;&gt;3. Hugo&amp;rsquo;yu Ortam Değişkenine (PATH) Ekleme&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Şimdi Hugo&amp;rsquo;yu PATH&amp;rsquo;a ekleyeceğiz, zira öyle yapmazsak &lt;strong&gt;Hugo&lt;/strong&gt;&amp;lsquo;ya &lt;a href=&#34;http://pythonistan.net/blog/Powershell-ve-cmd/&#34;&gt;komut satırından&lt;/a&gt; (Yeni versiyon Windows&amp;rsquo;lar için &lt;strong&gt;Powershell&lt;/strong&gt;, Xp&amp;rsquo;ciler içinse &lt;strong&gt;Cmd&lt;/strong&gt;) rahatlıkla ulaşamayız. Path&amp;rsquo;a ekledikten sonra herhangi bir klasör içinden &lt;strong&gt;Hugo&lt;/strong&gt;&amp;lsquo;ya hemen ulaşabileceğiz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a)&lt;/strong&gt; Yukarıdaki gibi Masaüstü&amp;rsquo;nüzdeki Bilgisayar simgesine sağ tıklayıp &lt;code&gt;Özellikler&lt;/code&gt; menüsünü tıklayarak açılan pencereden &lt;code&gt;Gelişmiş Sistem Ayarları&lt;/code&gt;&amp;lsquo;nı seçin. [Altta ilk baştaki resim&amp;#8595;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;b)&lt;/strong&gt; &lt;code&gt;Sistem Özellikleri&lt;/code&gt; penceresinin üçüncü sayfası (tabı) olan &lt;code&gt;Gelişmiş&lt;/code&gt; sayfasını açarak en alttaki &lt;code&gt;Ortam Değişkenleri&lt;/code&gt; düğmesine tıklayın. [Alt ortadaki resim&amp;#8595;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;c)&lt;/strong&gt; &lt;code&gt;Ortam Değişkenleri&lt;/code&gt; penceresinde üstteki ilk &lt;code&gt;Yeni...&lt;/code&gt; düğmesine tıklayın. Açılacak &lt;code&gt;Yeni Kullanıcı Değişkeni&lt;/code&gt; küçük penceresinde &lt;code&gt;Değişken Adı:&lt;/code&gt; bölümünün karşısına &amp;ldquo;&lt;strong&gt;PATH&lt;/strong&gt;&amp;rdquo; değerini girin. &lt;code&gt;Değişken Değeri&lt;/code&gt; bölümünün karşısına &amp;ldquo;&lt;strong&gt;C:\hugo&lt;/strong&gt;&amp;rdquo; değerini yazın. (Tırnak işaretleri girilmeyecek.)&lt;/p&gt;

&lt;p&gt;(ÖNEMLİ NOT: Son değeri &lt;code&gt;C:\hugo&lt;/code&gt; kendiniz klavyeden girebileceğiniz gibi &lt;code&gt;Dizine Gözat...&lt;/code&gt; seçeneği ile gözatma penceresinden gösterebilirsiniz.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DİKKAT!!!&lt;/strong&gt; Dosyayı değil, dizini hedef olarak gösteriyoruz. Burası önemli! [Alt en sağdaki resim&amp;#8595;]&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugo_path_a_ekleme_1.jpg&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Bilgisayarım - Özellikler - Gelişmiş Sistem Ayarları Penceresine Ulaşma&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugo_path_a_ekleme_1_thumb.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugo_path_a_ekleme_2.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Gelişmiş Tab Sayfasındaki Ortam Değişkenleri Düğmesine Tıklıyoruz&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugo_path_a_ekleme_2_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugo_path_a_ekleme_3.jpg&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Kullanıcı Değişkenine (PATH) Hugo&#39;yu Ekliyoruz.&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugo_path_a_ekleme_3_thumb.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;4-hugo-kurulumu-neredeyse-bitti-kontrol-zamanı&#34;&gt;4. Hugo Kurulumu: Neredeyse Bitti, Kontrol Zamanı!&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Şimdi bilgisayarınızı yeniden başlatın. Herşeyin istediğimiz gibi olup olmadığını kontrol edelim.&lt;/p&gt;

&lt;p&gt;a) &lt;a href=&#34;http://pythonistan.net/blog/Powershell-ve-cmd/&#34;&gt;Powershell&lt;/a&gt;&amp;lsquo;i yada Cmd&amp;rsquo;yi açın. Herhangi bir klasör içinde &lt;code&gt;hugo&lt;/code&gt; komutunu yazın ve Enter&amp;rsquo;a basın. Cevap olarak &amp;ldquo;unable to locate config file&amp;rdquo; şeklinde bir mesaj alıyorsak &lt;a name=&#34;hugokur&#34;&gt;Hugo kurulumu başarı ile gerçekleştirildi&lt;/a&gt; demektir.&lt;/p&gt;

&lt;p&gt;b) Üstteki hatayı alıyoruz zira henüz hiç bir site oluşturmadık. Site oluşturulduğunda config dosyamız otomatik olarak oluşturulacaktır. Site oluşturmayı bir önceki yazımdan hatırlıyor olmalısınız. Hatırlarsanız, &lt;a href=&#34;http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/#hugo-ile-bir-site-yapalım-windows-için&#34;&gt;orada&lt;/a&gt; &lt;code&gt;hugo new site yenisite&lt;/code&gt; komutunu vererek bir site oluşturmuştuk.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugo_basarili_kurulum.jpg&#34; alt=&#34;Windows&#39;umuz İçin Hugo&#39;nun Uygun Versiyonunu İndiriyoruz&#34; /&gt; &lt;br&gt;&lt;em&gt;&amp;ldquo;Hugo&amp;rsquo;nun Başarı ile Kurulduğunu Gösteren Ekran Görüntüsü&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Hugo&amp;rsquo;yu sistemimize kurmayı başardık. Şimdi sıra &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-2/&#34;&gt;Hugo ile basit ama güzel bir websitesi&lt;/a&gt; yapmaya geldi. Sizi çok bekletmeyeceğim umarım.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git Nedir? Nerede ve Nasıl Kullanılır?</title>
      <link>http://pythonistan.net/blog/git-ve-github/</link>
      <pubDate>Sun, 21 Aug 2016 00:17:50 -0400</pubDate>
      
      <guid>http://pythonistan.net/blog/git-ve-github/</guid>
      <description>

&lt;h2 id=&#34;git-ile-tanışma&#34;&gt;Git ile Tanışma&lt;/h2&gt;

&lt;p&gt;Bir önceki yazımda bahsettiğim &lt;a href=&#34;http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/&#34;&gt;Hugo ve Jekyll&lt;/a&gt; ile web sitesi yapma olayına girişmeden önce üzerinde durmamız gereken bir konu var: &lt;strong&gt;Git&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Bazı temel &lt;code&gt;git&lt;/code&gt; komutlarını öğrenmemiz gerekiyor zira web sitemizi oluştururken dosya indirme ve siteyi oluşturduktan sonra ise sitemizi web server&amp;rsquo;a yüklemek için bu komutları kullanacağız.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt; bizim için sadece dosyalarımızı yedeklemek yada güncellemeleri tutmakla kalmayıp dosyaları web&amp;rsquo;e transfer etmede kullanacağımız bir yol olacak. Eskiden bu iş için ftp protokolu ve ftp programları kullanılırdı.&lt;/p&gt;

&lt;h3 id=&#34;git-versiyon-kontrol-sistemi&#34;&gt;Git : Versiyon Kontrol Sistemi&lt;/h3&gt;

&lt;p&gt;Git yazılımlar için kullanılan bir çeşit versiyon kontrol sistemidir. Yazılımcılar bu tür sistemlerle kaynak kodunda zaman içinde yapılan değişimleri görüp yönetebilirler.&lt;/p&gt;

&lt;p&gt;&lt;a href = &#34;https://tr.wikipedia.org/wiki/S%C3%BCr%C3%BCm_kontrol_sistemi&#34; target = &#34;_blank&#34;&gt; Versiyon kontrol sistemleri&lt;/a&gt; bir yazılımda herhangi bir anda yada herhangi bir kişi tarafından yapılan her türlü değişikliğin hepsinin kaydını tutar. Herhangi bir hata durumunda kolaylıkla eski stabil duruma dönüş olanağı verir.&lt;/p&gt;

&lt;p&gt;Bu şekilde çok değerli olan kaynak kodumuza gelecek zararları önleneyebiliriz.&lt;/p&gt;

&lt;p&gt;Git&amp;rsquo;in mucidi Linux&amp;rsquo;un da ilk geliştiricisi olan Linus Torvalds.&lt;/p&gt;

&lt;h3 id=&#34;git-bizim-için-anlamı&#34;&gt;Git : Bizim İçin Anlamı&lt;/h3&gt;

&lt;p&gt;Yukarıda &lt;strong&gt;Git&lt;/strong&gt;&amp;lsquo;i tanımlayan ifadeler fazla soyut kalmış olabilir. Yada kendinize &amp;ldquo;Benim büyük yazılım projeleri ile ilgim yok, o halde neden &lt;code&gt;git&lt;/code&gt;&amp;lsquo;e ihtiyaç duyayım?&amp;rdquo; sorusunu soruyor olabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt;, üzerinde yüzlerce kişinin aynı anda çalıştığı ve katkı verdiği büyük yazılım projeleri (Linux, v.d.) yada milyarlık firmaların üzerinde çalıştığı envai çeşit projeler (mesela kitap revizyonu, v.d.) için değil, her tür boyuttaki kişisel projelerde kullanabilecek imkanlar sağlıyor.&lt;/p&gt;

&lt;p&gt;Bu sistemi anlamak adına basit bir örnek verelim: Üzerinde çalıştığımız bir word dosyamız olsun. Mesela uzunca bir doküman yazıyoruz. Dosyamızı her gün açıp bir şeyler ekleyip, çıkardığımızı varsayalım.&lt;/p&gt;

&lt;p&gt;Böyle bir çalışmayı şu ana kadar yaptıysanız bazen yapmamanız gereken bir hata yaptığınızı, eklememeniz gereken bir şeyi eklediğinizi bazen de tersini yaptığınızı görmüşsünüzdür. Dolayısıyla kaçırdığınız bir şeyler hep olur.&lt;/p&gt;

&lt;p&gt;Bazen de ana dosyanın üzerine kaydetmeyip &lt;code&gt;farklı kaydet&lt;/code&gt; seçeneğini kullanarak birbirinin benzeri onlarca dosya oluşturduğunuzu şaşkınlıkla görür, hangisini en son oluşturduğunuzu anlamak için bir sürü zahmet çekersiniz.&lt;/p&gt;

&lt;p&gt;Bazen bir dosyada bulunan bir bilgi diğerinde bulunmaz, o dosyadan diğer dosyaya taşımanız gerekir. Kısaca büyük bir zahmettir.&lt;/p&gt;

&lt;p&gt;Hele bir de bu işlemi iki ayrı lokasyonda (aynı lokasyonda iki ayrı bilgisayarda olabilir) gerçekleştiriyorsanız işlem içinden çıkılmaz bir hal alır.&lt;/p&gt;

&lt;h3 id=&#34;git-master-ve-branch&#34;&gt;Git : Master ve Branch&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt; bu tür durumlar için dosyanın ana kopyası (&lt;em&gt;master&lt;/em&gt;) ve yukarıdaki örnekteki gibi kaydedilen diğer versiyonlar için branş kopyası (&lt;em&gt;branch&lt;/em&gt;) konseptini sunuyor.&lt;/p&gt;

&lt;p&gt;Bir ana dal ve yüzlerce farklı noktadan onlarca katkı verenin oluşturduğu dallardan oluşan bir ağaç gibi düşünün.&lt;/p&gt;

&lt;p&gt;Branşda oluşan değişikliklerden memnunsanız branşı ana dala bağlayabilirsiniz. (&lt;em&gt;merge&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;Memnun değilseniz iptal edip ana kopyadan yeni bir dal oluşturabilir, kullanmadığınız dalları iptal edebilirsiniz.&lt;/p&gt;

&lt;p&gt;Dosyalarımız &lt;code&gt;git&lt;/code&gt; sisteminde otomatik olarak yedeklenir. Herhangi bir anda dosya üzerinde o ana kadar yapılan düzeltmeleri (&lt;code&gt;commit&lt;/code&gt;) görebilir (&lt;code&gt;git status&lt;/code&gt;) ve herhangi bir andaki duruma (statüye) dönebilirsiniz. (&lt;code&gt;git reset --hard statü.nosu&lt;/code&gt;)&lt;/p&gt;

&lt;h3 id=&#34;git-repository-depo&#34;&gt;Git : Repository (Depo)&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt; sisteminde oluşturduğumuz her bağımsız proje birimine repository deniyor. Repo&amp;rsquo;nun içeriği dosya, klasör, foto, video, excel tablosu, ve her tür veri seti olabilir.&lt;/p&gt;

&lt;p&gt;Herhangi bir repo oluşturduğumuzda onun master (ana) kopyası hemen oluşturulur. Üzerinde çalışabileceğimiz branş kopyalarını biz oluşturacağız. Branş kopyaları üzerinde denediğimiz ve memnun kaldığımız değişiklikleri ana kopyayla birleştiriyoruz. (merge)&lt;/p&gt;

&lt;h2 id=&#34;git-bizi-asıl-ilgilendiren-komutlar&#34;&gt;Git : Bizi Asıl İlgilendiren Komutlar&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt; sistemi gerçekten çook geniş ve başlı başına uzmanlaşılabilecek bir alan. Biz asıl olarak &lt;code&gt;git&lt;/code&gt; ile bir web server&amp;rsquo;a ulaşmak ve oradan birşeyler indirmek (pull - clone), Git sistemini kullanan en önemli sitelerden biri olan Github&amp;rsquo;a dosya yüklemek (push), repo oluşturup (init), repoya yapacağımız son değişiklikleri güncelleyip düzeltmek (commit) gibi işlemler yapacağız.&lt;/p&gt;

&lt;p&gt;Hadi başlayalım.&lt;/p&gt;

&lt;h3 id=&#34;git-kuruyoruz&#34;&gt;Git kuruyoruz.&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt; kurmak için &lt;a href = &#34;https://git-scm.com/downloads&#34; target = &#34;_blank&#34;&gt; Git websitesine&lt;/a&gt; gidip sisteminize uygun olan versiyonu indirin ve kurun. &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-1&#34;&gt;(32 Bit / 64 Bit)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Önemli: Kurulum sırasında ortam değişkenine (PATH) ekleme seçeneğini ikinci seçenek olarak seçin. Yani &amp;ldquo;Use Git from the Windows Command Prompt&amp;rdquo;. (hemen altta resim 1) Bu şekilde &lt;a href=&#34;http://pythonistan.net/blog/python-kabukta-ilk-program&#34;&gt;(Powershell)&lt;/a&gt;&amp;lsquo;den sıkıntısız olarak &lt;code&gt;git&lt;/code&gt; komutlarını çalıştıracağız. Diğer seçenekleri varsayılanlar olarak bırakın.&lt;/p&gt;

&lt;p&gt;Git&amp;rsquo;i &lt;a href=&#34;http://pythonistan.net/blog/Powershell-ve-cmd/&#34;&gt;komut satırından&lt;/a&gt; çalıştıracağımız için daha önceki yazılardan aşina olduğunuz &lt;a href=&#34;http://pythonistan.net/blog/Powershell-ve-cmd/#öyleyse-powershell-i-açalım&#34;&gt;(Powershell)&lt;/a&gt;&amp;lsquo;i yine çalıştırın. Kurulumun doğru olup olmadığını anlamak için herhangi bir klasör içinde &lt;code&gt;git&lt;/code&gt; yazıp gelen cevaba bakabilirsiniz. (hemen altta resim 2)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/img/blog/git/git_windows_path_option.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Git&#39;i Powershell&#39;de Kullanmak İçin Ortam Değişkenine Ekliyoruz&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/git/git_windows_path_option_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;http://pythonistan.net/img/blog/git/git_kurulum_kontrolu.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Git&#39;in Windows&#39;taki Kurulumunu Kontrol Ediyoruz&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/git/git_kurulum_kontrolu_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;bir-repo-oluşturalım&#34;&gt;Bir Repo Oluşturalım&lt;/h3&gt;

&lt;p&gt;Şimdi bilgisayarınızın içinde herhangi bir klasöre gidin ve şu komutu verin: &lt;code&gt;git init&lt;/code&gt;. Klasörünüzün içinde bir kaç dosya bulunsun. Bu komut git&amp;rsquo;e bu klasörün içinde bir repo oluşturulacağını ve &lt;code&gt;git&lt;/code&gt; sisteminin bu repoyu takibe başlayacağını söylüyor.&lt;/p&gt;

&lt;p&gt;Daha sonra &lt;code&gt;git add .&lt;/code&gt; komutunu vererek klasörümüzün içinde bulunan her şeyin (her tür dosya) repoya eklenmesini istiyoruz.&lt;/p&gt;

&lt;p&gt;Şimdi &lt;code&gt;git commit -m &amp;quot;dosyaları repoya ilk kez bagliyoruz&amp;quot;&lt;/code&gt; yazıp Enter&amp;rsquo;a basarak repoya eklediğimiz dosyaları tam o andaki haliyle ve durumuyla (son düzeltme durumu-last commit) repomuza bağlanması işlemini gerçekleştiriyoruz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/git/git_ilk_komutlar_1.png&#34; alt=&#34;Git ile Bazı Temel Komutlar&#34; /&gt; &lt;br&gt;&amp;ldquo;Git ile Bazı Temel Komutları Deneyelim&amp;rdquo;&lt;/p&gt;

&lt;h2 id=&#34;sıra-uzak-sunucu-olan-github-a-geldi&#34;&gt;Sıra Uzak Sunucu Olan Github&amp;rsquo;a Geldi&lt;/h2&gt;

&lt;p&gt;Lokalda (yerel bilgisayar) yapacağımız işlemler bitti. Şimdi sıra ekleyip repoya bağladığımız dosyalarımızı git vasıtasıyla &lt;strong&gt;Github&lt;/strong&gt;&amp;lsquo;a (yada Gitlab/Bitbucket, hangisini kullanıyorsanız ona) yüklemek.&lt;/p&gt;

&lt;p&gt;İlk olarak &lt;a href = &#34;https://github.com/&#34; target =&#34;_blank&#34;&gt; Github&lt;/a&gt; sitesine gidin ve kayıt olun. (Ana ekranda sağ üstteki yeşil Sign up düğmesi) Kendinize kısa bir kullanıcı ismi belirleyin.&lt;/p&gt;

&lt;p&gt;Kayıttan sonra kayıt sırasında verdiğiniz mail adresinize bir teyit maili gelecektir, onu teyit edin.&lt;/p&gt;

&lt;p&gt;Kayıt işlemi tamamlandıysa şimdi ana ekranda &lt;code&gt;Start a project&lt;/code&gt; düğmesine tıklayın. Reponuza &lt;em&gt;test&lt;/em&gt; adını verin ve &lt;code&gt;Create Repository&lt;/code&gt; düğmesine tıklayarak reponuzu oluşturun. (üstteki büyük resim)&lt;/p&gt;

&lt;h3 id=&#34;github-a-yükleme-yapalım&#34;&gt;Github&amp;rsquo;a Yükleme Yapalım&lt;/h3&gt;

&lt;p&gt;Şimdi Lokalde başlattığımız repomuzun içeriğindeki dosyaları web&amp;rsquo;e yükleyelim. Komut satırı &lt;a href=&#34;http://pythonistan.net/blog/Powershell-ve-cmd/&#34;&gt;Powershell&lt;/a&gt;&amp;lsquo;de vereceğimiz komut: &lt;code&gt;git remote add origin https://github.com/kullaniciadiniz/test.git&lt;/code&gt; (bu komutu &lt;code&gt;git init&lt;/code&gt; komutunu verdiğiniz aynı klasörün içinden çalıştıracaksınız)&lt;/p&gt;

&lt;p&gt;Son olarak aşağıdaki komutu girin: &lt;code&gt;git push -u origin master&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; size şimdi kullanıcı adınızı ve parolanızı soracak. Kullanıcı adınızı girin ve Enter&amp;rsquo;a basın. Şifreniz istendiğinde yine aynı şekilde girin (şifreniz ekranda görülmeyecektir) ve Enter&amp;rsquo;a basın. Dosyalarınız webdeki alanınıza yüklenecek.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/git/git_ile_githuba_dosya_push_yapma.png&#34; alt=&#34;Git ile Github&#39;a Dosyaları Push Yapma&#34; /&gt; &lt;br&gt;&amp;ldquo;Git ile Github&amp;rsquo;a Dosyaları Yüklüyoruz&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Bir - iki saniye sonra Github websitesini kontrol edin. Yüklediğiniz dosyaların test isimli reponuzun altında olduğunu göreceksiniz.&lt;/p&gt;

&lt;p&gt;Şu andan itibaren takip edilen klasörünüzün içindeki dosyalarda yaptığınız her değişikliğin kaydı tutulacak ve commit (düzeltme) yaptığınız anda bu değişiklikler repo ile güncellenmek amacıyla tutulacaktır.&lt;/p&gt;

&lt;p&gt;Tersi de geçerli. Yani uzak sürücüdeki (web) dosyalarda herhangi bir değişiklik düzeltmesi yaptıysanız bu düzeltmeler lokaldeki kopyasıyla eşitlenecektir. (Bunun için verilen komut: &lt;code&gt;git pull origin master&lt;/code&gt;)&lt;/p&gt;

&lt;h2 id=&#34;komut-satırı-sistemlerinin-yaşattığı-duygular&#34;&gt;Komut Satırı Sistemlerinin Yaşattığı Duygular&lt;/h2&gt;

&lt;p&gt;Bizim gibi acemiler için &lt;a href=&#34;http://pythonistan.net/blog/Powershell-ve-cmd/&#34;&gt;komut satırı&lt;/a&gt; kendisinden saygı ile karışık korku beslenen, anlaşılmaz ve hatta biraz mistik bir konu gibi.&lt;/p&gt;

&lt;p&gt;Her an bir yanlış yapıp sistemi mahvedeceğim duygusu &lt;a href=&#34;http://pythonistan.net/blog/Powershell-ve-cmd/&#34;&gt;komut satırını&lt;/a&gt; kullanırken çok kere aklıma gelmiştir.&lt;/p&gt;

&lt;p&gt;İşletim sistemi olarak Windows _(&lt;i class=&#39;fa fa-windows&#39;&gt;&lt;/i&gt;) ve Mac (&lt;i class=&#39;fa fa-apple&#39;&gt;&lt;/i&gt;) kullandıysanız siz de bu yazımda bahsettiğim şeylere biraz öyle bakmış olabilirsiniz.&lt;/p&gt;

&lt;p&gt;Ancak meraklanmayın, burada sisteminize zarar verebilecek herhangi bir şey anlatmadım. Bizim için son derece yararlı olacak temel &lt;code&gt;git&lt;/code&gt; komutlarını ele aldık.&lt;/p&gt;

&lt;p&gt;Buradaki 5-6 &lt;code&gt;git&lt;/code&gt; komutunu değişik klasörlerde tekrar edin, iyi anladığınıza emin olun. Çok yararını göreceğinize sizi temin ederim.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-1&#34;&gt;Hugo ile website yapımına&lt;/a&gt; yarın başlıyoruz. Öyleyse, &lt;strong&gt;hazır mıyız!!!?&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>