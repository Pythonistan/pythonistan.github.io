<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Pythonistan</title>
    <link>http://pythonistan.net/blog/</link>
    <description>Recent content in Blogs on Pythonistan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>tr-TR</language>
    <lastBuildDate>Sun, 11 Sep 2016 00:17:50 -0400</lastBuildDate>
    <atom:link href="http://pythonistan.net/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Python ile İlgili Yerli Yabancı Kaynaklar</title>
      <link>http://pythonistan.net/blog/Python-kaynaklari/</link>
      <pubDate>Sun, 11 Sep 2016 00:17:50 -0400</pubDate>
      
      <guid>http://pythonistan.net/blog/Python-kaynaklari/</guid>
      <description>

&lt;h1 id=&#34;python-kaynakları&#34;&gt;Python Kaynakları&lt;/h1&gt;

&lt;p&gt;Bloguma şöyle bir baktım da &lt;strong&gt;Python&lt;/strong&gt; ile ilgili son yazıyı yayımlayalı bayağı zaman geçmiş. Bu yazıda &lt;strong&gt;Python&lt;/strong&gt; hakkında yararlandığım kaynaklardan bir seçki yapmaya karar verdim.&lt;/p&gt;

&lt;p&gt;Python popülerlik sıralamasında hemen her programlama listesinde ilk &lt;a href = &#34;http://www.tiobe.com/tiobe-index/&#34; target = &#34;_blank&#34;&gt; 5&amp;rsquo;e girdiğinden&lt;/a&gt; kendisiyle ilgili internette yüzbinlerce kaynak bulmak mümkün.&lt;/p&gt;

&lt;p&gt;Online olarak okuyabileceğiniz &lt;strong&gt;kitaplardan&lt;/strong&gt;, alabileceğiniz &lt;strong&gt;online kurslara&lt;/strong&gt;, profesyonel &lt;strong&gt;Pythoncuların bloglarından&lt;/strong&gt; sadece Python&amp;rsquo;a özgü websitelerine kadar binbir çeşit kaynak var.&lt;/p&gt;

&lt;p&gt;Tek başına &lt;a href = &#34;http://stackoverflow.com/questions/tagged/python&#34; target = &#34;_blank&#34;&gt; StackOverFlow&lt;/a&gt; sitesi bile devasa bir kaynak teşkil ediyor. &lt;strong&gt;Stackoverflow&lt;/strong&gt;&amp;lsquo;a ayrı bir yazımda detaylı değinmek istiyorum.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt; kaynaklarının hepsine birden yer vermem imkansız. Ben en çok faydalandığım / kullandığım kaynakları aşağıda vereceğim.&lt;/p&gt;

&lt;p&gt;Sizin faydalandığınız &lt;em&gt;güzel kaynaklar&lt;/em&gt; varsa yorum kısmından bilgilendirip bu listede yer almasını sağlayabilirsiniz.&lt;/p&gt;

&lt;h2 id=&#34;türkçe-kaynaklar&#34;&gt;Türkçe Kaynaklar&lt;/h2&gt;

&lt;p&gt;Öncelikle &lt;em&gt;Türkçe kaynaklara&lt;/em&gt; bir göz atalım. Bu dalda İngilizce&amp;rsquo;de olduğu kadar bir çeşitlilik ve miktardan söz edemiyoruz. Ancak çok kaliteli kaynakların varlığını göz ardı etmemek lazım.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Türkçe Python kaynak denince Yazar &lt;strong&gt;Fırat Özgül&lt;/strong&gt;&amp;lsquo;ün &lt;strong&gt;Python&lt;/strong&gt; orjinal klavuzlarını Türkçeye çevirdiği &lt;a href = &#34;http://belgeler.istihza.com/py3/&#34; target = &#34;_blank&#34;&gt;Python kitapları&lt;/a&gt; akla geliyor. Motamot çeviri olmadığı için kitaplar oldukça başarılı. Her Paytoncu&amp;rsquo;nun yanından ayırmaması gereken bir başucu kitabı.&lt;/p&gt;

&lt;p&gt;Kitaplar &lt;strong&gt;Pyton 3&lt;/strong&gt; ve &lt;strong&gt;Python 2&lt;/strong&gt; olarak istihza.com adresinde &lt;a href = &#34;http://www.istihza.com/&#34; target = &#34;_blank&#34;&gt;online olarak&lt;/a&gt; kategorilere ayrılmış olarak sunuluyor. Siteden kitaptaki örnekleri kontrol edebilirsiniz. İstihza websitesinin &lt;a href = &#34;http://www.istihza.com/forum/&#34; target = &#34;_blank&#34;&gt;forum kısmı&lt;/a&gt; &lt;em&gt;Türkçe&lt;/em&gt; bir siteye göre nisbeten aktif sayılabilir.&lt;/p&gt;

&lt;p&gt;Kitapları ayrıca bilgisayarınıza  &lt;a href = &#34;http://indir.istihza.com/belgeler/py3/&#34; target = &#34;_blank&#34;&gt;pdf&lt;/a&gt; olarak indirebilir, cep telefonunuzda mobil kitap okuyucu &lt;a href = &#34;http://indir.istihza.com/belgeler/py3/&#34; target = &#34;_blank&#34;&gt;(epub reader)&lt;/a&gt; ile açıp okuyabilir ve içindeki güzel örneklerden gerçekten &lt;strong&gt;çok&lt;/strong&gt; faydalanabilirsiniz. Üzerinde ciddi emek sarf edilmiş bir eser olduğu rahatlıkla söylenebilir.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href = &#34;http://www.pythondersleri.com/&#34; target = &#34;_blank&#34;&gt;Pythondersleri&lt;/a&gt;   değişik Python&amp;rsquo;cuların &lt;strong&gt;Python&lt;/strong&gt; hakkında blog yazılarını yayımladıkları bir site. Çok sık güncellenmese de dikkate değer bir site diyebilirim.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;DjangoGirls, Python temelli web framework &lt;a href = &#34;https://www.djangoproject.com/&#34; target = &#34;_blank&#34;&gt;Django&lt;/a&gt;&amp;lsquo;yu kadınlara sevdirmek ve &lt;strong&gt;Django&lt;/strong&gt;&amp;lsquo;nun kullanımını yaygınlaştırmaya çalışan kar amacı gütmeyen bir organizasyon.&lt;/p&gt;

&lt;p&gt;ABD kaynaklı bu organizasyonunun &lt;strong&gt;Django&lt;/strong&gt;&amp;lsquo;yu anlatan klavuzunun &lt;a href = &#34;http://tutorial.djangogirls.org/tr/&#34; target = &#34;_blank&#34;&gt;Türkçe çevirisi&lt;/a&gt; &lt;em&gt;Python ile web geliştirme&lt;/em&gt; yapacak olanlar için kullanılabilir bir kaynak.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;ingilizce-kaynaklar&#34;&gt;İngilizce Kaynaklar&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;İngilizce&lt;/em&gt; kaynaklar hem çeşitlilik hem de hacim olarak &lt;em&gt;Türkçe&lt;/em&gt; kaynaklara göre doğal olarak çok daha geniş. Şimdi kategoriler halinde inceleyelim.&lt;/p&gt;

&lt;h3 id=&#34;ücretsiz-python-kitapları&#34;&gt;Ücretsiz Python Kitapları&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Ücretsiz &lt;strong&gt;Python&lt;/strong&gt; kitapları için aşağıdaki sayfadan ulaşabileceğiniz linklerden faydalanabilirsiniz: &lt;a href = &#34;http://freecomputerbooks.com/langPythonBooks.html&#34; target = &#34;_blank&#34;&gt;FreeComputerBooks / Python&lt;/a&gt; Bu sayfada 50 - 60 adet güzel kitaba referans var. &lt;em&gt;O&amp;rsquo;relly&lt;/em&gt; gibi kaliteli içerik üreten yayınevi kitaplarına ulaşabilirsiniz. Kitapları okuyabileceğiniz linkler her kitabın kendi sayfasında &lt;code&gt;Read and Download Links:&lt;/code&gt; kısmının altında bulunuyor.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;Wikibooks&lt;/em&gt; sitesinde &lt;strong&gt;Python&lt;/strong&gt; üzerine yazılmış özellikle başlangıç seviyede bir çok kitaba erişmeniz mümkün. Bakmanız gereken adres: &lt;a href = &#34;https://en.wikibooks.org/wiki/Subject:Python_programming_language&#34; target = &#34;_blank&#34;&gt;Python Wikibooks&lt;/a&gt; .&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Tecrübeli programcı &lt;strong&gt;Zed Shaw&lt;/strong&gt; tarafından yazılan ve içeriği itibarı ile &amp;ldquo;farklı ve sıradışı&amp;rdquo; bir öğretim stratejisi güden &lt;a href = &#34;https://learnpythonthehardway.org/book/index.html&#34; target = &#34;_blank&#34;&gt;Learn Python the Hard Way&lt;/a&gt; kitabına ücretsiz olarak ulaşabilirsiniz.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;python-websiteleri&#34;&gt;Python Websiteleri&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt; websitelerine &lt;a href = &#34;https://www.python.org/&#34; target = &#34;_blank&#34;&gt;Python.org&lt;/a&gt; ile başlamamak olmaz heralde. Özellikle  &lt;a href = &#34;https://www.python.org/doc/&#34; target = &#34;_blank&#34;&gt;dokümantasyon bölümünde&lt;/a&gt; binlerce sayfalık kaynak bulacaksınız.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href = &#34;http://pythoncentral.io/&#34; target = &#34;_blank&#34;&gt;Python Central&lt;/a&gt; sitesi &lt;strong&gt;Python&lt;/strong&gt; &lt;em&gt;ipuçları&lt;/em&gt;, &lt;em&gt;klavuzları&lt;/em&gt; , &lt;em&gt;kütüphaneleri&lt;/em&gt; , &lt;em&gt;araçları&lt;/em&gt; bölümlerini bulabileceğiniz zengin bir kaynak.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href = &#34;https://pythonprogramming.net/&#34; target = &#34;_blank&#34;&gt;Python Programming&lt;/a&gt; &lt;strong&gt;Python&lt;/strong&gt;&amp;lsquo;un gelişmiş kullanımları ile ilgili &lt;em&gt;klavuzlar&lt;/em&gt; ve &lt;em&gt;nasıl yapılır dokümanları&lt;/em&gt; sağlıyor. &lt;strong&gt;Machine Learning&lt;/strong&gt;, &lt;strong&gt;Data Analysis&lt;/strong&gt;, &lt;strong&gt;Robotics&lt;/strong&gt;, v.d. konularda bir kısmı video açıklamalı çok yararlı bilgilere ulaşabilirsiniz.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;Python ile web geliştirme&lt;/em&gt; ve diğer ayrıntılı konuları açık ve sade bir dille anlatmayı hedefleyen &lt;a href = &#34;https://www.fullstackpython.com/&#34; target = &#34;_blank&#34;&gt;Full Stack Python&lt;/a&gt; sitesi açık bir kitaba (open book) ev sahipliği yapıyor. Özellikle başlangıç seviyesinden orta seviyeye atlamak için faydalı bir kaynak.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;python-interaktif-websiteleri&#34;&gt;Python Interaktif Websiteleri&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href = &#34;http://www.learnpython.org/&#34; target = &#34;_blank&#34;&gt;Learn Python&lt;/a&gt;   websitesinde hem &lt;strong&gt;Python&lt;/strong&gt; genel konseptlerine aşinalık sağlayabilir hem de verilen kod örneklerini &lt;em&gt;interaktif olarak&lt;/em&gt; deneyerek görebilirsiniz.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;İlk yazılarımdan &lt;a href=&#34;http://pythonistan.net/blog/peki-nedir-python/&#34;&gt;birinde&lt;/a&gt; &lt;a href = &#34;http://pythontutor.com/&#34; target = &#34;_blank&#34;&gt;Python Tutor&lt;/a&gt; sitesinden  bahsetmiştim. Bu sitede yazdığınız kod parçacıklarını &lt;em&gt;interaktif olarak&lt;/em&gt; deneyebilir ve kodların &lt;em&gt;interaktif haritasını&lt;/em&gt; çıkarabilirsiniz.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href = &#34;http://interactivepython.org/&#34; target = &#34;_blank&#34;&gt;Interactive Python&lt;/a&gt;  sitesinde bir çok &lt;em&gt;interaktif&lt;/em&gt; &lt;strong&gt;Python&lt;/strong&gt; kitabına ulaşabilir ve test edebilirsiniz. Ücretsiz olarak üye olup içeriğe ulaşabilirsiniz.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Bazı kod bloklarının nasıl çalıştığını görmek için &lt;a href = &#34;http://introtopython.org/&#34; target = &#34;_blank&#34;&gt;Intro to Python&lt;/a&gt;  sitesine göz atabilirsiniz.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;python-üzerine-online-kurs-ve-akademiler&#34;&gt;Python Üzerine Online Kurs ve Akademiler&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href = &#34;https://www.codecademy.com/learn/python&#34; target = &#34;_blank&#34;&gt;Code Academy&lt;/a&gt; &lt;em&gt;interaktif&lt;/em&gt; ve adım adım &lt;strong&gt;Python&lt;/strong&gt; kursları ve dersler sunuyor.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href = &#34;https://www.codementor.io/learn-python-online&#34; target = &#34;_blank&#34;&gt;Codementor&lt;/a&gt; sitesi değişik seviyeler için &lt;strong&gt;Python&lt;/strong&gt; kurslarına sahip. Üyelik ücretsiz.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href = &#34;https://www.udacity.com/&#34; target = &#34;_blank&#34;&gt;Udacity&lt;/a&gt; giriş ve orta seviyeli tüm bilgisayar bilimleri (CS) kurslarında Python kullanmakta. Yüzbin insanın aldığı &lt;strong&gt;Bilgisayar Bilimine Giriş&lt;/strong&gt; (Intro to Computer Science) kursu &lt;strong&gt;Python&lt;/strong&gt; ile işlenmiş, sitede daha üst seviyeli Python kursları da mevcut. Üyelik ücretsiz. Dersleri videolardan takip ediyorsunuz. Video aralarında kısa testlerle anlamanızı pekiştiriyorsunuz.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href = &#34;https://tr.coursera.org/&#34; target = &#34;_blank&#34;&gt;Coursera&lt;/a&gt; muhtemelen internetin en bilinen &lt;strong&gt;MOOC&lt;/strong&gt;&amp;lsquo;si. (bu kavram çok fazla sayıda kişinin iştirak ettiği &lt;strong&gt;herkese açık internet kurslarını&lt;/strong&gt; ifade etmek için kullanılıyor - &lt;strong&gt;M&lt;/strong&gt;assive &lt;strong&gt;O&lt;/strong&gt;pen &lt;strong&gt;O&lt;/strong&gt;nline &lt;strong&gt;C&lt;/strong&gt;ourse) Site çok sayıda &lt;strong&gt;Python&lt;/strong&gt; içerikli kursa sahip. İçerik yüksek kalite olarak değerlendiriliyor.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href = &#34;https://www.edx.org/&#34; target = &#34;_blank&#34;&gt;EdX&lt;/a&gt; &lt;strong&gt;Harvard&lt;/strong&gt;, &lt;strong&gt;MIT&lt;/strong&gt;, &lt;strong&gt;Berkeley&lt;/strong&gt; gibi ABD&amp;rsquo;nin saygın birkaç üniversitesinin bir araya gelerek oluşturduğu bir &lt;strong&gt;MOOC&lt;/strong&gt; sitesi. &lt;em&gt;Coursera&lt;/em&gt; gibi burada da yüksek kalitede içerik bulabilirsiniz. İçerikler ücretsiz, ancak sertifika almak isterseniz belli bir ücret karşılığında alabilirsiniz.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;python-blogcuları&#34;&gt;Python Blogcuları&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Programcı &lt;a href = &#34;http://treyhunner.com/blog/archives/&#34; target = &#34;_blank&#34;&gt;Trey Hunner&lt;/a&gt;&amp;lsquo;ın blogu &lt;strong&gt;Python&lt;/strong&gt; üzerine ilgi çekici yazılar barındırıyor.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Daha tecrübeli Paytoncular için &lt;a href = &#34;https://doughellmann.com/blog/&#34; target = &#34;_blank&#34;&gt;Doug Hellman&lt;/a&gt;&amp;lsquo;ın blogu yardımcı olabilir.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Python hakkındaki son haberleri ve Python geliştiricilerini tanıyabileceğiniz bir blog &lt;a href = &#34;http://www.blog.pythonlibrary.org/&#34; target = &#34;_blank&#34;&gt;Python Library&lt;/a&gt; adresinde yer alıyor.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href = &#34;http://planetpython.org/&#34; target = &#34;_blank&#34;&gt;Planet Python&lt;/a&gt; sitesinde bir çok Paytoncunun bloguna tek bir sayfadan ulaşma imkanına sahip olacaksınız.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Sonuncu olarak yer vereceğimiz ancak önem olarak diğerlerinden hiç de aşağıda kalmayan &lt;a href = &#34;http://www.pythonweekly.com/&#34; target = &#34;_blank&#34;&gt;Python Weekly&lt;/a&gt; websitesini favorilerinize alın ve bu haftalık online dergiye üye olun. &lt;strong&gt;Python&lt;/strong&gt; ile ilgili en son haberlere erişeceksiniz.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;p&gt;Burada saydığım kaynaklardan çok daha fazlasını &lt;strong&gt;Python&lt;/strong&gt; üzerine yapacağınız &lt;a href = &#34;https://www.google.com.tr/?gfe_rd=cr&amp;ei=BCrUV5HTPKnY8AfKi5WgCA#safe=strict&amp;q=python&#34; target = &#34;_blank&#34;&gt;basit bir Google araması&lt;/a&gt; ile bulabilirsiniz.&lt;/p&gt;

&lt;p&gt;Sizlere &lt;strong&gt;Python&lt;/strong&gt; ile iyi ve verimli çalışmalar dilerim&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo ile Statik Bir Websitesi Nasıl Yapılır? - Beşinci Bölüm : Sitemizi Github&#39;da Yayınlayalım</title>
      <link>http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-5/</link>
      <pubDate>Thu, 01 Sep 2016 00:17:50 -0400</pubDate>
      
      <guid>http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-5/</guid>
      <description>

&lt;p&gt;Nihayet bugün, &lt;strong&gt;Hugo ile statik bir websitesi nasıl yapılır&lt;/strong&gt; serimizi &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-5/&#34;&gt;beşinci bölümü&lt;/a&gt; ile sonlandırıyoruz.&lt;/p&gt;

&lt;p&gt;Birinci bölümde &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-1/&#34;&gt;Hugo kurulumunu&lt;/a&gt;, ikinci bölümde &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-2/&#34;&gt;Hugo ile Siteyi Lokal Bilgisayarda Oluşturma&lt;/a&gt;&amp;lsquo;yı, üçüncü bölümde &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-3/&#34;&gt;Temamızı Özelleştirme&lt;/a&gt;&amp;lsquo;yi, dördüncü bölümde ise &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-4/&#34;&gt;post sayfalarını editleme&lt;/a&gt; konusunu işlemiştik.&lt;/p&gt;

&lt;p&gt;Bugünkü konumuz, sitemizi ücretsiz olarak &lt;strong&gt;Github&lt;/strong&gt;&amp;lsquo;da barındırma ve bu işlemi &lt;a href=&#34;http://pythonistan.net/blog/git-ve-github/&#34;&gt;git&lt;/a&gt; vasıtası ile nasıl yapacağımız.&lt;/p&gt;

&lt;h2 id=&#34;github-hakkında&#34;&gt;Github Hakkında&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; yazılım geliştiricilerin kullandığı Dünya&amp;rsquo;nın en önemli ortak - paylaşılan sitelerinden biri (hub). Bu site 5 milyondan fazla açık kaynak kodlu yazılıma ev sahipliği yapıyor.&lt;/p&gt;

&lt;p&gt;Özellikle açık kaynak kodlu (&lt;em&gt;open source&lt;/em&gt;) yazılımlar &lt;strong&gt;Github&lt;/strong&gt;&amp;lsquo;a yükleniyor ve Dünyanın her tarafından programcılar bu yazılımları her an geliştirme ve destekleme şansı elde ediyorlar.&lt;/p&gt;

&lt;p&gt;Siz de herhangi bir projeye destek vermek isterseniz yapmanız gereken yazılım projesini bilgisayarınıza indirmek (&lt;code&gt;fork-clone&lt;/code&gt;) ve yazılım üzerinde yaptığınız değişiklikleri tekrar Github&amp;rsquo;a yüklemek. (&lt;code&gt;pull request&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;Yaptığınız değişikliklerin projeye eklenebilmesi için projeyi sürdürenlerin onaylaması gerekiyor.&lt;/p&gt;

&lt;h2 id=&#34;github-ı-ücretsiz-hosting-servisi-olarak-kullanmak&#34;&gt;Github&amp;rsquo;ı Ücretsiz Hosting Servisi Olarak Kullanmak&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; aynı zamanda &lt;a href=&#34;http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/&#34;&gt;(Jekyll, Hugo)&lt;/a&gt; v.s. S.S.G.ler ile yapılan statik web sitelerine ücretsiz barındırma servisi (hosting) sağlaması ile göz dolduruyor.&lt;/p&gt;

&lt;p&gt;Bu sayede kendi blogunuzu teorik olarak &lt;strong&gt;0&lt;/strong&gt; masrafla hayata geçirmeniz mümkün. (Hosting masrafı dışında bir websitenin tek masrafı -eğer alacaksanız- custom domain ücretidir.)&lt;/p&gt;

&lt;p&gt;Sitenize özel bir domain ismi almak isterseniz &lt;strong&gt;.com&lt;/strong&gt; ve &lt;strong&gt;.net&lt;/strong&gt; gibi çok kullanılanlar dışındaki domainleri bedavaya getirebilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; görüp görebileceğiniz en sağlam (stabil) hosting servislerinden, site yüzbinlerce geliştiriciye hizmet verdiğinden 365 gün full hizmete açık. Down (hizmet dışı kalma) istisna süresi 0.0001% seviyesinde.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; hakkında daha önce oldukça bilgi vermiştim zaten. Lütfen o &lt;a href=&#34;http://pythonistan.net/blog/git-ve-github/&#34;&gt;makaleme&lt;/a&gt; bir göz atın.&lt;/p&gt;

&lt;h3 id=&#34;github-a-giriş&#34;&gt;Github&amp;rsquo;a Giriş&lt;/h3&gt;

&lt;p&gt;Github&amp;rsquo;ı kullanmak için üye olmak gerekiyor. &lt;strong&gt;Github&lt;/strong&gt; &lt;a href =&#34;https://github.com/&#34; target = &#34;_blank&#34;&gt; ana sayfasında&lt;/a&gt; üye olun (Sign Up) ve kendinize bir kullanıcı ismi belirleyin.&lt;/p&gt;

&lt;p&gt;Kullanıcı isminiz ile giriş yaptığınızda ana sayfada &lt;code&gt;Start a project&lt;/code&gt; düğmesine basın. Projenize &lt;em&gt;kullanıcıisminiz.github.io&lt;/em&gt; ismini verin ve &lt;code&gt;Create repository&lt;/code&gt; yeşil düğmesine basın. (&amp;#8593;)&lt;/p&gt;

&lt;h2 id=&#34;web-site-dosyalarımızı-hazırlayalım&#34;&gt;Web Site Dosyalarımızı Hazırlayalım&lt;/h2&gt;

&lt;p&gt;Sitemizi &lt;a href=&#34;http://pythonistan.net/categories/hugo/&#34;&gt;yapıp bitirdik&lt;/a&gt;, son olarak sitemizin ana klasöründe &lt;code&gt;hugo&lt;/code&gt; komutunu verdik ve &lt;strong&gt;Github&lt;/strong&gt;&amp;lsquo;a yükleyeceğimiz dosyalar site ana klasörünün altında yeni oluşturulan &lt;em&gt;public&lt;/em&gt; klasörümüzün altında hazır. (Foto 1 ve 2)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-5/hugo_generating_website.png&#34; alt=&#34;Hugo Websiteyi Oluşturdu - Generate&#34; /&gt;
&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-5/hugo_public_klasoru.png&#34; alt=&#34;Hugo Public Klasörü Görüntüsü&#34; /&gt; &lt;br&gt;&lt;em&gt;&amp;ldquo;Foto1: Hugo Websiteyi Oluşturdu - Generate&amp;rdquo; &amp;mdash; &amp;ldquo;Foto2: Hugo Public Klasörü Görüntüsü&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ÖNEMLİ NOT&lt;/strong&gt;: Siteyi generate etmeden (yani &lt;code&gt;hugo&lt;/code&gt; komutunu vermeden önce) konfigürasyon dosyanızdaki (&lt;em&gt;config.toml&lt;/em&gt;) baseURL kısmının karşısında &amp;ldquo;&lt;a href=&#34;https://kullanıcıadınız.github.io&amp;quot;&#34;&gt;https://kullanıcıadınız.github.io&amp;quot;&lt;/a&gt; yazdığınızdan emin olun.&lt;/p&gt;

&lt;p&gt;Yukarıdaki işlemi yapmadan siteyi oluşturduysanız &lt;em&gt;public&lt;/em&gt; klasörünü silin, bu işlemi yapın ve sonrasında siteyi tekrar oluşturun(&lt;code&gt;hugo&lt;/code&gt;). Aksi halde Github&amp;rsquo;da tema şablonlarını doğru olarak göremeyebilirsiniz.&lt;/p&gt;

&lt;h3 id=&#34;web-sitemize-de-hadi-git-gari-diyoruz&#34;&gt;Web Sitemize &amp;lsquo;de hadi &amp;ldquo;git&amp;rdquo; gari&amp;rsquo; Diyoruz&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;1. Şimdi *public* klasörüne Powershell ile gidin. (D:\siteler\deneme\public)
2. Github&#39;a yüklemek için bunu bir proje olarak tanıtalım. `git init` komutunu verin.
3. Klasör içindeki her şeyi komit için eklemek üzere işaretleyin. `git add .`
4. Dosyaları komitle. `git commit -m &amp;quot;ilk komitimiz&amp;quot;
5. Şimdi uzak sunucuyu tanıtalım. `git remote add origin https://github.com/kullaniciadiniz/kullaniciadiniz.github.io.git`
6. Evet, şimdi gidiyoruz: `git push -u origin master`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; bize kullanıcı adımızı ve parolamızı soracak. Onlara cevap verin ve en geç 3 saniye içinde sitemiz yüklenmiş olacak. 1-2 saniye de sitenin kendine gelmesini bekleyin. Sitenizi tarayıcınızda açtığınızda artık sitenizin webde olduğunu göreceksiniz. Vauv!&lt;/p&gt;

&lt;h2 id=&#34;sitenize-custom-özel-domain-ismi-verme&#34;&gt;Sitenize Custom (Özel) Domain İsmi Verme&lt;/h2&gt;

&lt;p&gt;kullanıcıisminiz.github.io ismi herkes için uygun olmayabilir. Siz daha profesyonel görünme adına ornek.net / www.ornek.com gibi bir isim kullanmak isteyebilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; özel &lt;em&gt;domain&lt;/em&gt; isimleri için destek sağlıyor. İsminizi aldıktan sonra yapmanız gereken &lt;strong&gt;iki&lt;/strong&gt; (2) şey var:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Domaini aldığınız şirketin control panelinde bir &lt;strong&gt;CNAME&lt;/strong&gt; kaydı (duruma göre &lt;strong&gt;A record&lt;/strong&gt;) oluşturup buraya Github&amp;rsquo;ın IP adreslerini vermek.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CNAME&lt;/strong&gt; isimli bir metin dosyası oluşturup bu dosyanın içine &lt;em&gt;domain&lt;/em&gt; isminiz ne ise onu yazarak (örnek: www.domainisminiz.com) dosyayı sitenin &lt;em&gt;static&lt;/em&gt; klasörünün içine atmak.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Detaylı bilgiye &lt;a href = &#34;https://help.github.com/articles/using-a-custom-domain-with-github-pages/&#34; target = &#34;_blank&#34;&gt; Github destek sayfaları&lt;/a&gt;ndan ulaşabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-5/hugo_sitemiz_githuba_yuklendi.png&#34; alt=&#34;Sitemizin Github&#39;a Yüklenmiş Görüntüsü&#34; /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Şükür, &lt;strong&gt;Hugo ile statik bir websitesi nasıl yapılır&lt;/strong&gt; serimiz burada bitti. Bitmeyeceğini sanmıştım bir an.&lt;/p&gt;

&lt;p&gt;Umarım faydalı olmuştur. Seride daha detaylı açıklamaya ihtiyaç duyduğunuz konuları sormaktan çekinmeyin lütfen. İyi çalışmalar&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo ile Statik Bir Websitesi Nasıl Yapılır? - Dördüncü Bölüm : Post Değişiklikleri</title>
      <link>http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-4/</link>
      <pubDate>Wed, 31 Aug 2016 00:17:50 -0400</pubDate>
      
      <guid>http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-4/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Hugo ile Statik Bir Website Nasıl Yapılır?&lt;/strong&gt; yazı dizimizde son olarak Üçüncü Bölüm, &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-3/&#34;&gt;Temamızı Özelleştirme&lt;/a&gt;&amp;lsquo;yi yayımlamıştık.&lt;/p&gt;

&lt;p&gt;Bu yazımızda sitemizin temasıyla hazır gelen &lt;a href=&#34;http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/#hugo-da-dosya-düzeni&#34;&gt;post sayfalarını&lt;/a&gt; (&lt;em&gt;yani belirli bir kategori yada bölümün altında yer alan sayfalar&lt;/em&gt;) düzenleyecek ve yeni sayfalar ekleyeceğiz.&lt;/p&gt;

&lt;p&gt;Bu yazıyla edit (düzeltme) işlemlerini bitirmeyi planlıyorum.&lt;/p&gt;

&lt;h2 id=&#34;sayfaların-sınıflandırılması-ve-kategoriler&#34;&gt;Sayfaların Sınıflandırılması ve Kategoriler&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Hugo&lt;/strong&gt; da bölüm sayfaları genelde &lt;em&gt;content&lt;/em&gt; klasörünün altındaki &lt;em&gt;post&lt;/em&gt; klasörünün içinde bulunuyor.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;post&lt;/em&gt; klasörünün ismini değiştirebilir (örn. &lt;em&gt;blog&lt;/em&gt;), &lt;em&gt;post&lt;/em&gt; klasörünün altına yeni klasörler ekleyip dosyalarınızı alt klasörlerin içine yerleştirebilirsiniz.&lt;/p&gt;

&lt;p&gt;Gerçi Hugo&amp;rsquo;da &lt;a href=&#34;http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/#front-matter&#34;&gt;Front Matter&lt;/a&gt;&amp;lsquo;a eklediğiniz &lt;strong&gt;kategoriler&lt;/strong&gt; (categories) ve &lt;strong&gt;etiketler&lt;/strong&gt; (tags) ile dosyalarınızı istediğiniz şekilde gruplayabilir, sınıflandırabilirsiniz.&lt;/p&gt;

&lt;p&gt;Örneğin şu anda okumakta olduğunuz &lt;strong&gt;&lt;a href=&#34;http://pythonistan.net/categories/hugo/&#34;&gt;Hugo&lt;/a&gt; ile statik bir website nasıl yapılır&lt;/strong&gt; yazı dizisinin tüm yazılarını bulmak için bu sayfanın en üstünde yer alan &lt;strong&gt;renkli&lt;/strong&gt; üç kategoriden birine tıklayabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-4/sayfa_kategoriler.png&#34; alt=&#34;Sayfamın Kategorileri&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hugo&lt;/strong&gt; aynı &lt;strong&gt;kategori&lt;/strong&gt; özelliği taşıyan tüm sayfaları bir araya getirip otomatik olarak size sunacak.&lt;/p&gt;

&lt;h2 id=&#34;bölüm-sayfaları&#34;&gt;Bölüm Sayfaları&lt;/h2&gt;

&lt;p&gt;Spesifik tema örneğimize geri dönebiliriz. Blackburn temamız varsayılan olarak &lt;em&gt;post&lt;/em&gt; klasörünün içinde 4 adet .md (markdown) dosyası ile geliyor. Tek tek dosyalarla oynayalım.&lt;/p&gt;

&lt;p&gt;Birinci dosyamız: &lt;em&gt;creating-a-new-theme.md&lt;/em&gt; dosyası. Dosyanın adını &lt;em&gt;birinci_blog_yazisi.md&lt;/em&gt; olarak değiştirin. Daha sonra iki kez tıklayarak içini açın.&lt;/p&gt;

&lt;p&gt;Dosyanın hemen başında &lt;code&gt;(---)&lt;/code&gt; (bazen +++) işaretleri içinde bulunan kısma &lt;a href=&#34;http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/#front-matter&#34;&gt;Front Matter&lt;/a&gt; denildiğini ve dosyanın özelliklerini belirlediğini daha önce belirtmiştim.&lt;/p&gt;

&lt;p&gt;Dosyanın başlığını &lt;em&gt;&amp;ldquo;Hugo Aşktır&amp;rdquo;&lt;/em&gt; şeklinde değiştirelim. Tarihini (date) ise &lt;strong&gt;&amp;ldquo;2015-01-09&amp;rdquo;&lt;/strong&gt; yapalım.&lt;/p&gt;

&lt;p&gt;Son olarak &lt;code&gt;(---)&lt;/code&gt; kısmı bittikten sonra ekranda görünecek kısım için keyfinize göre bir paragraf ekleyin.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;İkinci dosyamız &lt;em&gt;goisforlovers.md&lt;/em&gt;&amp;lsquo;nin adını &lt;em&gt;ikinci_blog_yazisi.md&lt;/em&gt; olarak değiştirin. Açtıktan sonra &lt;strong&gt;title = &amp;ldquo;Hugo Aşktır&amp;rdquo;&lt;/strong&gt; ve &lt;strong&gt;tags = [&amp;ldquo;aşk&amp;rdquo;, &amp;ldquo;sevgi&amp;rdquo;, &amp;ldquo;muhabbet&amp;rdquo;]&lt;/strong&gt; değişikliklerini girin.&lt;/p&gt;

&lt;p&gt;Paragraf olarak aşağıdaki gibi link içeren bir metin girin:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;Merhabalar bu bizim websitemiz. Yaptığımız birinci degisiklik sayfası [burada](/blog/birinci_blog_yazisi/). Hugo ile ilgili daha fazla bilgi [Hugo] websitesinde [hugo]: (&amp;lt;https://gohugo.io/)
&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;

&lt;p&gt;Üçüncü ve son olarak &lt;em&gt;hugoisforlovers.md&lt;/em&gt; dosyasını değiştireceğiz. Dosyanın ismini &lt;em&gt;ucuncu_blog_yazisi.md&lt;/em&gt; olarak değiştirip &lt;strong&gt;Front Matter&lt;/strong&gt;&amp;lsquo;da bazı değişiklikler yapın. Etiket (tag) isimlerinden birini birinci dosya ile ortak belirleyin. Mesela &lt;strong&gt;&amp;ldquo;hugo sevgisi&amp;rdquo;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Sonraki kısımda aşağıdaki paragrafı ekleyin:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;imaj koymak için imaj alt metninden sonra imaj yolunu ekleyelim.

![guzel bir imaj](/ornek.png)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(Not: Tabi şimdi ana klasör altında &lt;em&gt;static&lt;/em&gt; klasörünün içine herhangi bir png dosyası koymalı ve adını &lt;em&gt;ornek&lt;/em&gt; vermelisiniz.)&lt;/p&gt;

&lt;h2 id=&#34;dosya-üretme-ekleme&#34;&gt;Dosya Üretme (Ekleme)&lt;/h2&gt;

&lt;p&gt;Evet, sayfalarımızı birbirimize bağladık, sayfalarımıza resim ekledik. Başlıklarını değiştirdik. Tarihlerini makale sıralarını etkileyecek şekilde düzenledik. En yeni makale en üstte yer alır. Yeni dosya üretmeye geldi sıra&amp;hellip;&lt;/p&gt;

&lt;p&gt;Dosya eklemek (üretmek) için en kısa yol varolan bir dosyayı kopyalayıp aynı yere yapıştırmak. Daha sonra dosyanıza yeni bir ad verip içini açabilir ve arzunuz doğrultusunda içeriğini düzenleyebilirsiniz.&lt;/p&gt;

&lt;h2 id=&#34;anahat-değişiklikleri&#34;&gt;Anahat Değişiklikleri&lt;/h2&gt;

&lt;p&gt;Bitirmeden anahat değişikliklerinden örnekler verelim. Anasayfada makale özetlerinden sonra gelen &lt;strong&gt;Read More&lt;/strong&gt; yazısını görmüş olmalısınız. bu yazıyı &lt;strong&gt;Daha Fazla&amp;hellip;&lt;/strong&gt; şeklinde Türkçeleştirelim.&lt;/p&gt;

&lt;h3 id=&#34;multi-language-desteği&#34;&gt;Multi Language Desteği&lt;/h3&gt;

&lt;p&gt;Şimdilik sadece bazı &lt;strong&gt;Hugo&lt;/strong&gt; temaları birden çok dil özelliğini destekliyor. Blackburn maalesef bunlardan biri değil. Öyle olsaydı basitçe ana klasör altında &lt;em&gt;data&lt;/em&gt; klasörüne girip içindeki &lt;strong&gt;i110&lt;/strong&gt; dosyasını &lt;strong&gt;Sublime&lt;/strong&gt; ile açarak tercümeleri girebilirdik.&lt;/p&gt;

&lt;p&gt;Şimdi durum biraz daha karmaşık sayılır. Bu kez &lt;em&gt;themes&lt;/em&gt; klasörümüzün içinde bulunan &lt;em&gt;layout&lt;/em&gt; dosyalarımızda (yeri tam olarak şurada: &lt;code&gt;D:\siteler\deneme\themes\blackburn\layouts&lt;/code&gt;) &lt;strong&gt;Read More&lt;/strong&gt; metninin nerde bulunduğunu anlamaya çalışacağız.&lt;/p&gt;

&lt;p&gt;Aramalarımızda metni &lt;em&gt;layouts&lt;/em&gt; altındaki &lt;em&gt;_default&lt;/em&gt; klasörünün içindeki &lt;code&gt;summary.html&lt;/code&gt; şablonunun (layout) içinde buluyoruz. Bu metni &lt;strong&gt;Daha Fazla&amp;hellip;&lt;/strong&gt; ile değiştiriyoruz.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt; {{ if .Truncated }}
  &amp;lt;footer&amp;gt;
    &amp;lt;a href=&amp;quot;{{ .RelPermalink }}&amp;quot;&amp;gt;Daha Fazla...&amp;lt;i class=&amp;quot;fa fa-angle-double-right fa-fw&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;
  &amp;lt;/footer&amp;gt;
  {{ end }}
&amp;lt;/article&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu şablon (layout) dosyasında da bir Font Awesome kütüphanesi &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-3/#site-gelişmiş-özellikler&#34;&gt;ikonu kullanıldığını&lt;/a&gt; ve bu ikonu yukarıdaki örnekteki gibi değiştirebileceğinizi fark ettiniz mi?&lt;/p&gt;

&lt;h3 id=&#34;telif-bilgisi&#34;&gt;Telif Bilgisi&lt;/h3&gt;

&lt;p&gt;Temalarda bu bilgi genelde &lt;code&gt;copyright.html&lt;/code&gt;, yada &lt;code&gt;footer.html&lt;/code&gt; altında bulunur. Blackburn temasında bu bilgi &lt;code&gt;copyright.html&lt;/code&gt;&amp;lsquo;de. (&lt;code&gt;D:\siteler\deneme\themes\blackburn\layouts\partials&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;Dosyayı açın ve en alttaki satırlardan üstte olanını &lt;strong&gt;Made with Love&lt;/strong&gt; yapın, diğer satırı ise silin.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div&amp;gt;
  &amp;lt;div class=&amp;quot;small-print&amp;quot;&amp;gt;
    &amp;lt;small&amp;gt;{{ .Site.Copyright | safeHTML }}&amp;lt;/small&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div class=&amp;quot;small-print&amp;quot;&amp;gt;
    &amp;lt;small&amp;gt;Built with&amp;amp;nbsp;&amp;lt;a href=&amp;quot;https://gohugo.io/&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;Love&amp;lt;/a&amp;gt;&amp;lt;/small&amp;gt;

  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;sosyal-medya&#34;&gt;Sosyal Medya&lt;/h3&gt;

&lt;p&gt;Ana ekranda solda bulunan sosyal medya butonlarına bir ekleme yapalım. Twitter ve Facebook dışındakileri konfigurasyon dosyasından &lt;em&gt;(config.toml)&lt;/em&gt; silin ve googleplus = &amp;ldquo;gplus kullanıcı adınız&amp;rdquo; şeklinde bir satır girin. (buraya varsa googleplus kullanıcı ismini gireceksiniz.)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[social]
  # Link your social networking accouns to the side menu
  # by entering your username or ID.
  twitter = &amp;quot;twitter_kullanıcı_isminiz&amp;quot;
  facebook = &amp;quot;facebook_kullanıcı_isminiz&amp;quot;
  googleplus = &amp;quot;gplus kullanıcı adınız&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Altta Google+ simgesinin otomatik olarak geldiğini göreceksiniz.
&lt;hr&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-4/dosyalar.png&#34; alt=&#34;Hugo Tema Sayfaları&#34; /&gt; &lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-4/ara.png&#34; alt=&#34;Ara&#34; /&gt; &lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-4/sol_menu.png&#34; alt=&#34;Tema Sol Menü&#34; /&gt; &lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-4/ara.png&#34; alt=&#34;Ara&#34; /&gt; &lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-4/sablonlar.png&#34; alt=&#34;Hugo Tema Şablonları&#34; /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Sanırım belli bir fikir edindiniz. Aslında konu benim anlatmaya çalıştığımdan çok daha kolay. Özellikle kullanım klavuzu biraz ingilizce biliyorsanız size çok daha iyi bir fikir verecektir.&lt;/p&gt;

&lt;p&gt;Yarın &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-5/&#34;&gt;son bölüm&lt;/a&gt; olarak sitemizi Github&amp;rsquo;a yükleyeceğiz artık.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo ile Statik Bir Websitesi Nasıl Yapılır? - Üçüncü Bölüm : Temamızı Özelleştirme</title>
      <link>http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-3/</link>
      <pubDate>Fri, 26 Aug 2016 00:17:50 -0400</pubDate>
      
      <guid>http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-3/</guid>
      <description>

&lt;p&gt;Beş bölümlük &lt;strong&gt;Hugo ile statik bir websitesi nasıl yapılır&lt;/strong&gt; serimizin &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-3/&#34;&gt;üçüncü bölümüne&lt;/a&gt; gelebildik.&lt;/p&gt;

&lt;p&gt;Birinci bölümde &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-1/&#34;&gt;Hugo kurulumunu&lt;/a&gt;, ikinci bölümde ise &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-2/&#34;&gt;Hugo ile Siteyi Lokal Bilgisayarda Oluşturma&lt;/a&gt; konusunu işlemiştik.&lt;/p&gt;

&lt;p&gt;Bu bölümde sitemizin konfigürasyon dosyasını (&lt;strong&gt;config.toml&lt;/strong&gt;) tamamıyla değiştirip düzeltecek, sitemize yeni sayfalar ekleyecek ve varolan sayfaları modifiye edeceğiz.&lt;/p&gt;

&lt;h2 id=&#34;hugo-temalarının-genel-kullanımı&#34;&gt;Hugo Temalarının Genel Kullanımı&lt;/h2&gt;

&lt;p&gt;Hugo temalarını &lt;strong&gt;Hugo&lt;/strong&gt; sitemizin ana klasörü içindeki themes klasörünün altında bulunduğundan bahsetmiştik. &lt;em&gt;(D:\siteler\deneme\themes)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Şimdi tema klasörümüzden ilgili dosyaları ana klasöre taşımaya / değiştirmeye başlayalım.&lt;/p&gt;

&lt;h3 id=&#34;temanın-dosyalarını-varolan-dosyaların-üzerine-yazma&#34;&gt;Temanın Dosyalarını Varolan Dosyaların Üzerine Yazma&lt;/h3&gt;

&lt;p&gt;Temamızın örnek websitesi (&lt;strong&gt;config.toml&lt;/strong&gt; dahil) ya temanın ana klasörü içinde &lt;em&gt;(D: \ siteler \ deneme \ herhangibirtema )&lt;/em&gt; yada &amp;ldquo;exampleSite&amp;rdquo; klasörünün içindedir. &lt;em&gt;(D:\siteler\deneme\herhangibirtema\exampleSite)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Bu her tür tema için aynı şekildedir. Bazı sitelerde exampleSite klasörü bulunmayabilir. O halde temanın ana klasöründeki dosyaları kopyalayacaksınız.&lt;/p&gt;

&lt;p&gt;Spesifik örneğimizdeki &amp;ldquo;blackburn&amp;rdquo; temamız bize içinde &lt;strong&gt;config.toml&lt;/strong&gt; dosyası da bulunan tam bir website örneği (exampleSite- &lt;em&gt;deneme\themes\blackburn\exampleSite&lt;/em&gt;) sunuyor. Bu klasörde örnek bazı sayfalar da var. (&amp;#8595;)&lt;/p&gt;

&lt;p&gt;Konfigürasyon dosyasını ve diğer dosyaları bulunduğu yerden &lt;code&gt;kopyala(Ctrl+C)&lt;/code&gt;yıp websitemizin ana klasörünün içine &lt;em&gt;(D:\siteler\deneme)&lt;/em&gt; yapıştırın&lt;code&gt;(Ctrl+V)&lt;/code&gt;. (&amp;#8595;)&lt;/p&gt;

&lt;p&gt;Ana klasörün içinde bulunan dosyalar ile değiştirmek isteyip istemediğinizi soracak. &amp;ldquo;Hedefteki Dosyayı Değiştir&amp;rdquo;&amp;lsquo;i seçerek işlemi teyit edin. (&amp;#8595;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-3/tema_dosyalarini_tasimak_uzere_sec.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Tema Dosyalarını Taşımak Üzere Seçiyoruz&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-3/tema_dosyalarini_tasimak_uzere_sec_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-3/tema_dosyalarini_ana_klasore_tasi.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Tema Dosyalarını Taşıyarak Ana Site Klasörüne Yapıştırıyoruz&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-3/tema_dosyalarini_ana_klasore_tasi_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-3/dosyalari_degistirmek_icin_onay.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Taşıma için Gerekli Teyidi Veriyoruz&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-3/dosyalari_degistirmek_icin_onay_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;hugo-sitemizin-ilk-görüntüsü&#34;&gt;Hugo Sitemizin İlk Görüntüsü&lt;/h3&gt;

&lt;p&gt;Ok, herşey istediğimiz gibi gittiyse şimdi &lt;code&gt;hugo server -w&lt;/code&gt; komutunu verip tarayıcıda &lt;code&gt;http://localhost:1313/&lt;/code&gt; adresini yazdığınızda yukarıdaki büyük imajda görülen anasayfa görüntüsü ile karşılaşacaksınız. (&amp;#8593;)&lt;/p&gt;

&lt;h2 id=&#34;hugo-tema-modifikasyonu&#34;&gt;Hugo Tema Modifikasyonu&lt;/h2&gt;

&lt;p&gt;Hugo sitemizi hazırlarken her zaman için ilk bakmamız gereken dosya &lt;strong&gt;config.toml&lt;/strong&gt; dosyası. Bu dosya web projemizin bir nevi kalbi gibi.&lt;/p&gt;

&lt;p&gt;Config.toml bize websitemizin ana özellikleri (konfigürasyonu) ve sahiplikleri hakkında fikir veriyor.&lt;/p&gt;

&lt;p&gt;O halde Hugo tema modifikasyonuna &lt;strong&gt;config.toml&lt;/strong&gt; dosyasından başlayalım. Bu dosyayı &lt;em&gt;(D:\siteler\deneme\config.toml)&lt;/em&gt; &lt;a href=&#34;http://pythonistan.net/blog/sublime-text-kurulum/&#34;&gt;Sublime Text programı&lt;/a&gt; ile açalım ve içindeki değerleri değiştirelim:&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;Not&lt;/strong&gt;: Bu işlemi ilk kez yaparken dosyanın üstüne sağ tıklayıp &lt;code&gt;Birlikte Aç&lt;/code&gt; komutunu seçebiliriz. .toml dosyalarının daima Sublime ile açılmasını sağlamak için dosya uzantısını Sublime ile ilişkilendirebilirsiniz.)&lt;/p&gt;

&lt;h3 id=&#34;config-toml-dosyası&#34;&gt;Config.toml Dosyası&lt;/h3&gt;

&lt;p&gt;Dosyayı açtığımızda sitemizin bir çok özelliğini bulabiliyoruz. Birkaç örnek vereyim, siz gerisini kendiniz keşfedersiniz zaten.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Title = &amp;quot;Blackburn Theme Demo&amp;quot;&lt;/code&gt; yazan ve anasayfamızdaki en büyük başlık olan yazıyı &amp;ldquo;İlk ve En Yeni Hugo Sitemiz&amp;rdquo; şeklinde değiştirin.&lt;/p&gt;

&lt;p&gt;Sayfayı kaydeder kaydetmez (&lt;code&gt;Ctrl + S&lt;/code&gt; ile kaydedebilirsiniz) tarayıcınızı kontrol ettiğinizde yaptığımız değişikliğin uygulandığını göreceksiniz.&lt;/p&gt;

&lt;p&gt;Aşağıda ben bir kaç değişiklik yaptım, siz de bu değişiklikleri &lt;em&gt;config.toml&lt;/em&gt; dosyasında yapın ve sonucunu tarayıcıda hemen görün.&lt;/p&gt;

&lt;p&gt;Temanın orjinal hali:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;http://replace-this-with-your-hugo-site.com/&amp;quot;
languageCode = &amp;quot;en-us&amp;quot;
title = &amp;quot;Blackburn Theme Demo&amp;quot;
theme = &amp;quot;blackburn&amp;quot;
author = &amp;quot;Yoshiharu Yamashita&amp;quot;
copyright = &amp;quot;&amp;amp;copy; 2016. All rights reserved.&amp;quot;
canonifyurls = true
paginate = 10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yapılan Değişikliklerden Sonra:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;http://websiteniz.github.io/&amp;quot;
languageCode = &amp;quot;tr-TR&amp;quot;
title = &amp;quot;İlk ve En Yeni Hugo Sitemiz&amp;quot;
theme = &amp;quot;blackburn&amp;quot;
author = &amp;quot;İsim ve Soyisminiz&amp;quot;
copyright = &amp;quot;&amp;amp;copy; Sitenizin_İsmi 2016. Tüm Hakkı Saklıdır&amp;quot;
canonifyurls = true
paginate = 8
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;diğer-site-parametrelerini-de-değiştirelim&#34;&gt;Diğer Site Parametrelerini de Değiştirelim&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;subtitle = &amp;quot;Harika Muhteşem Bir Site&amp;quot;
brand = &amp;quot;fiyakali&amp;quot;
googleAnalytics = &amp;quot;Buraya Google Analytics izleme ID&#39;niz yazılacak&amp;quot;
disqus = &amp;quot;Disqus hesabınız yazılacak&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Gördüğünüz gibi bu tema disqus yorum servisi kurulu geliyor. &lt;a href = &#34;https://disqus.com/ &#34; target = &#34;_blank&#34; &gt; Disqus&lt;/a&gt;&amp;lsquo;a üye olup yukarıdaki alana üye olduğunuz ismi yazdığınızda yorum özelliği sitenize otomatik eklenmiş olur.&lt;/p&gt;

&lt;h3 id=&#34;ana-menüyü-türkçe-ye-çevirelim&#34;&gt;Ana Menüyü Türkçe&amp;rsquo;ye Çevirelim&lt;/h3&gt;

&lt;p&gt;[[menu.main]] kısmında ingilizceleri aşağıdaki şekilde çevirelim:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;name = &amp;quot;Home&amp;quot; --&amp;gt; &amp;quot;Anasayfa&amp;quot;
name = &amp;quot;Posts&amp;quot; --&amp;gt; &amp;quot;Yazılar&amp;quot;
name = &amp;quot;About&amp;quot; --&amp;gt; &amp;quot;Hakkında&amp;quot;
name = &amp;quot;Contact&amp;quot; --&amp;gt; &amp;quot;İletişim&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Eğer &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-2/#yeni-bir-site-yaratalım-ve-web-sunucumuzun-çalıştığını-görelim&#34;&gt;Hugo Server&lt;/a&gt;&amp;lsquo;ı kapatmadıysanız (Ctrl+C) bu yaptığınız değişikliklerin herbirini aynı anda canlı olarak görüyor olmalısınız.&lt;/p&gt;

&lt;h3 id=&#34;site-gelişmiş-özellikler&#34;&gt;Site Gelişmiş Özellikler&lt;/h3&gt;

&lt;p&gt;Son olarak temanın daha gelişmiş bir özelliğini nasıl değiştirebileceğimizi görelim:&lt;/p&gt;

&lt;p&gt;Blackburn teması ikon kütüphanesi olarak &lt;a href = &#34;http://fontawesome.io/icons/ &#34; target = &#34;_blank&#34; &gt; Font Awesome kütüphanesini&lt;/a&gt; kullanıyor.(&lt;em&gt;temadan temaya değişiklik gösterebilir&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;Menü başlıklarının yanındaki küçük resimleri değiştirmek isterseniz Font Awesome kütüphanesinden bir başka ikon seçmek çok kolay.&lt;/p&gt;

&lt;p&gt;Yukarıda verilen linke gidin ve beğendiğiniz bir ikon seçin. Diyelim, &amp;ldquo;Anasayfa&amp;rdquo; ikonumu uçak olarak değiştirmek istiyorum. Yukarıdaki sayfada uçak ikonunu buluyorum, isminin &amp;ldquo;plane&amp;rdquo; olduğunu görüyorum.&lt;/p&gt;

&lt;p&gt;Şimdi anasayfa menümün altındaki &lt;code&gt;pre = &amp;quot;&amp;lt;i class=&#39;fa fa-home fa-fw&#39;&amp;gt;&amp;lt;/i&amp;gt;&amp;quot;&lt;/code&gt; satırındaki &lt;em&gt;home&lt;/em&gt; kelimesini &lt;em&gt;plane&lt;/em&gt; olarak değiştiriyorum. Bu kadar. Yani &lt;code&gt;pre = &amp;quot;&amp;lt;i class=&#39;fa fa-plane fa-fw&#39;&amp;gt;&amp;lt;/i&amp;gt;&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;anasayfa-değişiklikleri&#34;&gt;Anasayfa Değişiklikleri&lt;/h2&gt;

&lt;p&gt;Bu örnekte anasayfamızı (index.html) daha çok konfigürasyon dosyası (&lt;em&gt;config.toml&lt;/em&gt;) üzerinden değiştirdik. Yaptığımız değişikliklerin tamamını aşağıdaki imaj görüntüsünde görebilirsiniz.&lt;/p&gt;

&lt;p&gt;Hemen hemen tüm Hugo şablonlarında uygulama bu şekilde. Nadiren config.toml&amp;rsquo;de bulamadığınız bazı ayarlar için tema şablonunun layout (anahat) dosyalarına başvurmak zorunda kalabilirsiniz.&lt;/p&gt;

&lt;p&gt;Anahat dosyaları layout klasörünün içinde saklanır ve &lt;code&gt;.html&lt;/code&gt; uzantısı taşır..&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-3/tema_degisiklikleri_uygulama.jpg&#34; alt=&#34;Hugo Sitesinde Tema Değişikliği Sonrası Anasayfa Görüntüsü&#34; /&gt; &lt;br&gt;&lt;em&gt;&amp;ldquo;Sonra: Hugo Sitemizde Config.toml Değişiklikleri Sonrası Anasayfa Görüntüsü&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Esasında bu yazımda tüm modifikasyonları bitirmeyi düşünüyordum. Ancak yazı çok uzadı.&lt;/p&gt;

&lt;p&gt;O nedenle &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-4/&#34;&gt;4. Bölüm&lt;/a&gt;&amp;lsquo;de sayfaları (post) düzenlemeyi göstermek istiyorum. Sitemizi Github&amp;rsquo;a yüklemek 5. ve son Bölümümüz olacak.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo ile Statik Bir Websitesi Nasıl Yapılır? - İkinci Bölüm : Sitemizi Oluşturma</title>
      <link>http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-2/</link>
      <pubDate>Thu, 25 Aug 2016 00:17:50 -0400</pubDate>
      
      <guid>http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-2/</guid>
      <description>

&lt;p&gt;İlk bölümü detaylı bir &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-1/&#34;&gt;Hugo kurulumunu&lt;/a&gt; içeren &lt;strong&gt;Hugo ile statik bir websitesi nasıl yapılır&lt;/strong&gt; klavuzumuzun &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-2/&#34;&gt;ikinci bölümü&lt;/a&gt;, &amp;ldquo;lokal bilgisayarda sitemizi oluşturma&amp;rdquo;, karşınızda&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;hugo-lokal-sunucu&#34;&gt;Hugo Lokal Sunucu&lt;/h2&gt;

&lt;p&gt;&lt;a href = &#34;https://gohugo.io/&#34; target = &#34;_blank&#34; &gt; Hugo&lt;/a&gt; kendiliğinden bir web sunucu ile makinamıza geliyor.&lt;/p&gt;

&lt;p&gt;Bu şu demek: Herhangi bir websitesi geliştirdiğimizde onu çalıştırmak için uzak bir sunucu aramak zorunda değiliz.&lt;/p&gt;

&lt;p&gt;Geliştirdiğimiz siteyi hemen aynı anda tarayıcımız vasıtası ile sunucumuza bağlanarak görme ve düzeltme (edit) şansına sahibiz.&lt;/p&gt;

&lt;p&gt;Daha da güzeli çoğu web geliştirme aracında olmayan &lt;strong&gt;Live Reload&lt;/strong&gt; (Canlı Önizleme) özelliği &lt;strong&gt;Hugo&lt;/strong&gt; ile varsayılan olarak geliyor. Ekstra bir paket kurmanıza gerek yok.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Live Reload&lt;/strong&gt; ile tarayıcınızda &lt;code&gt;Refresh&lt;/code&gt;&amp;lsquo;e (Yenile / F5) basmaya bile gerek kalmadan yaptığınız değişikliklerin hepsini görebiliyorsunuz.&lt;/p&gt;

&lt;h2 id=&#34;yeni-bir-site-için-klasör-düzeni&#34;&gt;Yeni Bir Site İçin Klasör Düzeni&lt;/h2&gt;

&lt;p&gt;Şimdi daha ilk Hugo yazımda &lt;a href=&#34;http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/#hugo-ile-bir-site-yapalım-windows-için&#34;&gt;bahsettiğim gibi&lt;/a&gt; yeni bir site yapacağız.&lt;/p&gt;

&lt;p&gt;Hugo ile sitelerimizi kolay ulaşabileceğimiz bir yerde, mesela &lt;em&gt;D:&lt;/em&gt; klasörünün hemen altında oluşturalım.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Zaten, Hugo&amp;rsquo;yu &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-1/#3-hugo-yu-ortam-değişkenine-path-ekleme&#34;&gt;Path&lt;/a&gt;&amp;lsquo;a eklediğimiz için herhangi bir konumdan &lt;code&gt;hugo&lt;/code&gt; yazıp &lt;strong&gt;Hugo&lt;/strong&gt;&amp;lsquo;ya ulaşabiliyorduk. O halde;&lt;/p&gt;

&lt;p&gt;a. Komut satırını açın. (Powershell / Cmd )&lt;/p&gt;

&lt;p&gt;b. &lt;em&gt;D&lt;/em&gt; sürücümüzün altında siteler adlı bir klasör oluşturalım. Bulunduğunuz konumda &lt;em&gt;D&lt;/em&gt; klasörüne geçmek için &lt;em&gt;D:&lt;/em&gt; yazıp Enter&amp;rsquo;a basın(&amp;#8595;).&lt;/p&gt;

&lt;p&gt;c. Daha sonra &lt;code&gt;md siteler&lt;/code&gt; komutunu vererek yeni bir klasör oluşturalım. (&lt;em&gt;md: make directory - klasör yarat&lt;/em&gt;) (&amp;#8595;)&lt;/p&gt;

&lt;p&gt;d. Son olarak &lt;code&gt;cd siteler&lt;/code&gt; diyerek &lt;em&gt;siteler&lt;/em&gt; klasörünün içine girin. Bu konumda bir website oluşturacağız. (&amp;#8595;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-2/hugo_site_olusturma.png&#34; alt=&#34;Hugo&#39;da Web Sitesi Oluşturma ve Web Sunucuyu Çalıştırma&#34; /&gt; &lt;br&gt;&lt;em&gt;&amp;ldquo;Hugo&amp;rsquo;da Web Sitesi Oluşturma ve Web Sunucuyu Çalıştırma&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;yeni-bir-site-yaratalım-ve-web-sunucumuzun-çalıştığını-görelim&#34;&gt;Yeni Bir Site Yaratalım ve Web Sunucumuzun Çalıştığını Görelim&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Şimdi &lt;strong&gt;Hugo&lt;/strong&gt;&amp;lsquo;da site oluşturuyoruz ve kontrol ediyoruz. Sitemizdeki değişiklikleri tarayıcı da olduğu kadar komut satırından da izlemek için vereceğimiz komut: &lt;code&gt;hugo server -w&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;a. Klasörümüzün içinde &lt;code&gt;hugo new site deneme&lt;/code&gt; komutunu verin. &lt;strong&gt;Hugo&lt;/strong&gt; &lt;em&gt;deneme&lt;/em&gt; adlı bir klasör, yani &lt;strong&gt;deneme websitesini&lt;/strong&gt; oluşturdu. (&amp;#8593;)&lt;/p&gt;

&lt;p&gt;b. &lt;em&gt;deneme&lt;/em&gt; klasörünüzün içine &lt;code&gt;cd deneme&lt;/code&gt; komutu ile girin.  (&amp;#8593;)&lt;/p&gt;

&lt;p&gt;c. Şimdi yukarıda öğrendiğimiz &lt;code&gt;hugo server -w&lt;/code&gt; komutumuzu vererek sitemizi tarayıcıda görüntülemek üzere sunucuda çalıştıralım. (&amp;#8593;)&lt;/p&gt;

&lt;p&gt;d. Şu anda sitemiz sunucuda çalışıyor, zaten bunu &lt;code&gt;Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)&lt;/code&gt;   mesajından anlıyoruz. Ancak websitemiz halen tamamıyla boş olduğu için tarayıcıda görebileceğimiz bir şey yok. (&amp;#8593;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;İsterseniz tarayıcınızı açıp &lt;code&gt;http://localhost:1313/&lt;/code&gt; yazarak Enter yapıp kontrol edebilirsiniz. Herhangi bir hata almayacak, boş bir sayfa ile karşılaşacaksınız.&lt;/p&gt;

&lt;h3 id=&#34;sitemize-sayfa-ekleme&#34;&gt;Sitemize Sayfa Ekleme&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/&#34;&gt;İlk Hugo yazımda bahsettiğim&lt;/a&gt; kendi kendimize siteye sayfa ekleme yoluna gitmeden bu kez hazır bir tema indirip o temanın sayfa şablonlarını kullanalım.&lt;/p&gt;

&lt;p&gt;Hugo&amp;rsquo;nun yeni siteyi oluşturmasından sonra site klasörünü kontrol ettiyseniz temaların yükleneceği klasörü &lt;em&gt;(themes)&lt;/em&gt; görmüş olabilirsiniz. Görmediyseniz lütfen yeni oluşturduğumuz deneme klasörünün içine bakın.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-2/hugo_tema_klasoru.png&#34; alt=&#34;Hugo Tema Klasörünü Tespit&#34; /&gt; &lt;br&gt;&lt;em&gt;&amp;ldquo;Hugo Temaları Themes Adlı Klasörde Tutuyor&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;hugo-temaları&#34;&gt;Hugo Temaları&lt;/h2&gt;

&lt;p&gt;Hugo temalarını galeri halinde bulacağımız adres &lt;a href = &#34;http://themes.gohugo.io/&#34; target = &#34;_blank&#34; &gt; themes.gohugo.io&lt;/a&gt; adresi. Buradan herhangi bir tema indirebiliriz.&lt;/p&gt;

&lt;p&gt;Ben örnek olarak &amp;ldquo;Blackburn&amp;rdquo; temasını seçiyorum ancak siz istediğiniz herhangi birini seçip benim örneği takip ederek temayı özelleştirebilirsiniz.&lt;/p&gt;

&lt;p&gt;Üstteki adresteki sayfada &lt;a href = &#34;http://themes.gohugo.io/blackburn/&#34; target = &#34;_blank&#34; &gt; temamı&lt;/a&gt; buldum, tema sayfasındaki indirme kısayolunu - &lt;code&gt;git clone https://github.com/yoshiharuyamashita/blackburn.git&lt;/code&gt; - sağ tıklamayla seçip kopyaladım (Ctrl + C).&lt;/p&gt;

&lt;h3 id=&#34;temaları-hugo-tema-klasörüne-yüklemek&#34;&gt;Temaları Hugo Tema Klasörüne Yüklemek&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Temamızı şimdi yerel diskimizdeki tema klasörüne indirip web projemizde kullanabileceğiz. (&lt;a href=&#34;http://pythonistan.net/blog/git-ve-github/&#34;&gt;Git&lt;/a&gt;&amp;lsquo;i bilgisayarınıza yüklemiştiniz, değil mi?)&lt;/p&gt;

&lt;p&gt;a. Komut satırından &lt;em&gt;themes&lt;/em&gt; adlı klasöre giriş yapın. (&lt;em&gt;D:&lt;/em&gt; klasöründeyken &lt;code&gt;cd siteler&lt;/code&gt; - &lt;code&gt;cd deneme&lt;/code&gt; - &lt;code&gt;cd themes&lt;/code&gt;) (&amp;#8595;)&lt;/p&gt;

&lt;p&gt;b. Kopyaladığımız yukarıdaki komutu komut satırına yapıştırın. (Ctrl + V) Tam komutumuz şöyle idi: &lt;code&gt;git clone https://github.com/yoshiharuyamashita/blackburn.git&lt;/code&gt; ve Enter&amp;rsquo;a basın. (&amp;#8595;)&lt;/p&gt;

&lt;p&gt;c. İndirmenin başarılı olup olmadığını anlamak için &amp;ldquo;themes&amp;rdquo; klasörünün içini kontrol edebiliriz.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-2/hugo_tema_yukleme.png&#34; alt=&#34;Hugo&#39;ya Tema Yükleme&#34; /&gt; &lt;br&gt;&lt;em&gt;&amp;ldquo;Hugo&amp;rsquo;ya Tema Yüklendi&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Bugünlük bu kadar.. Yarın indirdiğimiz &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-3/&#34;&gt;temanın özelleştirmesini&lt;/a&gt; ve artık web sunucumuzda yaptığımız değişikliklerin yansımalarını göreceğiz. O zamana kadar hoşçakalın&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo ile Statik Bir Websitesi Nasıl Yapılır? - Birinci Bölüm : Hugo Kurulumu</title>
      <link>http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-1/</link>
      <pubDate>Mon, 22 Aug 2016 00:17:50 -0400</pubDate>
      
      <guid>http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-1/</guid>
      <description>

&lt;h2 id=&#34;web-teknolojileri&#34;&gt;Web Teknolojileri&lt;/h2&gt;

&lt;p&gt;Sitemi yayınlamaya başladığımda ele almayı planladığım konulardan biri &lt;a href=&#34;http://pythonistan.net/blog/merhaba-dunya/&#34;&gt;web teknolojileri&lt;/a&gt; idi.&lt;/p&gt;

&lt;h3 id=&#34;django-python-temelli-bir-web-framework&#34;&gt;Django: Python Temelli Bir Web Framework&lt;/h3&gt;

&lt;p&gt;Amatör bir Paytonsever olarak web teknolojileri konusunu işlerken konumun &lt;a href = &#34;https://www.djangoproject.com/&#34; target = &#34;_blank&#34; &gt; &lt;strong&gt;Django&lt;/strong&gt; Web Framework&lt;/a&gt; olmasını arzu ederdim. Henüz kendimi Django&amp;rsquo;yu (Jango olarak okunuyor) size arz etmek için yetkin görmüyorum.&lt;/p&gt;

&lt;p&gt;Yine de madem &lt;em&gt;web teknolojileri&lt;/em&gt; dedik, bu konuda karınca kararınca işinize yarayacağına inandığım bilgileri paylaşmaya çalışacağım.&lt;/p&gt;

&lt;h3 id=&#34;hugo-statik-site-geliştiricisi-ssg&#34;&gt;Hugo Statik Site Geliştiricisi (SSG)&lt;/h3&gt;

&lt;p&gt;Statik bir web sitesini &lt;a href = &#34;https://gohugo.io/&#34; target = &#34;_blank&#34; &gt; Hugo&lt;/a&gt; ve &lt;a href = &#34;https://github.com/&#34; target = &#34;_blank&#34; &gt; Github&lt;/a&gt; yardımı ile &lt;strong&gt;0&lt;/strong&gt; (evet, yanlış duymadınız. Sıfır) masraf ile kurabilir, sözünüzü Dünya ile paylaşabilirsiniz. Bu meyanda size herhangi bir katkı sağlayabilirsem bu benim için büyük bir kıvanç olur.&lt;/p&gt;

&lt;p&gt;Evet, gelelim Hugo&amp;rsquo;ya ve faydalarına! Geçen yazımda Hugo&amp;rsquo;dan ve faydalarından biraz &lt;a href=&#34;http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/&#34;&gt;bahsetmiştim&lt;/a&gt;. Arzu edenler o yazıya bir göz atabilirler.&lt;/p&gt;

&lt;p&gt;Bu yazıda SSG&amp;rsquo;miz Hugo&amp;rsquo;yu bilgisayarımıza nasıl kuracağımızı herkesin anlayabileceği bir şekilde bebek adımlarıyla anlatmaya çalışacağım.&lt;/p&gt;

&lt;p&gt;Geçen haftaki yazıda aslında &lt;a href=&#34;http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/&#34;&gt;Hugo kurulumundan&lt;/a&gt; azıcık bahsetmiştim, ama o makale istediğim netlikte olmadı, bu sefer çok daha detaylı bir &lt;strong&gt;nasıl yapılır klavuzu&lt;/strong&gt; hazırlamaya karar verdim.&lt;/p&gt;

&lt;p&gt;Beş bölümlük &lt;strong&gt;Hugo ile statik bir websitesi nasıl yapılır&lt;/strong&gt; serimin huzurunuzdaki ilk &lt;strong&gt;(1.)&lt;/strong&gt; bölümü &lt;a href = &#34;#hugokur&#34;&gt; Hugo kurulumuna&lt;/a&gt; ayrıldı. Diğer adımlar ise şöyle: &lt;strong&gt;2.&lt;/strong&gt;: &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-2/&#34;&gt;Hugo ile Siteyi Lokal Bilgisayarda Geliştirme&lt;/a&gt;, &lt;strong&gt;3.&lt;/strong&gt;: &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-3/&#34;&gt;Geliştirdiğimiz Web Sitesini ve Temayı Özelleştirme&lt;/a&gt;, &lt;strong&gt;4.&lt;/strong&gt;: &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-4/&#34;&gt;Geliştirdiğimiz Web Sitesinin Sayfalarını Düzenleme (Editing)&lt;/a&gt; &lt;strong&gt;5.&lt;/strong&gt;: &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-5/&#34;&gt;Geliştirdiğimiz Web Sitesini Github ile Web&amp;rsquo;de Ücretsiz Barındırma (Hosting)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Evet, fazla uzattık, şimdi hemen aksiyona geçelim&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;windows-için-hugo-kurulumu&#34;&gt;Windows İçin Hugo Kurulumu&lt;/h2&gt;

&lt;p&gt;Windows versiyonunuz ne olursa olsun (Win10/8/7/Xp) (&lt;em&gt;&amp;ldquo;Xp kullanan var mı hala ya???&amp;rdquo; :)&lt;/em&gt; ) aşağıda gösterildiği gibi Hugo&amp;rsquo;yu kurabilirsiniz.&lt;/p&gt;

&lt;h3 id=&#34;1-sistem-mimarisini-tespit-ve-hugo-yu-indirme&#34;&gt;1. Sistem Mimarisini Tespit ve Hugo&amp;rsquo;yu İndirme&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;İlk iş olarak Windows&amp;rsquo;unuzun hangi bit mimarisi ile çalıştığını belirleyin. Zira 32 ve 64 Bit mimari için farklı Hugo sürümleri var.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a)&lt;/strong&gt; Masaüstü&amp;rsquo;nüzdeki Bilgisayar simgesine sağ tıklayıp açılan menüden &lt;code&gt;Özellikler&lt;/code&gt;&amp;lsquo;i seçin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;b)&lt;/strong&gt; Açılacak pencerede &lt;strong&gt;Sistem Türü&lt;/strong&gt; bilgisinin karşısında sisteminizin mimarisini öğrenebilirsiniz. (Bkz. Üstteki Ekran Görüntüsü)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Mimarinizi öğrendiğize göre size uygun olan &lt;strong&gt;Hugo&lt;/strong&gt; sürümünü indirelim.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a)&lt;/strong&gt; Hugo &lt;a href = &#34;https://github.com/spf13/hugo/releases&#34; target = &#34;_blank&#34; &gt; download sayfasına&lt;/a&gt; gidin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;b)&lt;/strong&gt; Bugün itibarı ile (&lt;strong&gt;22 Ağustos 2016&lt;/strong&gt;) Hugo&amp;rsquo;nun stabil sürüm no.su &lt;strong&gt;0.16&lt;/strong&gt;. Aşağıdaki resimde görülen Windows dosyalarından size uygun olanı indirin. (download)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugo_windows_uygun_surum.png&#34; alt=&#34;Windows&#39;umuz İçin Hugo&#39;nun Uygun Versiyonunu İndiriyoruz&#34; /&gt; &lt;br&gt;&lt;em&gt;&amp;ldquo;Windows&amp;rsquo;umuz İçin Hugo&amp;rsquo;nun Uygun Sürümünü İndiriyoruz&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-hugo-zip-dosyasını-açma-ve-sürücüye-kopyalama&#34;&gt;2. Hugo Zip Dosyasını Açma ve Sürücüye Kopyalama&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Hugo&lt;/strong&gt; executable (.exe) dosyasını bilgisayarımıza indirdikten sonra kolay ulaşım için daha uygun bir yere koyacağız.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a)&lt;/strong&gt; Bilgisayarımızın &lt;code&gt;C:\&lt;/code&gt; klasörünün hemen altına &lt;code&gt;hugo&lt;/code&gt; isimli yeni bir boş klasör oluşturun.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;b)&lt;/strong&gt; Zip dosyasının içinde bulunan &lt;code&gt;hugo.exe&lt;/code&gt; dosyasını oluşturduğumuz yeni klasörün içine kopyalayın. (yada taşıyın, fark etmez.) [Alt solda ilk resim&amp;#8595;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;c)&lt;/strong&gt; Zip dosyasını ve gereksiz diğer dosyaları (readme,copyright v.s.) silebilirsiniz. İhtiyacımız olan tek dosya &lt;code&gt;hugo.exe&lt;/code&gt; çünkü.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugoyu_windowsa_koyma.gif&#34; alt=&#34;Hugo&#39;yu Yerel Diskimizde Uygun Bir Yere Koyuyoruz&#34; /&gt; &lt;br&gt;&lt;em&gt;&amp;ldquo;Hugo&amp;rsquo;yu Yerel Diskimizde Uygun Bir Yere Koyuyoruz&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-hugo-yu-ortam-değişkenine-path-ekleme&#34;&gt;3. Hugo&amp;rsquo;yu Ortam Değişkenine (PATH) Ekleme&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Şimdi Hugo&amp;rsquo;yu PATH&amp;rsquo;a ekleyeceğiz, zira öyle yapmazsak &lt;strong&gt;Hugo&lt;/strong&gt;&amp;lsquo;ya komut satırından (Yeni versiyon Windows&amp;rsquo;lar için &lt;strong&gt;Powershell&lt;/strong&gt;, Xp&amp;rsquo;ciler içinse &lt;strong&gt;Cmd&lt;/strong&gt;) rahatlıkla ulaşamayız. Path&amp;rsquo;a ekledikten sonra herhangi bir klasör içinden &lt;strong&gt;Hugo&lt;/strong&gt;&amp;lsquo;ya hemen ulaşabileceğiz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a)&lt;/strong&gt; Yukarıdaki gibi Masaüstü&amp;rsquo;nüzdeki Bilgisayar simgesine sağ tıklayıp &lt;code&gt;Özellikler&lt;/code&gt; menüsünü tıklayarak açılan pencereden &lt;code&gt;Gelişmiş Sistem Ayarları&lt;/code&gt;&amp;lsquo;nı seçin. [Altta ilk baştaki resim&amp;#8595;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;b)&lt;/strong&gt; &lt;code&gt;Sistem Özellikleri&lt;/code&gt; penceresinin üçüncü sayfası (tabı) olan &lt;code&gt;Gelişmiş&lt;/code&gt; sayfasını açarak en alttaki &lt;code&gt;Ortam Değişkenleri&lt;/code&gt; düğmesine tıklayın. [Alt ortadaki resim&amp;#8595;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;c)&lt;/strong&gt; &lt;code&gt;Ortam Değişkenleri&lt;/code&gt; penceresinde üstteki ilk &lt;code&gt;Yeni...&lt;/code&gt; düğmesine tıklayın. Açılacak &lt;code&gt;Yeni Kullanıcı Değişkeni&lt;/code&gt; küçük penceresinde &lt;code&gt;Değişken Adı:&lt;/code&gt; bölümünün karşısına &amp;ldquo;&lt;strong&gt;PATH&lt;/strong&gt;&amp;rdquo; değerini girin. &lt;code&gt;Değişken Değeri&lt;/code&gt; bölümünün karşısına &amp;ldquo;&lt;strong&gt;C:\hugo&lt;/strong&gt;&amp;rdquo; değerini yazın. (Tırnak işaretleri girilmeyecek.)&lt;/p&gt;

&lt;p&gt;(ÖNEMLİ NOT: Son değeri &lt;code&gt;C:\hugo&lt;/code&gt; kendiniz klavyeden girebileceğiniz gibi &lt;code&gt;Dizine Gözat...&lt;/code&gt; seçeneği ile gözatma penceresinden gösterebilirsiniz.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DİKKAT!!!&lt;/strong&gt; Dosyayı değil, dizini hedef olarak gösteriyoruz. Burası önemli! [Alt en sağdaki resim&amp;#8595;]&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugo_path_a_ekleme_1.jpg&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Bilgisayarım - Özellikler - Gelişmiş Sistem Ayarları Penceresine Ulaşma&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugo_path_a_ekleme_1_thumb.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugo_path_a_ekleme_2.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Gelişmiş Tab Sayfasındaki Ortam Değişkenleri Düğmesine Tıklıyoruz&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugo_path_a_ekleme_2_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugo_path_a_ekleme_3.jpg&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Kullanıcı Değişkenine (PATH) Hugo&#39;yu Ekliyoruz.&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugo_path_a_ekleme_3_thumb.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;4-hugo-kurulumu-neredeyse-bitti-kontrol-zamanı&#34;&gt;4. Hugo Kurulumu: Neredeyse Bitti, Kontrol Zamanı!&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Şimdi bilgisayarınızı yeniden başlatın. Herşeyin istediğimiz gibi olup olmadığını kontrol edelim.&lt;/p&gt;

&lt;p&gt;a) Powershell&amp;rsquo;i yada Cmd&amp;rsquo;yi açın. Herhangi bir klasör içinde &lt;code&gt;hugo&lt;/code&gt; komutunu yazın ve Enter&amp;rsquo;a basın. Cevap olarak &amp;ldquo;unable to locate config file&amp;rdquo; şeklinde bir mesaj alıyorsak &lt;a name=&#34;hugokur&#34;&gt;Hugo kurulumu başarı ile gerçekleştirildi&lt;/a&gt; demektir.&lt;/p&gt;

&lt;p&gt;b) Üstteki hatayı alıyoruz zira henüz hiç bir site oluşturmadık. Site oluşturulduğunda config dosyamız otomatik olarak oluşturulacaktır. Site oluşturmayı bir önceki yazımdan hatırlıyor olmalısınız. Hatırlarsanız, &lt;a href=&#34;http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/#hugo-ile-bir-site-yapalım-windows-için&#34;&gt;orada&lt;/a&gt; &lt;code&gt;hugo new site yenisite&lt;/code&gt; komutunu vererek bir site oluşturmuştuk.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/hugo-website-yapma-1/hugo_basarili_kurulum.jpg&#34; alt=&#34;Windows&#39;umuz İçin Hugo&#39;nun Uygun Versiyonunu İndiriyoruz&#34; /&gt; &lt;br&gt;&lt;em&gt;&amp;ldquo;Hugo&amp;rsquo;nun Başarı ile Kurulduğunu Gösteren Ekran Görüntüsü&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Hugo&amp;rsquo;yu sistemimize kurmayı başardık. Şimdi sıra &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-2/&#34;&gt;Hugo ile basit ama güzel bir websitesi&lt;/a&gt; yapmaya geldi. Sizi çok bekletmeyeceğim umarım.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git Nedir? Nerede ve Nasıl Kullanılır?</title>
      <link>http://pythonistan.net/blog/git-ve-github/</link>
      <pubDate>Sun, 21 Aug 2016 00:17:50 -0400</pubDate>
      
      <guid>http://pythonistan.net/blog/git-ve-github/</guid>
      <description>

&lt;h2 id=&#34;git-ile-tanışma&#34;&gt;Git ile Tanışma&lt;/h2&gt;

&lt;p&gt;Bir önceki yazımda bahsettiğim &lt;a href=&#34;http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/&#34;&gt;Hugo ve Jekyll&lt;/a&gt; ile web sitesi yapma olayına girişmeden önce üzerinde durmamız gereken bir konu var: &lt;strong&gt;Git&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Bazı temel &lt;code&gt;git&lt;/code&gt; komutlarını öğrenmemiz gerekiyor zira web sitemizi oluştururken dosya indirme ve siteyi oluşturduktan sonra ise sitemizi web server&amp;rsquo;a yüklemek için bu komutları kullanacağız.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt; bizim için sadece dosyalarımızı yedeklemek yada güncellemeleri tutmakla kalmayıp dosyaları web&amp;rsquo;e transfer etmede kullanacağımız bir yol olacak. Eskiden bu iş için ftp protokolu ve ftp programları kullanılırdı.&lt;/p&gt;

&lt;h3 id=&#34;git-versiyon-kontrol-sistemi&#34;&gt;Git : Versiyon Kontrol Sistemi&lt;/h3&gt;

&lt;p&gt;Git yazılımlar için kullanılan bir çeşit versiyon kontrol sistemidir. Yazılımcılar bu tür sistemlerle kaynak kodunda zaman içinde yapılan değişimleri görüp yönetebilirler.&lt;/p&gt;

&lt;p&gt;&lt;a href = &#34;https://tr.wikipedia.org/wiki/S%C3%BCr%C3%BCm_kontrol_sistemi&#34; target = &#34;_blank&#34;&gt; Versiyon kontrol sistemleri&lt;/a&gt; bir yazılımda herhangi bir anda yada herhangi bir kişi tarafından yapılan her türlü değişikliğin hepsinin kaydını tutar. Herhangi bir hata durumunda kolaylıkla eski stabil duruma dönüş olanağı verir.&lt;/p&gt;

&lt;p&gt;Bu şekilde çok değerli olan kaynak kodumuza gelecek zararları önleneyebiliriz.&lt;/p&gt;

&lt;p&gt;Git&amp;rsquo;in mucidi Linux&amp;rsquo;un da ilk geliştiricisi olan &lt;a href = &#34;https://tr.wikipedia.org/wiki/Linus_Torvalds&#34; target = &#34;_blank&#34; &gt; Linus Torvalds&lt;a/&gt;.&lt;/p&gt;

&lt;h3 id=&#34;git-bizim-için-anlamı&#34;&gt;Git : Bizim İçin Anlamı&lt;/h3&gt;

&lt;p&gt;Yukarıda &lt;strong&gt;Git&lt;/strong&gt;&amp;lsquo;i tanımlayan ifadeler fazla soyut kalmış olabilir. Yada kendinize &amp;ldquo;Benim büyük yazılım projeleri ile ilgim yok, o halde neden &lt;code&gt;git&lt;/code&gt;&amp;lsquo;e ihtiyaç duyayım?&amp;rdquo; sorusunu soruyor olabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt;, üzerinde yüzlerce kişinin aynı anda çalıştığı ve katkı verdiği büyük yazılım projeleri (Linux, v.d.) yada milyarlık firmaların üzerinde çalıştığı envai çeşit projeler (mesela kitap revizyonu, v.d.) için değil, her tür boyuttaki kişisel projelerde kullanabilecek imkanlar sağlıyor.&lt;/p&gt;

&lt;p&gt;Bu sistemi anlamak adına basit bir örnek verelim: Üzerinde çalıştığımız bir word dosyamız olsun. Mesela uzunca bir doküman yazıyoruz. Dosyamızı her gün açıp bir şeyler ekleyip, çıkardığımızı varsayalım.&lt;/p&gt;

&lt;p&gt;Böyle bir çalışmayı şu ana kadar yaptıysanız bazen yapmamanız gereken bir hata yaptığınızı, eklememeniz gereken bir şeyi eklediğinizi bazen de tersini yaptığınızı görmüşsünüzdür. Dolayısıyla kaçırdığınız bir şeyler hep olur.&lt;/p&gt;

&lt;p&gt;Bazen de ana dosyanın üzerine kaydetmeyip &lt;code&gt;farklı kaydet&lt;/code&gt; seçeneğini kullanarak birbirinin benzeri onlarca dosya oluşturduğunuzu şaşkınlıkla görür, hangisini en son oluşturduğunuzu anlamak için bir sürü zahmet çekersiniz.&lt;/p&gt;

&lt;p&gt;Bazen bir dosyada bulunan bir bilgi diğerinde bulunmaz, o dosyadan diğer dosyaya taşımanız gerekir. Kısaca büyük bir zahmettir.&lt;/p&gt;

&lt;p&gt;Hele bir de bu işlemi iki ayrı lokasyonda (aynı lokasyonda iki ayrı bilgisayarda olabilir) gerçekleştiriyorsanız işlem içinden çıkılmaz bir hal alır.&lt;/p&gt;

&lt;h3 id=&#34;git-master-ve-branch&#34;&gt;Git : Master ve Branch&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt; bu tür durumlar için dosyanın ana kopyası (&lt;em&gt;master&lt;/em&gt;) ve yukarıdaki örnekteki gibi kaydedilen diğer versiyonlar için branş kopyası (&lt;em&gt;branch&lt;/em&gt;) konseptini sunuyor.&lt;/p&gt;

&lt;p&gt;Bir ana dal ve yüzlerce farklı noktadan onlarca katkı verenin oluşturduğu dallardan oluşan bir ağaç gibi düşünün.&lt;/p&gt;

&lt;p&gt;Branşda oluşan değişikliklerden memnunsanız branşı ana dala bağlayabilirsiniz. (&lt;em&gt;merge&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;Memnun değilseniz iptal edip ana kopyadan yeni bir dal oluşturabilir, kullanmadığınız dalları iptal edebilirsiniz.&lt;/p&gt;

&lt;p&gt;Dosyalarımız &lt;code&gt;git&lt;/code&gt; sisteminde otomatik olarak yedeklenir. Herhangi bir anda dosya üzerinde o ana kadar yapılan düzeltmeleri (&lt;code&gt;commit&lt;/code&gt;) görebilir (&lt;code&gt;git status&lt;/code&gt;) ve herhangi bir andaki duruma (statüye) dönebilirsiniz. (&lt;code&gt;git reset --hard statü.nosu&lt;/code&gt;)&lt;/p&gt;

&lt;h3 id=&#34;git-repository-depo&#34;&gt;Git : Repository (Depo)&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt; sisteminde oluşturduğumuz her bağımsız proje birimine repository deniyor. Repo&amp;rsquo;nun içeriği dosya, klasör, foto, video, excel tablosu, ve her tür veri seti olabilir.&lt;/p&gt;

&lt;p&gt;Herhangi bir repo oluşturduğumuzda onun master (ana) kopyası hemen oluşturulur. Üzerinde çalışabileceğimiz branş kopyalarını biz oluşturacağız. Branş kopyaları üzerinde denediğimiz ve memnun kaldığımız değişiklikleri ana kopyayla birleştiriyoruz. (merge)&lt;/p&gt;

&lt;h2 id=&#34;git-bizi-asıl-ilgilendiren-komutlar&#34;&gt;Git : Bizi Asıl İlgilendiren Komutlar&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt; sistemi gerçekten çook geniş ve başlı başına uzmanlaşılabilecek bir alan. Biz asıl olarak &lt;code&gt;git&lt;/code&gt; ile bir web server&amp;rsquo;a ulaşmak ve oradan birşeyler indirmek (pull - clone), Git sistemini kullanan en önemli sitelerden biri olan Github&amp;rsquo;a dosya yüklemek (push), repo oluşturup (init), repoya yapacağımız son değişiklikleri güncelleyip düzeltmek (commit) gibi işlemler yapacağız.&lt;/p&gt;

&lt;p&gt;Hadi başlayalım.&lt;/p&gt;

&lt;h3 id=&#34;git-kuruyoruz&#34;&gt;Git kuruyoruz.&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt; kurmak için &lt;a href = &#34;https://git-scm.com/downloads&#34; target = &#34;_blank&#34;&gt; Git websitesine&lt;/a&gt; gidip sisteminize uygun olan versiyonu indirin ve kurun. &lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-1&#34;&gt;(32 Bit / 64 Bit)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Önemli: Kurulum sırasında ortam değişkenine (PATH) ekleme seçeneğini ikinci seçenek olarak seçin. Yani &amp;ldquo;Use Git from the Windows Command Prompt&amp;rdquo;. (hemen altta resim 1) Bu şekilde &lt;a href=&#34;http://pythonistan.net/blog/python-kabukta-ilk-program&#34;&gt;(Powershell)&lt;/a&gt;&amp;lsquo;den sıkıntısız olarak &lt;code&gt;git&lt;/code&gt; komutlarını çalıştıracağız. Diğer seçenekleri varsayılanlar olarak bırakın.&lt;/p&gt;

&lt;p&gt;Git&amp;rsquo;i komut satırından çalıştıracağımız için daha önceki yazılardan aşina olduğunuz &lt;a href=&#34;http://pythonistan.net/blog/python-kabukta-ilk-program&#34;&gt;(Powershell)&lt;/a&gt;&amp;lsquo;i yine çalıştırın. Kurulumun doğru olup olmadığını anlamak için herhangi bir klasör içinde &lt;code&gt;git&lt;/code&gt; yazıp gelen cevaba bakabilirsiniz. (hemen altta resim 2)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/img/blog/git/git_windows_path_option.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Git&#39;i Powershell&#39;de Kullanmak İçin Ortam Değişkenine Ekliyoruz&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/git/git_windows_path_option_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;http://pythonistan.net/img/blog/git/git_kurulum_kontrolu.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Git&#39;in Windows&#39;taki Kurulumunu Kontrol Ediyoruz&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/git/git_kurulum_kontrolu_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;bir-repo-oluşturalım&#34;&gt;Bir Repo Oluşturalım&lt;/h3&gt;

&lt;p&gt;Şimdi bilgisayarınızın içinde herhangi bir klasöre gidin ve şu komutu verin: &lt;code&gt;git init&lt;/code&gt;. Klasörünüzün içinde bir kaç dosya bulunsun. Bu komut git&amp;rsquo;e bu klasörün içinde bir repo oluşturulacağını ve &lt;code&gt;git&lt;/code&gt; sisteminin bu repoyu takibe başlayacağını söylüyor.&lt;/p&gt;

&lt;p&gt;Daha sonra &lt;code&gt;git add .&lt;/code&gt; komutunu vererek klasörümüzün içinde bulunan her şeyin (her tür dosya) repoya eklenmesini istiyoruz.&lt;/p&gt;

&lt;p&gt;Şimdi &lt;code&gt;git commit -m &amp;quot;dosyaları repoya ilk kez bagliyoruz&amp;quot;&lt;/code&gt; yazıp Enter&amp;rsquo;a basarak repoya eklediğimiz dosyaları tam o andaki haliyle ve durumuyla (son düzeltme durumu-last commit) repomuza bağlanması işlemini gerçekleştiriyoruz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/git/git_ilk_komutlar_1.png&#34; alt=&#34;Git ile Bazı Temel Komutlar&#34; /&gt; &lt;br&gt;&amp;ldquo;Git ile Bazı Temel Komutları Deneyelim&amp;rdquo;&lt;/p&gt;

&lt;h2 id=&#34;sıra-uzak-sunucu-olan-github-a-geldi&#34;&gt;Sıra Uzak Sunucu Olan Github&amp;rsquo;a Geldi&lt;/h2&gt;

&lt;p&gt;Lokalda (yerel bilgisayar) yapacağımız işlemler bitti. Şimdi sıra ekleyip repoya bağladığımız dosyalarımızı git vasıtasıyla &lt;strong&gt;Github&lt;/strong&gt;&amp;lsquo;a (yada Gitlab/Bitbucket, hangisini kullanıyorsanız ona) yüklemek.&lt;/p&gt;

&lt;p&gt;İlk olarak &lt;a href = &#34;https://github.com/&#34; target =&#34;_blank&#34;&gt; Github&lt;/a&gt; sitesine gidin ve kayıt olun. (Ana ekranda sağ üstteki yeşil Sign up düğmesi) Kendinize kısa bir kullanıcı ismi belirleyin.&lt;/p&gt;

&lt;p&gt;Kayıttan sonra kayıt sırasında verdiğiniz mail adresinize bir teyit maili gelecektir, onu teyit edin.&lt;/p&gt;

&lt;p&gt;Kayıt işlemi tamamlandıysa şimdi ana ekranda &lt;code&gt;Start a project&lt;/code&gt; düğmesine tıklayın. Reponuza &lt;em&gt;test&lt;/em&gt; adını verin ve &lt;code&gt;Create Repository&lt;/code&gt; düğmesine tıklayarak reponuzu oluşturun. (üstteki büyük resim)&lt;/p&gt;

&lt;h3 id=&#34;github-a-yükleme-yapalım&#34;&gt;Github&amp;rsquo;a Yükleme Yapalım&lt;/h3&gt;

&lt;p&gt;Şimdi Lokalde başlattığımız repomuzun içeriğindeki dosyaları web&amp;rsquo;e yükleyelim. Komut satırı Powershell&amp;rsquo;de vereceğimiz komut: &lt;code&gt;git remote add origin https://github.com/kullaniciadiniz/test.git&lt;/code&gt; (bu komutu &lt;code&gt;git init&lt;/code&gt; komutunu verdiğiniz aynı klasörün içinden çalıştıracaksınız)&lt;/p&gt;

&lt;p&gt;Son olarak aşağıdaki komutu girin: &lt;code&gt;git push -u origin master&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; size şimdi kullanıcı adınızı ve parolanızı soracak. Kullanıcı adınızı girin ve Enter&amp;rsquo;a basın. Şifreniz istendiğinde yine aynı şekilde girin (şifreniz ekranda görülmeyecektir) ve Enter&amp;rsquo;a basın. Dosyalarınız webdeki alanınıza yüklenecek.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/git/git_ile_githuba_dosya_push_yapma.png&#34; alt=&#34;Git ile Github&#39;a Dosyaları Push Yapma&#34; /&gt; &lt;br&gt;&amp;ldquo;Git ile Github&amp;rsquo;a Dosyaları Yüklüyoruz&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Bir - iki saniye sonra Github websitesini kontrol edin. Yüklediğiniz dosyaların test isimli reponuzun altında olduğunu göreceksiniz.&lt;/p&gt;

&lt;p&gt;Şu andan itibaren takip edilen klasörünüzün içindeki dosyalarda yaptığınız her değişikliğin kaydı tutulacak ve commit (düzeltme) yaptığınız anda bu değişiklikler repo ile güncellenmek amacıyla tutulacaktır.&lt;/p&gt;

&lt;p&gt;Tersi de geçerli. Yani uzak sürücüdeki (web) dosyalarda herhangi bir değişiklik düzeltmesi yaptıysanız bu düzeltmeler lokaldeki kopyasıyla eşitlenecektir. (Bunun için verilen komut: &lt;code&gt;git pull origin master&lt;/code&gt;)&lt;/p&gt;

&lt;h2 id=&#34;komut-satırı-sistemlerinin-yaşattığı-duygular&#34;&gt;Komut Satırı Sistemlerinin Yaşattığı Duygular&lt;/h2&gt;

&lt;p&gt;Bizim gibi acemiler için komut satırı kendisinden saygı ile karışık korku beslenen, anlaşılmaz ve hatta biraz mistik bir konu gibi.&lt;/p&gt;

&lt;p&gt;Her an bir yanlış yapıp sistemi mahvedeceğim duygusu komut satırını kullanırken çok kere aklıma gelmiştir.&lt;/p&gt;

&lt;p&gt;İşletim sistemi olarak Windows ve Mac kullandıysanız siz de bu yazımda bahsettiğim şeylere biraz öyle bakmış olabilirsiniz.&lt;/p&gt;

&lt;p&gt;Ancak meraklanmayın, burada sisteminize zarar verebilecek herhangi bir şey anlatmadım. Bizim için son derece yararlı olacak temel &lt;code&gt;git&lt;/code&gt; komutlarını ele aldık.&lt;/p&gt;

&lt;p&gt;Buradaki 5-6 &lt;code&gt;git&lt;/code&gt; komutunu değişik klasörlerde tekrar edin, iyi anladığınıza emin olun. Çok yararını göreceğinize sizi temin ederim.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/blog/Hugo-ile-statik-bir-website-yapma-klavuzu-bolum-1&#34;&gt;Hugo ile website yapımına&lt;/a&gt; yarın başlıyoruz. Öyleyse, &lt;strong&gt;hazır mıyız!!!?&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Jekyll&#39;dan Hugo&#39;ya Geçiş</title>
      <link>http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/</link>
      <pubDate>Thu, 18 Aug 2016 00:17:50 -0400</pubDate>
      
      <guid>http://pythonistan.net/blog/Jekylldan-Hugoya-gecis/</guid>
      <description>

&lt;p&gt;Birkaç günlük aradan sonra tekrar merhaba! Sitemdeki makyaj değişikliğini fark etmiş olmalısınız.&lt;/p&gt;

&lt;p&gt;Eski siteyi &lt;a href = &#34;https://jekyllrb.com/&#34; target = &#34;_blank&#34;&gt; Jekyll &lt;/a&gt; ile tasarlamıştım, özellikle build (siteyi oluşturma süresi) süresinden hoşnut olmadığımdan Jekyll&amp;rsquo;ı Hugo ile değiştirmeye karar verdim.&lt;/p&gt;

&lt;p&gt;Evet, blogumda baştan beri Jekyll ile olan maceram bugün itibarı ile sona erdi. Onun yerine Hugo statik site geliştiricisine (static site generator) geçiyorum.&lt;/p&gt;

&lt;p&gt;Bu yazının yazıldığı 18 Ağustos 2016 itibarı ile &lt;a href = &#34;https://www.staticgen.com/&#34; target = &#34;_blank&#34;&gt; StaticGen &lt;/a&gt;&amp;lsquo;den SSG&amp;rsquo;lerin kullanım istatistikleri aşağıdaki gibi:&lt;/p&gt;

&lt;h2 id=&#34;wordpress-ve-ssg-lere-duyulan-ihtiyaç&#34;&gt;Wordpress ve SSG&amp;rsquo;lere Duyulan İhtiyaç&lt;/h2&gt;

&lt;p&gt;Web sitesi oluşturmak için birden fazla yöntem var. Son yıllarda en yaygın olarak kullanılan blog oluşturma aracı ise şüphesiz &lt;a href = &#34;https://tr.wordpress.org&#34; target =&#34;_blank&#34;&gt;Wordpress&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Gerek yavaşlığı gerekse plug-inlerin kurulumundaki bazı sıkıntılar nedeniyle son dönemde blogcular Wordpress tercihlerini sorgular hale geldiler.&lt;/p&gt;

&lt;p&gt;İşte tam bu sıralarda devreye statik site oluşturucuları girdi. SSG&amp;rsquo;ler özellikle sitesinde dinamik içeriğe ihtiyaç duymayan, sitelerini hızlı bir şekilde hazırlamak ve sunucuya yüklemek isteyen bloggerlar tarafından tercih ediliyor.&lt;/p&gt;

&lt;p&gt;Statik site oluşturucularında site önceden oluşturulduğundan (generate) http sunucusuna (yani web servera) gereksiz yere yük binmiyor.&lt;/p&gt;

&lt;p&gt;Wordpress gibi uygulamalarda her bir istemcinin her isteğinde aynı sayfa tekrar tekrar render edilip sunucu tarafından bize gönderilir. Bu da sunucuya ciddi bir yük demektir.&lt;/p&gt;

&lt;p&gt;Blog sayfaları doğası itibarı ile büyük oranda zaten statik içerikli olduğu için Wordpress gibi sistemlerde atıl şekilde duran onca plug in v.s. uygulamasının boşu boşuna çalışmasına ihtiyaç kalmıyor.&lt;/p&gt;

&lt;h2 id=&#34;başlıca-statik-site-geliştiricileri&#34;&gt;Başlıca Statik Site Geliştiricileri&lt;/h2&gt;

&lt;p&gt;Şu anda en gözde statik site oluşturucu ortamı Jekyll. Jekyll gerek kullanım kolaylığı gerekse dökümantasyonundaki detaylı bilgiler ve topluluğunun güçlülüğü ile dikkat çekiyor.&lt;/p&gt;

&lt;p&gt;&lt;a href = &#34;https://jekyllrb.com/&#34; target = &#34;_blank&#34;&gt; &lt;strong&gt;Jekyll&lt;/strong&gt; &lt;/a&gt;, statik site geliştiricileri ile yeni tanışanlar için nisbeten kolay addedilebilir.&lt;/p&gt;

&lt;p&gt;Dezavantajı ise diğer SSG&amp;rsquo;lerine göre oldukça yavaş olması. Özellikle karşılaştırma kriteri olarak biraz sonra değineceğim Hugo&amp;rsquo;ya göre neredeyse 10&amp;rsquo;da 1 oranında yavaş.&lt;/p&gt;

&lt;p&gt;Hugo&amp;rsquo;nun hız dışında Jekyll&amp;rsquo;a üstünlük sağladığı bir diğer alan çalıştırılması için herhangi bir dependency&amp;rsquo;e (ek paketler) ihtiyaç duymaması.&lt;/p&gt;

&lt;p&gt;Yani Jekyll&amp;rsquo;da kurulum ve ekstra her bir özellik (feature) kullanmak için değişik paketler yüklemek zorunda olmamıza karşın Hugo tek bir binary dosya  (windows için .exe dosyası) kullanarak sisteminize kurulup kullanılabiliyor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/ssg/jekyll_site_eski_dizayn.png&#34; alt=&#34;Jekyll ile Yaptığım Sitenin Eski Dizaynı&#34; /&gt; &lt;br&gt;&amp;ldquo;Pythonistan.net&amp;rsquo;in Jekyll ile Oluşturulan 17 Ağustos 2016 tarihli Anasayfa Görüntüsü&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Şimdilik son olarak şunu söyleyeyim: &lt;strong&gt;Hugo&lt;/strong&gt; çok kullanışlı bir özellik olan &lt;code&gt;live reload&lt;/code&gt;&amp;lsquo;a öntanımlı olarak sahip. (Sitenizde yaptığınız bir değişikliği tarayıcıda anında görebiliyorsunuz. Sunucuyu yada tarayıcıyı kapatıp açmanıza gerek yok.)&lt;/p&gt;

&lt;h2 id=&#34;hugo-hakkında&#34;&gt;Hugo Hakkında&lt;/h2&gt;

&lt;p&gt;İleride kurulum ve kullanım yönünden Hugo ve Jekyll&amp;rsquo;dan detaylı olarak bahsetmeyi ve ikisini karşılaştırmayı planlıyorum.&lt;/p&gt;

&lt;p&gt;Şimdilik size &lt;strong&gt;Hugo&lt;/strong&gt; ile ilgili kısa bazı bilgiler vereyim.&lt;/p&gt;

&lt;p&gt;Hugo &lt;a href = &#34;https://en.wikipedia.org/wiki/Go_(programming_language)&#34; target = &#34;_blank&#34;&gt; &lt;strong&gt;Go&lt;/strong&gt; &lt;/a&gt; diliyle yazılmış bir statik site oluşturucusu. Birçok insanın destek verdiği açık kaynak kodlu bir özgür yazılım olan Hugo&amp;rsquo;nun ilk yaratıcısı &lt;a href = &#34;https://twitter.com/spf13&#34; target = &#34;_blank&#34;&gt; Steve Francia &lt;/a&gt;. &lt;strong&gt;Hugo&lt;/strong&gt; bugün itibarı ile 0,16 stabil sürümüne sahip ve Windows, Mac ve Linux ortamında çalışabiliyor.&lt;/p&gt;

&lt;p&gt;Kullanmak için tek yapmanız gereken &lt;a href = &#34;https://gohugo.io/&#34; target = &#34;_blank&#34;&gt; Hugo websitesinden &lt;/a&gt;kendi işletim sisteminize uygun paketi indirmek. Dosyayı bilgisayara indirip herhangi bir klasöre yerleştirdikten sonra klasör yolunu (mesela &lt;code&gt;c:\Hugo&lt;/code&gt; gibi) ortam değişkenine (PATH) eklemeniz gerekiyor. Bu kadar.&lt;/p&gt;

&lt;h2 id=&#34;hugo-ile-bir-site-yapalım-windows-için&#34;&gt;Hugo ile Bir Site Yapalım (Windows İçin)&lt;/h2&gt;

&lt;p&gt;Hugo ile hemen bir deneme sitesi yapalım. Hugoyu indirin ve ortam değişkenine ekleyin.&lt;/p&gt;

&lt;p&gt;Şimdi komut satırında &lt;a href=&#34;http://pythonistan.net/blog/python-kabukta-ilk-program&#34;&gt;(Powershell)&lt;/a&gt; &lt;code&gt;hugo new site yenisite&lt;/code&gt; komutu yazıp yeni bir site oluşturalım. Hangi klasördeyseniz o klasörün altına yenisite adında bir klasör oluşturuldu.Hemen kontrol edin.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/ssg/hugo_yeni_site_olusturma.png&#34; alt=&#34;Hugo ile yeni bir site oluşturma&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Sitemizde yeni bir dosya oluşturalım. &lt;code&gt;hugo new hakkimizda.md&lt;/code&gt; komutu vererek sitemize bir hakkımızda dosyası oluşturalım.&lt;/p&gt;

&lt;p&gt;Site ana klasörünüzün &lt;code&gt;(yenisite)&lt;/code&gt; altındaki content klasörünün içine bakarsanız Hugo&amp;rsquo;nun &lt;strong&gt;hakkimizda.md&lt;/strong&gt; adında bir dosya oluşturduğunu görmüş olacaksınız.&lt;/p&gt;

&lt;p&gt;Şimdi &lt;strong&gt;hakkimizda.md&lt;/strong&gt; dosyasını çift tıklayarak açın. (bilgisayarınızda &lt;a href=&#34;http://pythonistan.net/blog/sublime-text-kurulum/&#34;&gt;Sublime Text&lt;/a&gt; programı yüklü, değil mi?) Dosyanın içinde şu satırları görüyor olmalısınız:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;+++
date = &amp;quot;2016-05-25&amp;quot;
draft = true
title = &amp;quot;hakkimizda&amp;quot;

+++

buraya içeriğimizi ekleyelim.  

herhangi bir içerik..... ![herhangi bir resim](/resim_yolu/resim_ismi.jpg)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;front-matter&#34;&gt;Front Matter&lt;/h2&gt;

&lt;p&gt;Yukarıdaki &lt;strong&gt;üç (3)&lt;/strong&gt; adet artı işareti arasında gördüğünüz satırlara Hugo &lt;strong&gt;front matter&lt;/strong&gt; (ön bilgi) adını veriyor.&lt;/p&gt;

&lt;p&gt;Bu bölüm bize dosyanın bir markup (burada toml- ancak yaml yada json da olabilirdi) dilinde yazıldığını söylüyor. &lt;strong&gt;(+++)&lt;/strong&gt; karakterlerinin içinde, kullandığımız temanın ve Hugonun bize sağladığı diğer olanaklar çerçevesinde dosyamızı şekillendirebiliriz.&lt;/p&gt;

&lt;p&gt;İki örnek vereyim. Mesela üzerinde çalıştığımız sayfada sosyal medya ikonlarının çıkmasını istersek front matter&amp;rsquo;a &lt;strong&gt;&amp;ldquo;socialsharing = true&amp;rdquo;&lt;/strong&gt; satırını ekleyerek sayfaya sosyal medya butonlarını ekleyebiliriz.&lt;/p&gt;

&lt;p&gt;Yada diyelim sitemizde yorum seçeneği varsayılan olarak açık. Spesifik bir sayfada yorum özelliğini kapatmak istersem o sayfanın front matter&amp;rsquo;ında &lt;strong&gt;&amp;ldquo;nocomment = true&amp;rdquo;&lt;/strong&gt; şeklinde bir satır eklemem yeterli olacaktır.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;+++
date = &amp;quot;2016-05-25&amp;quot;
draft = true
title = &amp;quot;hakkimizda&amp;quot;
socialsharing = true
nocomment = true
+++
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Burada bilmeniz gereken &lt;strong&gt;önemli bir nokta&lt;/strong&gt;; yukarıda kullandığımız argümanları ve değerlerini, kullandığınız temadan yada Hugonun genel dökümantasyonundan öğrenmeniz gerektiği. Çünkü bu argümanlar temadan temaya değişiklik gösterebilmektedir. En önemli başvuru kaynağımız temanın readme.md (okubeni) dosyası olacaktır.&lt;/p&gt;

&lt;h2 id=&#34;sayfa-içeriği&#34;&gt;Sayfa İçeriği&lt;/h2&gt;

&lt;p&gt;Artı işaretleri bittikden sonra artık dosyamızın tarayıcıda görünecek kısmına geldik. Bu bölümde her türlü yazı ve imajımızı markdown edit kuralları çerçevesinde dökümanımıza ekleyebilir, temamızın bize sağladığı diğer taglerden faydalanabiliriz.&lt;/p&gt;

&lt;p&gt;Örneğin temamız bize üzerine tıklandığında açılan türden bir imaj galerisi imkanı sunuyorsa bunu normal html imaj taginin içine &amp;ldquo;lightbox&amp;rdquo; özelliğini ekleyerek gerçekleştirebilirsiniz. Tabi dediğim gibi bu özellik temada tanımlı olmalı. Aşağıdaki gibi:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/img/blog/ssg/lightbox_html_frontmatter.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Spesifik Bir Özelliği Markdown Front Matter&#39;da Tanımlama&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/ssg/lightbox_html_frontmatter_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;http://pythonistan.net/img/blog/ssg/lightbox_html_markdown.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Tanımladığımız Özelliği Markdown İçeriğinde Kullanma&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/ssg/lightbox_html_markdown_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Markdown dilinin genel komutlarını öğrenmek Hugo yada Jekyll gibi SSG&amp;rsquo;leri kullanmak için bir zorunluluk. Google&amp;rsquo;da bu konuda çok sayıda &lt;a href = &#34;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&#34; target=&#34;_blank&#34;&gt;kaynak&lt;/a&gt; bulabilirsiniz. Basit bir örnek verirsek bir sayfada bir foto göstermek (eklemek) için kullanılan komut: &lt;code&gt;![resmi_tanımlayan_text](/resim_yolu/resim_ismi.jpg)&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;temalar&#34;&gt;Temalar&lt;/h2&gt;

&lt;p&gt;Hugo varsayılan olarak bir tema ile gelmiyor. Temaları yine Hugo Tema sitesinden indirebilir ve ana klasörünüzün altında yer alan themes adlı klasöre ekleyebilirsiniz.&lt;/p&gt;

&lt;p&gt;Temanızı sitede kullanmak için &lt;strong&gt;config.toml&lt;/strong&gt; dosyanızın içine &lt;strong&gt;&amp;ldquo;theme = tema-adiniz&amp;rdquo;&lt;/strong&gt; şeklinde bir satır eklemeniz yeterli.&lt;/p&gt;

&lt;h2 id=&#34;hugo-da-dosya-düzeni&#34;&gt;Hugo&amp;rsquo;da Dosya Düzeni&lt;/h2&gt;

&lt;p&gt;Hugo varsayılan olarak sayfalar ve postlar düzenini kullanıyor. Yani bağımsız sayfalara &lt;strong&gt;page&lt;/strong&gt; (sayfa), bir bölümün(section) altında olacak sayfalara ise &lt;strong&gt;post&lt;/strong&gt; deniyor.&lt;/p&gt;

&lt;p&gt;Mesela yukarıda oluşturduğumuz &lt;strong&gt;hakkimizda.md&lt;/strong&gt; bağımsız bir sayfa (page) olarak değerlendirilip content klasörünün hemen altına yerleştiriliyor. Bu sayfalar şablon biçimlerimizden single.html şablonuna uyduruluyor.&lt;/p&gt;

&lt;p&gt;Bölüm oluşturmak içinse content klasörünüzün içinde yeni klasörler oluşturun. Mesela (blog), (post), (yazilar), (arşiv) v.d. gibi. Bu klasörlerin içinde oluşturacağınız her dosya (mesela dosya1.md, dosya2.md, v.b.) &lt;strong&gt;post&lt;/strong&gt; olarak algılanacaktır.&lt;/p&gt;

&lt;p&gt;Dolayısıyla &lt;strong&gt;page&lt;/strong&gt; (sayfalar) ve her bir bölümün &lt;strong&gt;postları&lt;/strong&gt; için ayrı sayfa ve renk düzenleri oluşturabilirsiniz.&lt;/p&gt;

&lt;h2 id=&#34;sitemizi-oluşturma&#34;&gt;Sitemizi Oluşturma&lt;/h2&gt;

&lt;p&gt;Şimdi sitemizi oluşturalım. Aşağıdaki siteden herhangi bir tema indirdiğinizi varsayıyorum. &lt;a href = &#34;http://themes.gohugo.io/&#34; target=&#34;_blank&#34;&gt; Hugo Themes &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;İndirdiğiniz temayı ana dizinin altında themes klasörünün içine kopyalayın.&lt;/p&gt;

&lt;p&gt;Şimdi ana klasörün içindeyken şu komutu verin. &lt;code&gt;hugo server --theme = tema-ismi --buildDrafts&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Şu anda siteniz oluşturuldu ve lokal sunucunuzda hazır. Test etmek için tarayıcınızı açın ve &lt;strong&gt;&lt;a href=&#34;http://localhost:1313&#34;&gt;http://localhost:1313&lt;/a&gt;&lt;/strong&gt; adresini adres çubuğunda yazarak Enter&amp;rsquo;a basın. Sitenizi görüyor olmalısınız.&lt;/p&gt;

&lt;p&gt;Yukarıda sadece siteyi lokal sunucuda test amaçlı görüntüledik. Sitemiz henüz oluşturulmadı. Oluşturmak için görüntü modundan &lt;code&gt;ctrl+c&lt;/code&gt; yaparak çıkın ve şu komutu verin. &lt;code&gt;hugo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Şimdi ana menünün içinde &lt;strong&gt;&amp;ldquo;public&amp;rdquo;&lt;/strong&gt; adlı bir klasör oluşturulduğunu göreceksiniz. İşte bu klasör bizim sunucumuza yükleyeceğimiz ve içinde web sitemizi barındıran klasördür.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Adımlar karışık geldiyse ve anlamadıysanız &lt;strong&gt;hiç merak etmeyin!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bizim gibi tam amatörler için hazırlamakta olduğum &lt;a href=&#34;http://pythonistan.net/categories/hugo/&#34;&gt;&lt;strong&gt;adım adım Hugo ve Jekyll kullanım klavuzunu&lt;/strong&gt;&lt;/a&gt; çok yakın zamanda bu sitede bulacaksınız inşallah.&lt;/p&gt;

&lt;p&gt;Tek başımıza bir websitesi oluşturup &lt;a href=&#34;http://pythonistan.net/blog/git-ve-github/&#34;&gt;git komutları&lt;/a&gt; vasıtası ile web&amp;rsquo;e yükleyeceğiz.&lt;/p&gt;

&lt;p&gt;Tüm bunlar ve fazlası için lütfen &lt;a href=&#34;http://pythonistan.net/&#34;&gt;blogumu&lt;/a&gt; düzenli olarak takip edin&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python Felsefesi (Zen of Python)</title>
      <link>http://pythonistan.net/blog/python-felsefesi/</link>
      <pubDate>Sat, 13 Aug 2016 00:17:50 -0400</pubDate>
      
      <guid>http://pythonistan.net/blog/python-felsefesi/</guid>
      <description>

&lt;p&gt;Bugün teknik konulara biraz ara verip sizlere Python&amp;rsquo;un kullanımı ve kodlaması ile ilgili genel prensiplerden bahsetmek istiyorum.&lt;/p&gt;

&lt;h2 id=&#34;python-felsefesi-the-zen-of-python&#34;&gt;Python Felsefesi (The Zen of Python)&lt;/h2&gt;

&lt;p&gt;Tercümesini vereceğim aforizmalar &lt;a href=&#34;http://pythonistan.net/blog/python-gelistirici-tarihi-okunuslari/&#34;&gt;BDFL&lt;/a&gt;&amp;lsquo;nin Python&amp;rsquo;u geliştirirken dikkate aldığı ana prensipleri özetlemek adına Python camiasına uzun yıllar emek vermiş bir Pythonista (Paytoncu) olan &lt;a target=&#34;blank&#34; href=&#34;http://stackoverflow.com/users/2705542/tim-peters&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Tim Peters&lt;/em&gt;&lt;/a&gt; tarafından ortaya konmuş.&lt;/p&gt;

&lt;p&gt;Toplam sayısı 20 olan aforizmaların halihazırda &lt;em&gt;19&lt;/em&gt;&amp;lsquo;u bilinmekte.&lt;/p&gt;

&lt;h2 id=&#34;python-geliştirme-prensipleri-yada-aforizmalar&#34;&gt;Python Geliştirme Prensipleri yada Aforizmalar&lt;/h2&gt;

&lt;p&gt;Buradaki prensip yada aforizmalara &lt;strong&gt;&amp;ldquo;Zen of Python&amp;rdquo;&lt;/strong&gt; deniyor. En doğru tercüme &lt;strong&gt;&amp;ldquo;Python Felsefesi&amp;rdquo;&lt;/strong&gt; olsa gerek.&lt;/p&gt;

&lt;p&gt;Daha fazla vakit kaybetmeden bu &lt;strong&gt;19&lt;/strong&gt; maddeyi sıralayalım:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Güzel olan çirkinden evladır. (Beautiful is better than ugly.)&lt;/li&gt;
&lt;li&gt;Aşikar olan üstü kapalıdan evladır. (Explicit is better than implicit.)&lt;/li&gt;
&lt;li&gt;Basit olan karmaşıktan evladır. (Simple is better than complex.)&lt;/li&gt;
&lt;li&gt;Karmaşık olan çapraşıktan evladır. (Complex is better than complicated.)&lt;/li&gt;
&lt;li&gt;Düz olan iç içeden evladır. (Flat is better than nested.)&lt;/li&gt;
&lt;li&gt;Seyrek olan yoğundan evladır. (Sparse is better than dense.)&lt;/li&gt;
&lt;li&gt;Okunabilirlik önemlidir. (Readability counts.)&lt;/li&gt;
&lt;li&gt;Özel durumlar kuralları çiğnemeyi gerektirecek kadar özel olamazlar. (Special cases aren&amp;rsquo;t special enough to break the rules.)&lt;/li&gt;
&lt;li&gt;Pratiklik saflığa galip gelse bile&amp;hellip;(Although practicality beats purity.)&lt;/li&gt;
&lt;li&gt;Hatalar sessizce geçiştirilemezler. (Errors should never pass silently.)&lt;/li&gt;
&lt;li&gt;Açık olarak üstlerinden gelinene kadar&amp;hellip; (Unless explicitly silenced.)&lt;/li&gt;
&lt;li&gt;Muğlaklık karşısında ne olabileceğini kestirmeyi bırakın. (In the face of ambiguity, refuse the temptation to guess.)&lt;/li&gt;
&lt;li&gt;Bir şeyi yapmanın apaçık bir, tercihen sadece tek bir yolu olmalı. (There should be one&amp;ndash; and preferably only one &amp;ndash;obvious way to do it.)&lt;/li&gt;
&lt;li&gt;Tabi Hollandalı değilseniz o yol ilk başta size hemen açılmayabilir. (Although that way may not be obvious at first unless you&amp;rsquo;re Dutch.)&lt;/li&gt;
&lt;li&gt;Şimdi olan hiç olmayacakdan evladır. (Now is better than never.)&lt;/li&gt;
&lt;li&gt;Hiç olmayacak olan hiç gelmeyecek bir &amp;ldquo;doğru zaman&amp;rdquo;dan evladır. (Although never is often better than &amp;ldquo;right&amp;rdquo; now.)&lt;/li&gt;
&lt;li&gt;Uygulamanın açıklaması zorsa, kötü bir fikirdir. (If the implementation is hard to explain, it&amp;rsquo;s a bad idea.)&lt;/li&gt;
&lt;li&gt;Uygulamanın açıklaması kolaysa, iyi bir fikir olabilir. (If the implementation is easy to explain, it may be a good idea.)&lt;/li&gt;
&lt;li&gt;İsim Uzayları müthiş bir fikir, daha fazla kullanalım! (Namespaces are one honking great idea &amp;ndash; let&amp;rsquo;s do more of those!)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;python-felsefesi-açıklamaları&#34;&gt;Python Felsefesi Açıklamaları&lt;/h2&gt;

&lt;p&gt;19 aforizmanın her birini genişçe açıklamak ve örnek vermek mümkün. İleride bunu yapmayı planlıyorum. Şimdilik açıklaması en kolay olan (5.) beşinci ile iktifa edelim:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Okunabilirlik önemlidir. (Readability counts.)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Örnek olarak aşağıda artık klasikleşmiş bir kod öbeği olan &amp;ldquo;Hello World!&amp;rdquo;, &lt;strong&gt;Python&lt;/strong&gt; ve &lt;strong&gt;C&lt;/strong&gt; dilleri ile ayrı ayrı ekrana yazdırılıyor. Farkı sanırım farkettiniz.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;// c ile merhaba dünya kodumuz

#include &amp;lt;stdio.h&amp;gt; 
int main(void) 
{ 
    printf(&amp;quot;Merhaba, Dunya!\n&amp;quot;); 
    return(0); 
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Python ile merhaba dünya kodumuz

print &amp;quot;Merhaba Dunya!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;sürpriz-yumurta&#34;&gt;Sürpriz Yumurta&lt;/h2&gt;

&lt;p&gt;Tercümelerini (yaklaşık anlamları diyelim) verdiğimiz yukarıdaki &lt;em&gt;19&lt;/em&gt; Python prensibine &lt;a href=&#34;http://pythonistan.net/blog/python-kabukta-ilk-program/&#34;&gt;yorumlayıdan (interpreter)&lt;/a&gt;  ulaşmanız mümkün.&lt;/p&gt;

&lt;p&gt;Python &lt;a href=&#34;http://pythonistan.net/blog/python-kabukta-ilk-program/&#34;&gt;Kabukta (Shell)&lt;/a&gt; bu aforizmalara ulaşmak için yapmanız gereken tek şey: &lt;code&gt;import this&lt;/code&gt; komutunu vermek. ve tata&amp;hellip; karşınızda..&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/img/blog/zen-of-python/python_aforizmalar.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Python Aforizmalarını Shell&#39;de Görelim&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/zen-of-python/python_aforizmalar_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Bugünlük bu kadar.&lt;/p&gt;

&lt;p&gt;Blogumda yer almasını en çok istediğiniz konuları lütfen bana yazın. Elimden geldiğince isteklerinize yer vermeye çalışacağım.&lt;/p&gt;

&lt;p&gt;Bu yazımı beğendiyseniz paylaşmayı unutmayın. Sağlıcakla!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bir Kere Daha Karakter Dizileri</title>
      <link>http://pythonistan.net/blog/bir-kere-daha-karakter-dizileri/</link>
      <pubDate>Thu, 11 Aug 2016 00:17:50 -0400</pubDate>
      
      <guid>http://pythonistan.net/blog/bir-kere-daha-karakter-dizileri/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Değişkenler&lt;/em&gt; konusuna çoktan girmemiz gerekirdi lakin &lt;a href=&#34;http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-1&#34;&gt;karakter dizileri&lt;/a&gt; gerçekten önemli bir konu olduğu için son bir kez daha bu konuyu işlemeye karar verdim.&lt;/p&gt;

&lt;p&gt;Ettekraru Ahsen Velev Kane Yüzseksen demişler.&lt;/p&gt;

&lt;h2 id=&#34;karakter-dizileri&#34;&gt;Karakter Dizileri&lt;/h2&gt;

&lt;h3 id=&#34;karakter-dizilerinden-alt-dizi-seçmek&#34;&gt;Karakter Dizilerinden Alt Dizi Seçmek&lt;/h3&gt;

&lt;p&gt;Daha önce &lt;a href=&#34;http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-1/#karakter-dizisi-sras-string-index&#34;&gt;&lt;em&gt;Stringler 1. Bölüm&lt;/em&gt;&lt;/a&gt; yazımda değindiğim karakter dizilerinden alt dizi seçmek (&lt;strong&gt;substring extracting&lt;/strong&gt;) mevzuuna bugün daha yakından bakalım.&lt;/p&gt;

&lt;h3 id=&#34;karakter-dizi-sırası-string-index&#34;&gt;Karakter Dizi Sırası (String Index)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-1/&#34;&gt;&lt;em&gt;Stringler 1. Bölüm&lt;/em&gt;&lt;/a&gt; ve &lt;a href=&#34;http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-2/&#34;&gt;&lt;em&gt;Stringler 2. Bölüm&lt;/em&gt;&lt;/a&gt; yazılarımı okuduysanız karakter dizileri sırası hakkında belli bir fikir elde etmişsinizdir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hatırlayalım&lt;/strong&gt;: &lt;code&gt;kelime&lt;/code&gt; değişkeni ile gösterilen bir karakter dizimiz olsun. &lt;code&gt;kelime[ i : j ]&lt;/code&gt; şeklinde bir ifade, &lt;code&gt;i&lt;/code&gt;&amp;lsquo;nin dahil, &lt;code&gt;j&lt;/code&gt;&amp;lsquo;nin hariç olduğu kelime dizisinden bir parçayı (&lt;a href=&#34;http://pythonistan.net/blog/pythonda-find-metodu/#fn:dib&#34;&gt;d.b.i.&lt;/a&gt; alt diziyi) gösterir.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;i = bis: baş indeks sırasını gösteren sayısal değer&lt;/p&gt;

&lt;p&gt;j = sis: son indeks sırasını gösteren sayısal değer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;cite&gt;bis&lt;/cite&gt; ve/veya &lt;cite&gt;sis&lt;/cite&gt; değerleri verilmezse, varsayılan olarak &lt;em&gt;sonlu değerler (end values)&lt;/em&gt; kabul edilir. Yani &lt;code&gt;kelime[:]&lt;/code&gt; ifadesi &lt;code&gt;kelime&lt;/code&gt;&amp;lsquo;nin kendisine eşittir. Test edelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*- 
kelime = &amp;quot;Panorama&amp;quot;
print kelime[:] == kelime # eşit mi  -&amp;gt; True, yani eşit
print &amp;quot;Panorama&amp;quot;[:] == &amp;quot;Panorama&amp;quot; # değişken kullanmadan yapabilirsiniz.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;karakter-dizi-sırasının-ekstra-argümanı-adım&#34;&gt;Karakter Dizi Sırasının Ekstra Argümanı: Adım&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/blog/pythonda-palindrome-bulan-program/#gelelim-orjinal-kodlara&#34;&gt;Palindrom programımızı yazarken&lt;/a&gt; dizi sırasını gösteren söz diziminin(syntax) üçüncü bir argüman aldığını görmüştük.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;s[::-1] -&amp;gt; -1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;cite&gt;Adım değeri (ad)&lt;/cite&gt;; &lt;cite&gt;bis&lt;/cite&gt; ve &lt;cite&gt;sis&amp;rsquo;e&lt;/cite&gt; ek olarak dizi sırasının adımını ve yönünü interpreter&amp;rsquo;a söyleyebileceğimiz bir argümandır.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;kelime[ i : j : k]&lt;/code&gt; ifadesinde &lt;code&gt;k&lt;/code&gt; adım değerimizi ifade eder. Yani &lt;code&gt;kelime&lt;/code&gt;&amp;lsquo;nin &lt;code&gt;i&lt;/code&gt;&amp;lsquo;den(dahil), &lt;code&gt;j&lt;/code&gt;&amp;lsquo;ye kadar(hariç) olan kısmını &lt;code&gt;k&lt;/code&gt; adımla seçip alarak yeni bir alt karakter dizisi (substring) oluşturabiliriz.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;k = ad: index sırasının yönünü ve adım sayısını gösteren sayısal değer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Başka bir deyişle &lt;code&gt;kelime&lt;/code&gt; dizisi; &lt;code&gt;i&lt;/code&gt; den başlayıp(dahil), &lt;code&gt;i+k&lt;/code&gt;, &lt;code&gt;i+2k&lt;/code&gt;, &lt;code&gt;i+3k&lt;/code&gt; v.s. &lt;code&gt;j&lt;/code&gt;&amp;lsquo;ye kadar (j dahil edilmeyecek) değerler alınarak yeni bir alt dizi oluşturacaktır.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;k&lt;/code&gt; &lt;cite&gt;adım değeri(ad)&lt;/cite&gt; verilmezse varsayılan değer &lt;code&gt;1&lt;/code&gt; olarak kabul edilir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Örnek:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;|P   |  a  |  n  |  o  |  r  |  a  |  m  |  a  |    -&amp;gt; karakter dizimiz
|0   |  1  |  2  |  3  |  4  |  5  |  6  |  7  | 8  |   -&amp;gt; pozitif index değerleri
|-8  | -7  | -6  | -5  | -4  | -3  | -2  | -1  |    |   -&amp;gt; negatif index değerleri
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Şimdi &lt;cite&gt;adım değeri(ad)&lt;/cite&gt; argümanını da kullanarak örnek karakter dizimizden bazı alt diziler(substring) elde edelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*- 
kelime = &amp;quot;Panorama&amp;quot;

print kelime[0:8:1]   # varsayılan değerleri kullan     -&amp;gt; &amp;quot;Panorama&amp;quot; 
print kelime[::]      # üsttekiyle aynı                 -&amp;gt; &amp;quot;Panorama&amp;quot; 
print kelime[::-1]    # varsayılan değer ancak tersten  -&amp;gt; &amp;quot;amaronaP&amp;quot;
print kelime[:-2:-1]  # son karakteri al tersten        -&amp;gt; &amp;quot;a&amp;quot;
print kelime[:-3:-1]  # son iki karakteri al tersten    -&amp;gt; &amp;quot;am&amp;quot;
print kelime[:-4:-1]  # son üç karakteri al tersten     -&amp;gt; &amp;quot;ama&amp;quot;
print kelime[::-2]    # her iki karakteri al tersten    -&amp;gt; &amp;quot;aaoa&amp;quot;
print kelime[5:1:-2]  # 5 ile 1 arasında iki iki al tst -&amp;gt; &amp;quot;ao&amp;quot;
print kelime[5:0:-2]  # 5 ile 0 arasında iki iki al tst -&amp;gt; &amp;quot;aoa&amp;quot;
print kelime[2:38:1]  # 2 ile 38 arasında substring al  -&amp;gt; &amp;quot;norama&amp;quot;
print kelime[7:-1:-2] # 7 ile -1 arasında iki iki al t. -&amp;gt; &amp;quot;&amp;quot; boş karakter
print kelime[2:8:-2]  # 2 ile 8 arasında iki iki al t. -&amp;gt; &amp;quot;&amp;quot; boş karakter
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;cite&gt;bis&lt;/cite&gt; ve/veya &lt;cite&gt;sis&lt;/cite&gt; değerleri verilmemişse varsayılanın &lt;em&gt;sonlu değerler&lt;/em&gt; olduğunu yukarıda belirtmiştik(end values). Örneklerimizde bu durumu tekrar görüyoruz.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&#34;http://pythonistan.net/img/blog/bir-kere-daha-karakter-dizileri/argumanli_alt_dizi_secmek.png&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/bir-kere-daha-karakter-dizileri/argumanli_alt_dizi_secmek.png&#34; alt=&#34;Python&#39;da Karakter Dizilerinin Sırası ve Yönü&#34;&gt;&lt;/a&gt;
    &lt;figcaption&gt;Python&#39;da Karakter Dizilerinin Sırası ve Yönü (String Index and Step Argument) &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;boş-karakter&#34;&gt;Boş Karakter&lt;/h2&gt;

&lt;p&gt;Sondan bir önceki kod satırımıza dikkat edin lütfen. &lt;code&gt;kelime[7:-1:-2]&lt;/code&gt; ifadesinde &lt;code&gt;7.&lt;/code&gt; ve &lt;code&gt;-1.&lt;/code&gt; indexler eşittir ve dolayısıyla alınacak bir karakter yoktur (&lt;a href=&#34;{{ site.baseurl }}/blog/pythonda-find-metodu/#fn:dib&#34;&gt;d.b.i.&lt;/a&gt; &amp;lsquo;0&amp;rsquo; karakter vardır), elde edeceğimiz sadece boş karakterdir. &lt;code&gt;&#39;&#39;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Sonuncu satırdaki &lt;code&gt;kelime[2:8:-2]&lt;/code&gt; ifadesinde ise &lt;code&gt;8.&lt;/code&gt; sıra &lt;code&gt;2.&lt;/code&gt; sıranın sağında bulunduğundan ve sayma adımı &lt;code&gt;-2&lt;/code&gt; değeri ile negatif bir değer olduğundan (sayma yönü yanlış) sonuç yine boş karakterdir. &lt;code&gt;&#39;&#39;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Yine, karakter dizisi sırasını gösterdiğimiz üstteki tablomuzda pozitif index değeri olarak gösterilen &lt;code&gt;8.&lt;/code&gt; karakter indexinin aslında olmayan bir karaktere referans verdiğini görmüş olmalısınız.&lt;/p&gt;

&lt;p&gt;Gerçektende &lt;code&gt;print kelime[8]&lt;/code&gt; gibi bir kod bize hata döndürecektir. İsterseniz deneyin. &lt;em&gt;(string index out of range hatası)&lt;/em&gt; Çünkü kelimenin atıf yaptığı &lt;code&gt;&amp;quot;Panorama&amp;quot;&lt;/code&gt; karakter dizisinin bir 8. karakteri bulunmamaktadır.&lt;/p&gt;

&lt;p&gt;Ancak &lt;code&gt;8.&lt;/code&gt; yada &lt;code&gt;38.&lt;/code&gt; karakter değerini bir &lt;cite&gt;bis&lt;/cite&gt; ve/veya &lt;cite&gt;sis&lt;/cite&gt; değeri ile beraber kullandığımızda Payton&amp;rsquo;un bu kez hata vermediğini ve o noktaya kadar bulabildiği alt diziyi verdiğini görüyoruz. Yukarıda 1. örneğimizdeki &lt;code&gt;kelime[0:8:1]&lt;/code&gt;nin -&amp;gt; &amp;ldquo;Panorama&amp;rdquo; ve 10. örneğimizdeki &lt;code&gt;kelime[2:38:1]&lt;/code&gt; nin -&amp;gt; &amp;ldquo;norama&amp;rdquo; vermesi gibi.&lt;/p&gt;

&lt;p&gt;Boş karakterin değerlendirilmesindeki bu farklılık Payton&amp;rsquo;un orjinal tasarımından kaynaklanmaktadır ve bilinçli bir tercihi yansıtmaktadır.
{:.notice}&lt;/p&gt;

&lt;h2 id=&#34;yaygın-bir-hata-string-index-out-of-range&#34;&gt;Yaygın Bir Hata:  String Index Out Of Range&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-1/&#34;&gt;Karakter dizileri&lt;/a&gt; ile ilgili açıklamalarımı gereksiz bulmuş ve çok detaylı olduğunu düşünmüş olabilirsiniz.&lt;/p&gt;

&lt;p&gt;Özellikle döngüleri kullanırken string uzunluğunun yanlış hesaplanmasından dolayı pek çok &lt;strong&gt;String Index Out of Range&lt;/strong&gt; (Türkçe: &amp;ldquo;aralık dışında dizi endeksi&amp;rdquo;??) hatası ile karşılaşabilmekteyiz.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;http://pythonistan.net/img/blog/bir-kere-daha-karakter-dizileri/string_index_out_of_range.png&#34; alt=&#34;Python&#39;da Sık Rastlanan String Out of Range Hatası&#34;&gt;
    &lt;figcaption&gt;Python&#39;da Sık Rastlanan String Index Out of Range Hatası &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Bu tür hataların önüne geçme adına &lt;em&gt;karakter dizisi sırası&lt;/em&gt; (string indexing) konusunu iyi bellemeli ve Python&amp;rsquo;da bol örnek çözmeliyiz.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Yazımı paylaşırsanız diğerlerinin de yazımdan faydalanmasını sağlamış olur ve beni çok memnun edersiniz, şimdiden çok teşekkürler! Sağlıcakla kalın&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python&#39;da &#39;.find&#39; hazır metodu</title>
      <link>http://pythonistan.net/blog/pythonda-find-metodu/</link>
      <pubDate>Wed, 10 Aug 2016 00:17:50 -0400</pubDate>
      
      <guid>http://pythonistan.net/blog/pythonda-find-metodu/</guid>
      <description>

&lt;p&gt;Blogda en son 9 Ağustos&amp;rsquo;ta &lt;a href=&#34;http://pythonistan.net/blog/pythonda-palindrome-bulan-program&#34;&gt;palindrom yazısı&lt;/a&gt; yayınlamıştım.&lt;/p&gt;

&lt;p&gt;Sonrasında evime geri taşınma işlemleri ve araya giren bayram tatili nedeni ile uzun bir ara verdim. Bu uzuuuuuun ara  nedeniyle hepinizden özür diliyorum.&lt;/p&gt;

&lt;h2 id=&#34;python-da-find-metodu-hazır-fonksiyon&#34;&gt;Python&amp;rsquo;da &lt;code&gt;find&lt;/code&gt; Metodu (Hazır Fonksiyon)&lt;/h2&gt;

&lt;p&gt;Payton&amp;rsquo;un içinde hazır gelen &lt;code&gt;find&lt;/code&gt; fonksiyonu ile aramak istediğimiz bir karakter dizisini başka bir karakter dizisi içinde aratabiliyoruz.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.find&lt;/code&gt; çıktı olarak bize karakterin &lt;strong&gt;ilk&lt;/strong&gt; bulunduğu pozisyonu verir. Herhangi bir karakter dizisi bulunamazsa çıktı bu kez &lt;code&gt;-1&lt;/code&gt; olur.&lt;/p&gt;

&lt;h2 id=&#34;find-metodu-örneğimiz&#34;&gt;&lt;code&gt;find&lt;/code&gt; Metodu Örneğimiz&lt;/h2&gt;

&lt;p&gt;Aşağıdaki ifadeyi inceleyelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*- 
ozluSoz =u&amp;quot;&amp;quot;&amp;quot;Büyük beyinler fikirleri, ortɑ beyinler olɑylɑrı,
küçük beyinler ise kişileri konuşur.&amp;quot;&amp;quot;&amp;quot;
bul = &amp;quot;beyinler&amp;quot;
bulunan_pozisyon = ozluSoz.find(bul)
print bulunan_pozisyon
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;find&lt;/code&gt; hazır fonksiyonunu kullanırken ilk olarak içinde arama yapacağımız karakter dizisini yazıyoruz. &lt;strong&gt;&amp;lsquo;ozluSoz&amp;rsquo;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sonra yanına bir nokta &lt;code&gt;.&lt;/code&gt; koyup &lt;code&gt;find&lt;/code&gt; yazıyoruz. &lt;strong&gt;&amp;lsquo;ozluSoz.find&amp;rsquo;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;find&lt;/code&gt;&amp;lsquo;ın ardına bir parantez &lt;code&gt;()&lt;/code&gt; açıp içine aranacak karakter dizisini yazıyoruz. &lt;strong&gt;&amp;lsquo;ozluSoz.find(bul)&amp;rsquo;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Biz yukarıda kolaylık olsun diye karakter dizilerini temsil eden değişkenleri kullandık.(Değişkenler konusunu detaylı inceleyeceğiz. Şimdilik &lt;a href=&#34;http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-1/#fn:degisken&#34;&gt;bkz&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Yukarıdaki ifadeyi şu şekilde yazabilirdik:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*- 
print u&amp;quot;&amp;quot;&amp;quot;Büyük beyinler fikirleri, ortɑ beyinler olɑylɑrı, 
küçük beyinler ise kişileri konuşur.&amp;quot;&amp;quot;&amp;quot;.find(&amp;quot;beyinler&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu ifade &lt;code&gt;bulunan_pozisyon&lt;/code&gt; değişkenimizin vereceği sonuç olan &amp;ldquo;6&amp;rdquo;. pozisyonu aynen verecektir.&lt;/p&gt;

&lt;p&gt;Yani &lt;code&gt;&amp;quot;beyinler&amp;quot;&lt;/code&gt; karakter dizisi &lt;code&gt;ozluSoz&lt;/code&gt; değişkeninin içerdiği karakter dizisinde &lt;strong&gt;ilk olarak&lt;/strong&gt; 6. pozisyonda bulunur.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Üç tırnak &lt;code&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/code&gt; kullanımına dikkat ettiniz mi? Üç tırnak ile birden fazla satırda devam eden karakter dizileri oluşturabilirsiniz. Karakter dizisi uzunsa birden fazla satıra bölmek kullanışlıdır.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-2/#trke-karakter-azizlii&#34;&gt;NEDEN &amp;lsquo;u&amp;rsquo; KARAKTERİ VAR:&lt;/a&gt;&lt;/strong&gt; Yukarıda u(unicode) şerhini koymazsanız maalesef Sublime Text bulunan pozisyonu Türkçe ü karakterlerinden dolayı 8 olarak veriyor. Ayrıntılı bilgi için linkteki açıklamama bakın lütfen.&lt;/p&gt;

&lt;h2 id=&#34;find-metodunun-tek-argümanı-d-b-i-dib-parametresi&#34;&gt;&lt;code&gt;find&lt;/code&gt; Metodunun Tek Argümanı (d.b.i&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:dib&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:dib&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; Parametresi)&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;find&lt;/code&gt; metodu ile ilgili bilmemiz gereken bir diğer şey aldığı argümandır.(parametre)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.find&lt;/code&gt;&amp;lsquo;dan sonra gelen parantezde aranan ifadeden hemen sonra bir virgül koyup arama yapmaya başlayacağımız pozisyonu &lt;code&gt;.find&lt;/code&gt;&amp;lsquo;a söyleyebiliriz.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.find&lt;/code&gt; böyle bir durumda arama yapmaya verdiğimiz pozisyondan itibaren başlar.&lt;/p&gt;

&lt;p&gt;Örneğin; &lt;code&gt;bulunan_pozisyon = ozluSoz.find(bul, 7)&lt;/code&gt; ifadesinde aramaya &amp;lsquo;7.&amp;rsquo; pozisyondan başlanır ve bu pozisyondan sonraki ilk &lt;code&gt;&amp;quot;beyinler&amp;quot;&lt;/code&gt; ifadesi bulunur. (bu örnekte ikinci bulunma 32. pozisyonda gerçekleşti.)&lt;/p&gt;

&lt;p&gt;Şimdi ikisini bir görelim.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*- 
ozluSoz =&amp;quot;&amp;quot;&amp;quot;Buyuk beyinler fikirleri, ortɑ beyinler olɑylɑri,
kucuk beyinler ise kisileri konusur.&amp;quot;&amp;quot;&amp;quot; #  birden fazla satır kullanacaksanız
bul = &amp;quot;beyinler&amp;quot;                    # üç tırnak kullanabilirsiniz.
bulunan_ilk_pozisyon = ozluSoz.find(bul) # ilk bulunan pozisyon
print bulunan_ilk_pozisyon 
print ozluSoz[7:]      # 7. pozisyondan başlayarak sona kadar yazdır
bulunan_ikinci_pozisyon = ozluSoz.find(bul, 7) # ikinci bulunan pozisyon
print bulunan_ikinci_pozisyon
print ozluSoz[33:]  # 33. pozisyondan başlayarak sona kadar yazdır
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/img/blog/find-metodu/find_metodu_argumansiz_kullanim.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Python&#39;da find Metodunun Argümansız Kullanımı&#34; alt=&#34;&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/find-metodu/find_metodu_argumansiz_kullanim_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;http://pythonistan.net/img/blog/find-metodu/find_metodu_argumanli_kullanim.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Python&#39;da find Metodunun Argümanlı Kullanımı&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/find-metodu/find_metodu_argumanli_kullanim_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aşağıdaki örnekte &lt;code&gt;.find&lt;/code&gt; metodunun parametre ile kullanımının değişik örneklerini göreceksiniz. Ekran görüntüsü için en üstteki ana imaja bakabilirsiniz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*- 
ozluSoz =&amp;quot;&amp;quot;&amp;quot;Buyuk beyinler fikirleri, ortɑ beyinler olɑylɑri,
            kucuk beyinler ise kisileri konusur.&amp;quot;&amp;quot;&amp;quot;

print ozluSoz.find(&amp;quot;beyinler&amp;quot;)     # 6 -&amp;gt; argumansiz kullanim 
print ozluSoz.find(&amp;quot;beyinler&amp;quot;, 0)  # 6 -&amp;gt; en bastan başlar
print ozluSoz.find(&amp;quot;beyinler&amp;quot;, 6)  # 6 -&amp;gt; yine buldu
print ozluSoz.find(&amp;quot;beyinler&amp;quot;, 7)  # 32 -&amp;gt; bir sonrakini buldu
print ozluSoz.find(&amp;quot;beyinler&amp;quot;, 32) # 32 -&amp;gt; bir sonrakini buldu
print ozluSoz.find(&amp;quot;beyinler&amp;quot;, 33) # 62 -&amp;gt; en sonuncusunu buldu
print ozluSoz.find(&amp;quot;beyinler&amp;quot;, 63) # -1 -&amp;gt; hiçbirşey bulamadı
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;find-metodu-ile-palindrom-bulma&#34;&gt;&lt;code&gt;find&lt;/code&gt; Metodu ile Palindrom Bulma&lt;/h2&gt;

&lt;p&gt;Palindrom bulma programımızı tekrar &lt;a href=&#34;http://pythonistan.net/blog/pythonda-palindrome-bulan-program/&#34;&gt;hatırlayalım&lt;/a&gt;. Palindrom bulmada bizden istenen sonuç, kelime yada cümle palindrom ise &lt;code&gt;0&lt;/code&gt; değilse &lt;code&gt;-1&lt;/code&gt; vermesi idi.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;find&lt;/code&gt; metodu ile palindrom bulurken şöyle bir mantık güdeceğiz. Eğer bir kelime(yada cümle) palindromsa kelimeyi kendisinin tersinin hemen ilk (0.) pozisyonunda bulmuş olacağız. Yok değilse zaten kelimenin tamamı tersinde yoktur, o halde sonuç -1 verecek.&lt;/p&gt;

&lt;p&gt;Hadi bunu görelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*- 
kelime = &amp;quot;madam&amp;quot; # test kelimemiz
palindrom_mu = kelime.find(kelime[::-1]) # madam&#39;ın tersinden başla, madam&#39;ı ara
        #eğer varsa find bulacak, sonuç 0. Yoksa bulamayacak, sonuç -1
print palindrom_mu # sonucu ekrana yaz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Burada ne yaptım? &lt;code&gt;kelime&lt;/code&gt; değişkeninde verilen karakter dizisinin içinde kendisini aradım.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/img/blog/find-metodu/find_metodu_ornek_kullanimlar.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Python&#39;da find Metodu Örnek Kullanımlar&#34; alt=&#34;&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/find-metodu/find_metodu_ornek_kullanimlar_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;http://pythonistan.net/img/blog/find-metodu/find_metodu_ile_palindrom_bulma.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;.find Metodu ile Kelimenin Palindrom Olup Olmadığını Anlama&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/find-metodu/find_metodu_ile_palindrom_bulma_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Arama işlemini tersinden(&lt;strong&gt;&amp;lsquo;kelime[::-1] ile&amp;rsquo;&lt;/strong&gt;) yaptım, daha önceki yazımda bu ifadenin tersten karakter dizisi okuma anlamına geldiğini öğrenmiştik.(Geniş bilgi için bkz. &lt;a href=&#34;http://pythonistan.net/blog/bir-kere-daha-karakter-dizileri/&#34;&gt;Bir Kere Daha Karakter Dizileri ve Indexing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Python aranan ifadeyi bulursa &lt;code&gt;.find&lt;/code&gt; metodunun bulunan ilk pozisyonu getireceğini biliyoruz, ki o pozisyon palindrom için &lt;code&gt;0&lt;/code&gt;&amp;lsquo;dır. Bulunamazsa &lt;code&gt;.find&lt;/code&gt; metodu sonuç olarak &lt;code&gt;-1&lt;/code&gt; verir.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Evet dostlar, &lt;code&gt;find&lt;/code&gt; metodu ile işimiz bitti. Esasında bir sonraki yazımda Değişkenler konusuna geçiş yapmayı düşünüyordum. Ancak karakter dizilerinin önemine binaen son bir defa daha bu konuyu işleyeceğim. Zira bu konu çok kritik.&lt;/p&gt;

&lt;p&gt;Bu yazımda iyi anlaşılmayan bir taraf varsa lütfen bana &lt;a href=&#34;mailto:pythonistan@gmail.com&#34;&gt;bildirin&lt;/a&gt;. Yazımı paylaşmak için sol üstte linkler var. Çekinmeden kullanabilirsiniz :)&lt;/p&gt;

&lt;h2 id=&#34;dipnotlar&#34;&gt;DipNotlar&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:dib&#34;&gt;&amp;ldquo;diğer bir ifadeyle&amp;rdquo;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:dib&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Palindrome Programımız</title>
      <link>http://pythonistan.net/blog/pythonda-palindrome-bulan-program/</link>
      <pubDate>Tue, 09 Aug 2016 00:17:50 -0400</pubDate>
      
      <guid>http://pythonistan.net/blog/pythonda-palindrome-bulan-program/</guid>
      <description>

&lt;p&gt;Nihayet bir kaç gün önceki &lt;a href=&#34;http://pythonistan.net/blog/sublime-text-kurulum/#kodumuzun-programda-grnts&#34;&gt;yazımda&lt;/a&gt; geçen Palindrome programımızı bugün ele alma şansımız olacak.&lt;/p&gt;

&lt;h2 id=&#34;tersten-okunduğunda-aynı-olan-metin-palindrom&#34;&gt;Tersten Okunduğunda Aynı Olan Metin Palindrom&lt;/h2&gt;

&lt;p&gt;Orjinal kodumuzu ve programımızın özetini tekrar hatırlayalım:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*- 
def palindrome(s):
    return 0 if s == s[::-1] else -1

text = &#39;ey edip adanada pide ye&#39;

print palindrome(text)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıda gördüğünüz program bir metnin palindrom olup olmadığını kontrol ediyor, eğer metin palindrome ise ekrana &lt;code&gt;0&lt;/code&gt;(pozitif), değilse &lt;code&gt;-1&lt;/code&gt;(negatif) yazdırıyor.&lt;/p&gt;

&lt;h2 id=&#34;masaüstüne-kayıt&#34;&gt;Masaüstüne Kayıt&lt;/h2&gt;

&lt;p&gt;Bu programı &lt;a href=&#34;http://pythonistan.net/blog/sublime-text-kurulum/&#34;&gt;Sublime kurulum makalemi&lt;/a&gt; okurken satır satır yazmıştınız, değil mi? :)) Sitemizi yeni takip etmeye başlayanlar buradaki kodları &lt;em&gt;satır satır&lt;/em&gt; yazmayı unutmasınlar.&lt;/p&gt;

&lt;p&gt;Arkadaşlar, kod ancak böyle öğreniliyor. O yüzden lütfen es geçmeyin.&lt;/p&gt;

&lt;p&gt;Kodları yazdıktan sonra Masaüstüne yada kolay ulaşabildiğiniz bir konuma &lt;code&gt;palindrom.py&lt;/code&gt; olarak kaydedin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hatırlatma:&lt;/strong&gt; &lt;em&gt;.py&lt;/em&gt; uzantısı Python program(kod) dosyası uzantısıdır.
{:.notice}&lt;/p&gt;

&lt;h2 id=&#34;prosedürler&#34;&gt;Prosedürler&lt;/h2&gt;

&lt;p&gt;Prosedürler konusuna Notepad ile ilk programımızı yazarken biraz &lt;a href=&#34;http://pythonistan.net/blog/python-notepad-ile-program-yazma/#programmzn-levi&#34;&gt;değinmiştim&lt;/a&gt;. Prosedürler bir programı genel bir çerçeve haline getirmek için en elverişli araç.&lt;/p&gt;

&lt;p&gt;Programımın sadece belli bir karakter dizisi için değil bütün karakter dizileri için geçerli olmasını istediğim için bir prosedür oluşturdum. Burada prosedürün parametresi olan &lt;code&gt;(s)&lt;/code&gt; herhangi bir stringi ifade ediyor.&lt;/p&gt;

&lt;p&gt;Test etmek istediğimiz herhangi bir karakter dizisini prosedürümüzle birlikte şu şekilde kullanabiliyoruz. &lt;code&gt;print palindrome(&amp;quot;karakter dizisi&amp;quot;)&lt;/code&gt; yada &lt;code&gt;print palindrome(metin)&lt;/code&gt; Burada &lt;code&gt;metin&lt;/code&gt; karakter dizimizi tutan(içeren) bir değişkendir.&lt;/p&gt;

&lt;p&gt;Tersi olsaydı yani sadece belli bir karakter dizisinin palindrome olup olmadığını anlamak için aşağıdaki gibi prosedür içermeyen bir program yazabilirdim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*- 
s = &#39;ey edip adanada pide ye&#39;
print 0 if s == s[::-1] else -1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Aralarınızdan bazılarının &amp;ldquo;yahu bu daha kolay ve kısaymış&amp;rdquo; dediğinizi duyuyor gibiyim.&lt;/p&gt;

&lt;p&gt;Arkadaşlar, bizim amacımız istediğimiz iş için genel bir çerçeve oluşturmak. Bu örnek kolay olduğu için prosedür kullanma yada kullanmama pek fark etmemiş olabilir. Ancak ileride çok daha karmaşık problemleri çözen kodlarda prosedür kullanmaktan başka çare kalmayacak.&lt;/p&gt;

&lt;p&gt;Ayrıca yukarıdaki kodları birden fazla karakter dizisi için denemeye çalışın. Prosedür kullandığımızda metin1, metin2, metin3 gibi bir çok karakter dizisi oluşturup hepsini basitçe &lt;code&gt;print palindrome(metin1)&lt;/code&gt; v.s. şeklinde test edip kullanabilirim. (Bkz. Aşağıda Test Örnekleri Ekran Görüntüleri)&lt;/p&gt;

&lt;p&gt;Diğer seçenekte ise her seferinde &lt;code&gt;s&lt;/code&gt; değerini silmek ve yeni değeri girmek zorunda kalacağım.&lt;/p&gt;

&lt;h2 id=&#34;gelelim-orjinal-kodlara&#34;&gt;Gelelim Orjinal Kodlara&lt;/h2&gt;

&lt;p&gt;Prosedürümüzdeki kodlara yakından bakalım.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;İlk satırda prosedürümüzün ismini belirliyor ve prosedürü tanımlıyoruz.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;def&lt;/code&gt; kelimesi ingilizce define kelimesinin kısaltılmışıdır ve define tanımla demektir. Prosedür tanımlarken her zaman ilk olarak &lt;code&gt;def&lt;/code&gt; kelimesi, sonra prosedürümüzün ismi ve daha sonra parantez, varsa içinde parametre(ler) ve en son iki nokta üst üstüste &amp;ldquo;:&amp;rdquo; gelir. Örnek: &lt;code&gt;def prosedur_ismi(_parametreler_):&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Parantez içine prosedürümüzün parametre(ler)si gelecek. Tüm prosedürler parametre almak zorunda mıdır? Hayır almak zorunda değil, ancak almasa bile prosedürün isminden sonra gelen parantezleri koymak zorundasınız. Aksi halde Python hata verir.&lt;/li&gt;
&lt;li&gt;İkinci satırımızda hemen &lt;code&gt;return&lt;/code&gt; ile prosedürümüze &lt;code&gt;return&lt;/code&gt;&amp;lsquo;den sonraki bölümü yürüt ve bunu &lt;code&gt;return&lt;/code&gt; ile döndür diyoruz.&lt;/li&gt;
&lt;li&gt;Prosedürler genelde hep bir şeyler döndürürler (return) ve biz döndürülen değeri görmek istiyorsak &lt;code&gt;print&lt;/code&gt; ile ekrana yazdırma gerçekleştiririz.&lt;/li&gt;
&lt;li&gt;Döndürülen değer ekrana yazdırılmayacak başka bir prosedürde/programda kullanılacaksa o halde diğer prosedürün parametresi olarak kullanılır.&lt;/li&gt;
&lt;li&gt;Sıra geldi &lt;code&gt;return&lt;/code&gt;&amp;lsquo;den sonraki kısma. Burada artık programımızın işlevi açığa çıkıyor. Program karakter dizisini temsil eden değişkeni &lt;code&gt;(s)&lt;/code&gt; kendisinin tersi ile &lt;code&gt;(s[::-1])&lt;/code&gt; karşılaştırıyor. Buradaki &lt;code&gt;==&lt;/code&gt; operatörü &amp;ldquo;eşitlik&amp;rdquo; anlamındadır.&lt;/li&gt;
&lt;li&gt;Herhangi bir karakter dizisini &lt;code&gt;[::-1]&lt;/code&gt; ile kullanarak tersten okutabilirsiniz. Burada &amp;ldquo;-1&amp;rdquo; bir adım geri git anlamına gelmektedir.&lt;/li&gt;
&lt;li&gt;Bu karşılaştırmanın kendisi bir boolean (True/False) değer ürettiği için karşılaştırmanın sonucunu hemen return fonksiyonuna döndürdük. Gelen değer eğer &lt;code&gt;True (Doğru)&lt;/code&gt; ise ekrana &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;Yanlış (False)&lt;/code&gt; ise ekrana &lt;code&gt;-1&lt;/code&gt; yazdırılacak. &lt;code&gt;If&lt;/code&gt; kelimesi &amp;ldquo;eğer &amp;hellip; ise&amp;rdquo;, &lt;code&gt;else&lt;/code&gt; &amp;ldquo;değil ise&amp;rdquo; anlamındadır. (Bkz. Aşağıdaki Test Örnekleri - Rakamlı Örnek)&lt;/li&gt;
&lt;li&gt;Karşılaştırmanın sonucunda ekrana &lt;code&gt;0&lt;/code&gt; ve &lt;code&gt;1&lt;/code&gt; değerleri yazdırma yerine daha detaylı bir şey yazdırabiliriz. Kodumuzu şu hale çevirmemiz mümkün: &lt;code&gt;return &amp;quot;Evet, bu bir palindrom.&amp;quot; if s == s[::-1] else &amp;quot;Hayır, bu bir palindrom değil.&amp;quot;&lt;/code&gt;  (Bkz. Aşağıdaki Test Örnekleri - Yazılı Örnek)&lt;/li&gt;
&lt;li&gt;Normalde eşitlik ifadesi &lt;code&gt;if else&lt;/code&gt; bloğunu hiç kullanmadan karşılaştırma yapmaya olanak sağlıyor. Böyle bir kullanımı 3. varyasyonda göstereceğim.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/img/blog/palindrom-programi/palindrome_test_ornekleri_rakamli.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Ekrana Rakam Sonucu Veren Palindrome Programı&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/palindrom-programi/palindrome_test_ornekleri_rakamli_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;http://pythonistan.net/img/blog/palindrom-programi/palindrome_test_ornekleri_yazi_aciklamali.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Python&#39;da Karakter Dizisi İndeksi ile Hiper Link Ayıklıyoruz&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/palindrom-programi/palindrome_test_ornekleri_yazi_aciklamali_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;daha-anlaşılır-ve-uzun-if-else-bloklu-2-varyasyonumuz&#34;&gt;Daha Anlaşılır ve Uzun If Else Bloklu 2. Varyasyonumuz&lt;/h2&gt;

&lt;p&gt;Şimdi aşağıda &lt;code&gt;if else&lt;/code&gt; bloğunun daha açık yazıldığı bir varyasyon yazalım.&lt;/p&gt;

&lt;p&gt;Bu kez kodumuz biraz uzayacak, ancak ziyan  yok, bazen kodda açıklık kısalıktan evladır.&lt;/p&gt;

&lt;p&gt;Yazacağımız kod bir prosedür içermesin. &lt;code&gt;If else&lt;/code&gt; bloklarından hangisinin daha iyi olduğunun kararını size bırakıyorum. (Bkz. Aşağıda Solda Test Örnekleri - If Else Örneği)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cumle = &#39;ey edip adanada pide ye&#39; # test cumlesi

palindrom_mu = 2  # gecici degisken ve başlangıç değeri
if cumle[0:] == cumle[::-1]:        # karşılaştırma yap
    palindrom_mu = 0                # aynıysa değ. değerini 0 yap
    print palindrom_mu              # değeri ekrana yaz
else:                           # karşılaştırma aynı değilse
    palindrom_mu = -1               # değişken değerini -1 yap
    print palindrom_mu              # değeri ekrana yaz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Burada ne mi yaptık? &lt;code&gt;palindrom_mu&lt;/code&gt; adlı geçici bir değişken oluşturup ona bir ilk değer atadık. Bu ilk değer &lt;code&gt;(2)&lt;/code&gt; önemli değil. Siz kendinize göre başka bir değer verebilirsiniz.&lt;/p&gt;

&lt;p&gt;Daha sonra &lt;code&gt;if&lt;/code&gt; karşılaştırma operatörü ile &lt;code&gt;cumle&lt;/code&gt; değişkenine atanan karakter dizisi ile bu karakter dizisinin sondan okunuşunu karşılaştırdık.&lt;/p&gt;

&lt;p&gt;Eğer bu karşılaştırmanın sonucu evet ise (yani True) o halde &lt;code&gt;if&lt;/code&gt;&amp;lsquo;den hemen sonra gelen blok yürütülecek. &lt;code&gt;palindrom_mu&lt;/code&gt; değişkeninin değeri &lt;code&gt;0&lt;/code&gt; olacak ve ekrana yazdırılacak.&lt;/p&gt;

&lt;p&gt;Yok eğer yukarıda &lt;code&gt;if&lt;/code&gt; bloğundaki karşılaştırma sonucu hayır ise (yani False) o halde else den sonra gelen blok yürütülecek. &lt;code&gt;palindrom_mu&lt;/code&gt; değişkeninin değeri &lt;code&gt;-1&lt;/code&gt;&amp;lsquo;e eşitlenecek ve bu değer ekrana yazdırılacak.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;palindrom_mu&lt;/code&gt; değişkenine başlangıçta (initial) atanan &lt;code&gt;2&lt;/code&gt; değerinin programın hiç bir aşamasında çalışma fırsatı bul(a)madığına dikkat edin lütfen. O yüzden yukarıda önemli değil dedim.&lt;/p&gt;

&lt;p&gt;Son olarak &lt;code&gt;if&lt;/code&gt; ve &lt;code&gt;else&lt;/code&gt; satırlarından sonra gelen satırlardaki tablara (indentation) dikkat edin lütfen! Tablama yapmazsanız hata alırsınız.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/palindrom-programi/palindrome_test_ornekleri_if_else_uzun.png&#34; alt=&#34;If_else&#34; title=&#34;Palindrom Test Örneklerimiz&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;if-else-bloku-içermeyen-3-varyasyonumuz&#34;&gt;If Else Bloku İçermeyen 3. Varyasyonumuz&lt;/h2&gt;

&lt;p&gt;Yukarıdaki kodlarda gördüğünüz &lt;code&gt;(==)&lt;/code&gt; operatör &amp;ldquo;eşit mi?&amp;rdquo; anlamını doğal olarak içinde taşır ve bu yüzden aslında &lt;code&gt;if else&lt;/code&gt; bloğunu hiç kullanmadan karşılaştırma yapmaya imkan tanır.&lt;/p&gt;

&lt;p&gt;Lütfen aşağıdaki kodlara bir göz atın ve yine lütfen &lt;strong&gt;kendiniz yazarak&lt;/strong&gt; kodları deneyin.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: cp1254 -*-
def palindrom_mu(s):
    sonuc = (s==s[::-1]) - 1 # Boolean ifadeyi sayısal bir
    return sonuc             # değişken değere atama

metin1 = &#39;ey edip adanada pide ye&#39;
metin2 = &amp;quot;mazdam&amp;quot;
metin3 = &amp;quot;madam&amp;quot;

print palindrom_mu(metin1)
print palindrom_mu(metin2)
print palindrom_mu(metin3)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki çözüm oldukça önemli bir konsepti ifade ediyor. (Altta Sağda Boolean&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:bool&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:bool&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; Değeri Sayısal Değere Dönüştürme Örneği Ekran Görüntüsü)&lt;/p&gt;

&lt;p&gt;Normalde &lt;code&gt;(s==s[::-1])&lt;/code&gt; ifadesinin bir karşılaştırma olduğunu ve &lt;code&gt;True(1)&lt;/code&gt; yada &lt;code&gt;False(0)&lt;/code&gt; döndürdüğünü biliyoruz. Bu ifadeyi sayısal bir operatör ile beraber kullandığımızda (burada &amp;ldquo;- 1&amp;rdquo;) &lt;code&gt;True&lt;/code&gt;  değeri &lt;code&gt;1&lt;/code&gt; ifadesi, &lt;code&gt;False&lt;/code&gt; değeri &lt;code&gt;0&lt;/code&gt; ifadesini alır.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/img/blog/palindrom-programi/boolean_operator_normal_kullanim.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Boolean Değerlerin Normal Metin Kullanımı&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/palindrom-programi/boolean_operator_normal_kullanim_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;http://pythonistan.net/img/blog/palindrom-programi/boolean_sayisal_degere_atama_ornegi.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Boolean[^bool] Değerleri Sayısal Değere Dönüştürme&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/palindrom-programi/boolean_sayisal_degere_atama_ornegi_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;İsterseniz yukarıdaki işlemde en sonraki &amp;ldquo;-1&amp;rdquo; ifadesini silip sonucu deneyin. &lt;code&gt;(sonuc = (s==s[::-1])&lt;/code&gt; olarak) Python interpreter size herhangi bir sayısal değer vermeden direkt &lt;code&gt;True&lt;/code&gt; yada &lt;code&gt;False&lt;/code&gt; çıktısını döndürecektir. (Üstte Solda Boolean Değeri Normal Kullanma Örneği Ekran Görüntüsü)&lt;/p&gt;

&lt;p&gt;Dolayısıyla yapılan işlem şu: &lt;code&gt;sonuc&lt;/code&gt; adlı değişkene atanacak değer karşılaştırma doğruysa 1 - 1 = &lt;code&gt;0&lt;/code&gt;, yanlışsa 0 - 1 = &lt;code&gt;-1&lt;/code&gt; olacak. Zaten bu da bizim almayı istediğiz sonuçtu. Yapmayı istediğimiz şeyi başardık.&lt;/p&gt;

&lt;h2 id=&#34;find-fonksiyonu-kullanarak-4-varyasyon&#34;&gt;.find Fonksiyonu Kullanarak 4. Varyasyon&lt;/h2&gt;

&lt;p&gt;Normalde 4. ve sonuncu çözüm olarak &lt;code&gt;.find&lt;/code&gt; hazır (built-in) fonksiyonunu (d.b.i. metodunu)&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:dib&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:dib&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; kullanarak palindrom programını yazacaktım. Ancak bu yazı çok uzadığı için onu bir sonraki yazı konusu olarak kullanmaya karar verdim.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-2/#ev-deviniz&#34;&gt;BİR ÖNCEKİ YAZIMDAKİ EV ÖDEVİ CEVAP:&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;Sorumuzun cevabı &amp;ldquo;boşluk karakteri&amp;rdquo; olacaktı. Sorunun cevabına &amp;ldquo;Boş karakter&amp;rdquo; dediyseniz maalesef yanıldınız. Neden mi? &lt;a href=&#34;http://pythonistan.net/blog/bir-kere-daha-karakter-dizileri/#bo-karakter&#34;&gt;İki sonraki yazımı&lt;/a&gt; bu konuya ayırdım. Orada görüşmek üzere!&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Siz şimdilik buradaki örnekleri detaylı inceleyin, yazın ve Payton&amp;rsquo;da çalıştırın. Bir sonraki yazıda &lt;code&gt;.find&lt;/code&gt; fonksiyonunun tüm özelliklerini incelerken bu soruyu beraberinde çözeceğim.&lt;/p&gt;

&lt;p&gt;Yazımı beğenmeyi unutmayın lütfen!&lt;/p&gt;

&lt;h2 id=&#34;dipnotlar&#34;&gt;DipNotlar&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:bool&#34;&gt;Programlama dillerinde Boolean veri tipi True (Doğru) ve False (Yanlış) olmak üzere sadece iki değer o/a/labilen bir değer tipidir. Boolean kelimesi matematikçi &lt;a href=&#34;https://en.wikipedia.org/wiki/George_Boole&#34;&gt;George Boole&lt;/a&gt;&amp;lsquo;un adına izafe edildiğinden bu ismi almıştır.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:bool&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:dib&#34;&gt;İng. a.k.a. (also known as= başka bir deyişle) ifadesinden mülhem d.b.i. &amp;ldquo;Diğer Bir İfadeyle&amp;rdquo; şeklinde düşündüm.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:dib&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Sublime Text Kuruyoruz</title>
      <link>http://pythonistan.net/blog/sublime-text-kurulum/</link>
      <pubDate>Mon, 08 Aug 2016 00:17:50 -0400</pubDate>
      
      <guid>http://pythonistan.net/blog/sublime-text-kurulum/</guid>
      <description>

&lt;h2 id=&#34;okunuşuna-değer&#34;&gt;Okunuşuna Değer&lt;/h2&gt;

&lt;p&gt;Nihayet Sublime Text&amp;rsquo;i kurmaya geldi sıra. Şu programın okunuşuna bakın hele: (Sablaym). Bu okunuş için bile kurulabilecek bir program. :)&lt;/p&gt;

&lt;h2 id=&#34;becerikli-editör-sublime-text&#34;&gt;Becerikli Editör Sublime Text&lt;/h2&gt;

&lt;p&gt;Şakası bir yana Sublime oldukça becerikli bir editör. Kendisinden ilk defa bir kaç gün önceki &lt;a href=&#34;http://pythonistan.net/blog/python-kabukta-ilk-program/&#34;&gt;blog yazımda&lt;/a&gt; bahsetmiştim. Nasip bugüneymiş. Şimdi ilk önce programımızı kuralım. Hemen &lt;a target=&#34;blank&#34; href=&#34;https://www.sublimetext.com/&#34; class=&#34;btn&#34;&gt;Sublime Text Sitesi&lt;/a&gt;&amp;lsquo;ne gidin. Üstteki Download kısmına girin ve sisteminize uygun olan versiyonu bilgisayarınıza indirin.(Windows için 32 ve 64 bit versiyonları var.) Daha sonra indirdiğiniz yerden çift tıklayarak kurulumu başlatın ve onay kutularına onay vererek kurulumu tamamlayın.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Önemli:&lt;/strong&gt; Programımızın Başlat Menüsü ve Masaüstü kısayollarını oluşturmasına izin verin! Bu programa devamlı ihtiyaç duyacağız.
{:.notice}&lt;/p&gt;

&lt;h2 id=&#34;metin-editörleri&#34;&gt;Metin Editörleri&lt;/h2&gt;

&lt;p&gt;Adından anlaşılacağı gibi metin editörleri metin yazma ve işleme için kullanılıyor. Metin editörleri deyince aklımıza tabi hemen Ms Word gelir. Bu alanın en bilinenidir. Word son kullanıcı dostu ve çok gelişmiş bir editör olsa da kod yazma için geliştirilmemiştir. Kod dünyasında editör olarak kullanılan oldukça fazla sayıda program var. Başlıcaları ise bugün kurduğumuz Sublime, Notepad++, TextMate, Emacs, Atom ve Vim (bu sonuncusu üst düzey coderlar tarafından tercih edilir) gibi programlardır. Tabi bu araçların hiçbirini kullanmadan kod yazabileceğinizi siz &lt;a href=&#34;http://pythonistan.net/blog/python-notepad-ile-program-yazma/&#34;&gt;bir önceki yazımdan&lt;/a&gt; biliyorsunuz.&lt;/p&gt;

&lt;h2 id=&#34;sublime-ile-program-yazmaya-hazırlık&#34;&gt;Sublime İle Program Yazmaya Hazırlık&lt;/h2&gt;

&lt;p&gt;Daha fazla vakit kaybetmeden Sublime ile bir program yazalım.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Sublime Text programını açın.&lt;/li&gt;
&lt;li&gt;Üstteki tabların yanına tıklayıp yeni bir boş dosya oluşturun.&lt;/li&gt;
&lt;li&gt;Boş dosya bizim hangi dilde yazdığımızı bilemeyeceği için gerekli ayarları otomatikman sağlamaz.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:default&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:default&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; Sablaym&amp;rsquo;a hangi dille yazacağımızı belirtelim. Üstteki menüden View &amp;gt; Syntax &amp;gt; Python &amp;gt; Python seçerek programa seçimimizi belirtelim. (&lt;strong&gt;Altta Soldaki Foto&lt;/strong&gt;) Şimdi artık Python&amp;rsquo;a özel syntax highlighting (kod renklendirme) ve Indentation (koda otomatik tab eklenmesi) özellikleri aktif olacaktır.&lt;/li&gt;
&lt;li&gt;Aşağıdaki kodu programa &lt;u&gt;yazın&lt;/u&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*- 
# üstteki satırın neden devamlı orada olduğunu merak ediyor olabilirsiniz
# maalesef Python2&#39;de &amp;quot;yorum satırlarında bile&amp;quot; Türkçe karakter kullanmak
# için utf-8 desteği ibaresinin konulması şart, aksi halde hata veriyor.

def palindrome(s):
    return 0 if s == s[::-1] else -1

text = &#39;ey edip adanada pide ye&#39;

print palindrome(text)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Önemli:&lt;/strong&gt; Kodları &lt;strong&gt;yazın&lt;/strong&gt; demiş miydim?&lt;/p&gt;

&lt;h2 id=&#34;kodumuzun-programda-görüntüsü&#34;&gt;Kodumuzun Programda Görüntüsü&lt;/h2&gt;

&lt;p&gt;Yukarıda gördüğünüz program bir metnin palindrom (yani tersten okunduğunda da aynı olan metin parçası) olup olmadığını kontrol ediyor, eğer metin palindrome ise &lt;code&gt;0&lt;/code&gt;, değilse &lt;code&gt;-1&lt;/code&gt; döndürüyor. Makalemin uzamaması için programımızın değerlendirmesini bir sonraki blog yazımda yapacağım. Biz şimdi bu kodun Sablaym&amp;rsquo;da nasıl göründüğüne bakalım.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:buyutme&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:buyutme&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/sublime-install/program_goruntusu.png&#34; alt=&#34;Programımızın Sublime Görüntüsü&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;sublime-text-sablaym-tekst-özellikleri&#34;&gt;Sublime Text (Sablaym Tekst) Özellikleri&lt;/h2&gt;

&lt;p&gt;Eğer bu kodu Sublime&amp;rsquo;da satır satır yazdıysanız (ki &lt;em&gt;yazmalısınız&lt;/em&gt;, bkz. bir önceki &lt;a href=&#34;http://pythonistan.net/blog/python-notepad-ile-program-yazma/&#34;&gt;blog yazımdaki&lt;/a&gt; uyarım) birinci satırın sonuna geldiğinizde (:) işaretini yazdıktan sonra &lt;code&gt;Enter&lt;/code&gt;&amp;lsquo;a bastığınızda programın alt satıra geçip otomatik olarak bir içeri satıra gittiğini (yani tab oluşturduğunu) görmüş olmalısınız. İşte bu özellik kod yazarken sık karşılaşılan hatalardan olan &lt;em&gt;indentation&lt;/em&gt; (tab oluşturma) türü hataları azaltmaktadır.&lt;/p&gt;

&lt;p&gt;Sublime gördüğünüz üzere Python&amp;rsquo;a has &lt;code&gt;def&lt;/code&gt;, &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt; gibi kelimeleri özel olarak renklendirdi ve bu durum kodu okumayı kolaylaştırdı. Takdir ettiğinizi sanıyorum. Bendeki renklerden hoşlanmadıysanız değişik renk kombinasyon seçeneklerini Preferences &amp;gt; Color Scheme kısmında bulup size uygun olanını seçin.&lt;/p&gt;

&lt;p&gt;Ancak en önemli ve en güzel özelliği sona sakladım: Artık Python programımızı çalıştırmak için Payton kabuğa (Shell) yada komut satırına gidip komut yazarak programımızı çalıştırmamız &lt;strong&gt;gerekmiyor&lt;/strong&gt;. Sublime otomatik olarak Python&amp;rsquo;u kendi içerisinden çalıştırma fırsatı sunuyor.&lt;strong&gt;(Tabi, Python&amp;rsquo;u bilgisayarınıza çoktan &lt;a href=&#34;http://pythonistan.net/blog/python-kurulum/&#34;&gt;kurdunuz&lt;/a&gt;, öyle değil mi???)&lt;/strong&gt; Kodunuzu yazdıktan sonra çalıştırmak için tek yapmanız gereken &lt;code&gt;Ctrl + B&lt;/code&gt; tuşlarına basmak. (yada Tools &amp;gt; Build &amp;lsquo;e tıklamak ) Python Interpreter açılıyor ve aşağıdaki bölmede bize programın çıktısı(output) veriliyor. (&lt;strong&gt;Hemen Altta Sağdaki Fotoya bakın&lt;/strong&gt;) &lt;cite&gt;Mükemmel!&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/img/blog/sublime-install/sublime_python_ayar.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Sublime&#39;da Python ayarlarını Yapma&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/sublime-install/sublime_python_ayar_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;http://pythonistan.net/img/blog/sublime-install/sublime_run_screen.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Python Interpreter&#39;i Sublime&#39;da Çalıştırma&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/sublime-install/sublime_run_screen_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;diğer-özellikler&#34;&gt;Diğer Özellikler&lt;/h2&gt;

&lt;p&gt;Sublime, Python dışında onlarca programlama dilinin söz dizimi(syntax-sinteks) için destek sunan ve kendine has komutları olan bir program. Preferences (Tercihler) dosyasını ihtiyaçlarınıza göre düzenleyip zevkinize uygun özelleştirilmiş bir kodlama deneyimi oluşturabilirsiniz. Bu konuda detaylı bilgiye aşağıda verdiğim kaynaklardan ulaşabilirsiniz.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:kaynak&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:kaynak&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Sublime&amp;rsquo;da &lt;strong&gt;Html&lt;/strong&gt;, &lt;strong&gt;JavaScript&lt;/strong&gt;, ve diğer scripting dillerindeki dosyalarınızı açabilir, statik web sitelerinde kullanılan ve son dönemde bir hayli popülerleşen &lt;strong&gt;markdown&lt;/strong&gt;(.md) dosyaları oluşturup düzenleme yapabilirsiniz. Kısacası karakterlerden oluşan her türlü dosyayı marifetle işleyebilen bir programdan bahsediyoruz. Gerçekten &amp;ldquo;karakterli&amp;rdquo; bir program Sublime!&lt;/p&gt;

&lt;h2 id=&#34;programın-maliyeti&#34;&gt;Programın Maliyeti&lt;/h2&gt;

&lt;p&gt;Sublime ücretli bir program.(Bugün itibarı ile 70 usd) Gerçi kullanımını kısıtlayan herhangi bir durum yok. Kayıt olmadan (Unregistered) kullanabilirsiniz. Yaklaşık 40-50 editte bir (kaydetme / &lt;code&gt;Ctrl + S&lt;/code&gt; yapma) ekrana Register(kayıt) olmamız için bir uyarı veriyor. Kullanıcı açısından büyük bir sıkıntı oluşturmuyor. Yinede bu işten para kazanıyor olsam almakta tereddüt etmeyeceğim bir program. Bana göre karşılığını fazlasıyla veriyor. Biz amatörler için satın almak şimdilik gereksiz ve pahalı sayılabilir, zira ücretsiz alternatifleri var. Umarım bir gün Sublime&amp;rsquo;ı satın almaya değecek ölçüde bir coder olmayı başarabilirim.(Siz de!) Bu yazıyı okuyan herkes amin dese oldu bu iş! Her şeye rağmen programları Unregistered olarak kullanmayı vicdanen sıkıntılı görenler için tamamıyla bedava Notepad++ ve Atom alternatifleri mevcut.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Bugünlük bu kadar. Yazımı beğendiyseniz lütfen aşağıdaki sosyal medya linklerini kullanarak paylaşın. Sayfam hakkında öneri / eleştirilerinizi alttaki yorumlarda paylaşabilir, &lt;a href=&#34;mailto:pythonistan@gmail.com&#34;&gt;mail&lt;/a&gt; yoluyla bana her zaman ulaşabilirsiniz.&lt;/p&gt;

&lt;h2 id=&#34;dipnotlar&#34;&gt;DipNotlar&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:default&#34;&gt;Bundan sonra yazacağınız her programda otomatik olarak Python syntax(söz dizimi) ayarlarının geçerli olmasını isterseniz yapmanız gereken şey: View &amp;gt; Syntax &amp;gt; Open all with current extension as &amp;gt; Python &amp;gt; Python seçmek.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:default&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:buyutme&#34;&gt;Fotodaki gibi karakterleri büyütmek için Ctrl + &lt;strong&gt;+&lt;/strong&gt; tuş kombinasyonunu kullanın. Küçültmek için ise tersi Ctrl + &lt;strong&gt;-&lt;/strong&gt; kullanın.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:buyutme&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:kaynak&#34;&gt;&lt;a href=&#34;http://www.granneman.com/webdev/editors/sublime-text/configuring-sublime-text/&#34;&gt;Granneman&lt;/a&gt; - &lt;a href=&#34;http://docs.sublimetext.info/en/latest/customization/settings.html&#34;&gt;Sublime Unofficial&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:kaynak&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Python&#39;da Stringleri Öğreniyoruz - 2</title>
      <link>http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-2/</link>
      <pubDate>Sun, 07 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-2/</guid>
      <description>

&lt;h2 id=&#34;python-da-stringler-2-bölüm&#34;&gt;Python&amp;rsquo;da Stringler - 2. Bölüm&lt;/h2&gt;

&lt;p&gt;Dün &lt;a href=&#34;http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-1/&#34;&gt;ilk bölümünü&lt;/a&gt; yayınladığımız karakter dizileri (stringler) konusuna devam ediyoruz.&lt;/p&gt;

&lt;p&gt;İkinci bölümde pratiğe yönelik bazı uygulamalar yapalım. Sizlere sürpriz sorularım olacak.&lt;/p&gt;

&lt;h2 id=&#34;eğlenceli-bir-deneme&#34;&gt;Eğlenceli Bir Deneme&lt;/h2&gt;

&lt;p&gt;Elimizde iki adet değişken var. Değişkenlerimiz &lt;code&gt;a = &amp;quot;Garanti&amp;quot;&lt;/code&gt; ve &lt;code&gt;b = &amp;quot;töre&amp;quot;&lt;/code&gt; olsun.&lt;/p&gt;

&lt;p&gt;Bu iki değişkeni kullanarak -burası önemli!!!- &lt;strong&gt;index değerlerini tek tek saymadan&lt;/strong&gt; nasıl &lt;code&gt;&amp;quot;Garantör&amp;quot;&lt;/code&gt; isimli bir karakter dizisi oluşturup ekrana yazdırabiliriz?&lt;/p&gt;

&lt;p&gt;Cevaba göz atmadan lütfen bir kaç dakika &lt;strong&gt;düşünün&lt;/strong&gt;. Bu sorunun cevabını kolaylıkla bulabileceğinizi sanıyorum.&lt;/p&gt;

&lt;p&gt;İpucu: İki karakter dizisini birleştirmek için &lt;code&gt;+&lt;/code&gt; operatörünü kullanabilirsiniz.&lt;/p&gt;

&lt;p&gt;Sorumuzun cevabı sayfanın altında. Hemen alttaki bölümde ise ev ödeviniz var.&lt;/p&gt;

&lt;h2 id=&#34;ev-ödeviniz&#34;&gt;Ev Ödeviniz&lt;/h2&gt;

&lt;p&gt;Bir sonraki blog yazıma kadar çözmeniz için bir soru soracağım. Python interpreter&amp;rsquo;ı bu sorunun cevabını bulmak için kullanabilirsiniz. İnternetten cevabı araştırmak serbest.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-1/&#34;&gt;Stringler - 1. bölümde&lt;/a&gt; geçen &lt;code&gt;selam&lt;/code&gt; adlı değişkenin &amp;ldquo;baştan 7. / sondan -15.&amp;rdquo; index değerine haiz olan karakterinin ismi nedir?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;stringler-toplanır-mı&#34;&gt;Stringler Toplanır mı?&lt;/h2&gt;

&lt;p&gt;Üstteki sorudaki ipucunda belirtildiği gibi karakter dizilerini birbirleri ile birleştirip yeni karakter dizileri oluşturabilirsiniz. Bunun için &lt;code&gt;+&lt;/code&gt; operatörünü kullanmalısınız. Burada yapılan işleme, birleştirme (concatenatination) denir.&lt;/p&gt;

&lt;p&gt;Birleştirme yapılırken araya otomatik boşluk girmez, boşluk gerekiyorsa sizin boşluk karakterini birleşen stringlerin arasına koymanız gerekir. (Bkz.aşağıdaki örnek 3.satır &amp;lsquo;merhaba&amp;rsquo;dan sonrası)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Önemli:&lt;/strong&gt; Evet boşluk karakteri de diğer herhangi bir karakter gibidir. Basitçe space tuşuna bir kere basmak bir boşluk karakteri vermek demektir.&lt;/p&gt;

&lt;p&gt;Peki bir karakter dizisi ile bir sayı (rakam) birleşebilir mi? Karakter dizilerini bir sayıyla toplamaya kalkarsanız hata alırsınız. Zira sayı ile toplama yada çıkarma tür uyuşmazlığı nedeni ile yapılamaz. Ancak ilginç bir durum olarak karakter dizisini çarpı &lt;code&gt;*&lt;/code&gt; operatörü ile kullanıp aynı karakter dizisini çarpıldığı değer kadar artırabilirsiniz. Bir örnek görelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*-   #türkçe karakterlerle sorun yaşamamak için

print &#39;merhaba &#39; + &amp;quot;Fatih&amp;quot; + &amp;quot;!&amp;quot; * 15 # üç adet karakter dizisini birleştir
        # ünlem karakterini 15 ile çarp, yani 15 adet yap
        # çıktıyı aşağıda soldaki ekran görüntüsünde görebilirsiniz.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;türkçe-karakter-azizliği&#34;&gt;Türkçe Karakter Azizliği&lt;/h2&gt;

&lt;p&gt;Belki farketmişsinizdir. Bugüne kadarki yazılarımdaki kodlarda Türkçe karakterleri pek kullanmamıştım.(yorum satırları hariç) Stringleri işlediğim iki bölümdeki tüm örnek kodlarda Türkçe kullanmaya çalıştım.&lt;/p&gt;

&lt;p&gt;Python 2 versiyonunun üniversal UTF-8 kümesi ile irtibatı maalesef pek sağlam değil. Birçok kez interpreter(yorumlayıcı)&amp;lsquo;da sürpriz hatalarla karşılaşabiliyorsunuz.&lt;/p&gt;

&lt;p&gt;Örneğin &lt;a href=&#34;http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-1/&#34;&gt;bir önceki yazıda&lt;/a&gt; geçen &lt;code&gt;len&lt;/code&gt; built-in (hazır) fonksiyona bakalım. &lt;code&gt;print len &amp;quot;tesadüfi&amp;quot;&lt;/code&gt; komutunu verdiğinizde çok şaşırtıcı bir biçimde &lt;code&gt;9&lt;/code&gt; sonucunu alıyorsunuz. Kelimemizde 8 karakter olduğu aşikar! UTF-8, &amp;ldquo;ü&amp;rdquo; gibi özel karakter setleri için birden fazla byte kullandığı için karakter dizimizin değeri Python&amp;rsquo;ca yanlış hesaplanıyor.&lt;/p&gt;

&lt;p&gt;Allahtan bunu önlemenin nispeten kolay bir yolu var. Karakterimizi unicode&amp;rsquo;a göre decode etmek(çözmek) ve o şekilde &lt;code&gt;len&lt;/code&gt; fonksiyonunu çalıştırmak. &lt;code&gt;print len (u&amp;quot;tesadüfi&amp;quot;)&lt;/code&gt; şeklinde kullandığımızda doğru sonuç olan &lt;code&gt;8&lt;/code&gt; döndürülüyor. Burada &lt;code&gt;u&lt;/code&gt; karakter dizimizi unicode&amp;rsquo;a çeviriyor.&lt;/p&gt;

&lt;p&gt;Tuhaf olan yukarıdaki aynı kodu Windows&amp;rsquo;da Komut Satırı &amp;gt; Python yazarak açtığımız Python kabuğunda(Shell) çalıştırdığınızda herhangi bir hata almadan doğru sonucu(8) veriyor. Kafa karıştıran bir durum!&lt;/p&gt;

&lt;p&gt;Yine aynı şekilde &lt;a href=&#34;http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-1/#karakter-dizisi-sras-string-index&#34;&gt;bir önceki bölümde&lt;/a&gt; &lt;code&gt;print selam[-5:-1]  # 5. örnek -&amp;gt; &amp;quot;lsın&amp;quot; olmalı&lt;/code&gt; kodu Sublime&amp;rsquo;da Python tarafından yanlış sonuç döndürüyor. Bu kez yine &amp;ldquo;ı&amp;rdquo; karakteri interpreter tarafından işlenirken hata oluşuyor.&lt;/p&gt;

&lt;p&gt;Gördüğünüz gibi Python&amp;rsquo;da bazen Türkçe karakterlerle yada standart latin harfleri dışındaki bazı özel karakter setleri ile problemler yaşayabilirsiniz. Bu tür durumlarda önerim Google&amp;rsquo;dan probleminizi (tercihen ingilizce olarak) yazıp aratmanız. Google sizi genelde &lt;a target=&#34;blank&#34; href=&#34;http://stackoverflow.com/&#34;&gt;stackoverflow&lt;/a&gt; gibi sitelere yönlendiriyor ve bir şekilde probleminizi çözüyorsunuz. Tabi her zaman için ilk kural: Panik yapmayın!&lt;/p&gt;

&lt;h2 id=&#34;eğlenceli-bir-deneme-çözümü&#34;&gt;Eğlenceli Bir Deneme Çözümü&lt;/h2&gt;

&lt;p&gt;Eksi (-) indeks değerlerini kullanarak karakter dizisinde istemediğimiz kısımları çıkartıp istediğimiz alt dizileri oluşturarak bu soruyu çözebiliriz.&lt;/p&gt;

&lt;p&gt;İlk karakter dizimiz &lt;code&gt;&amp;quot;Garanti&amp;quot;&lt;/code&gt;idi. Burada istemediğimiz karakterler son iki karakter: &lt;code&gt;&amp;quot;ti&amp;quot;&lt;/code&gt;.Son iki karakteri istemediğimizi bildiğimizden basitçe a[:-2] bize &lt;code&gt;&amp;quot;Garan&amp;quot;&lt;/code&gt; alt dizisini verir.&lt;/p&gt;

&lt;p&gt;İkinci karakter dizimiz &lt;code&gt;&amp;quot;töre&amp;quot;&lt;/code&gt; idi. Burada istemediğimiz karakter sadece en son karakter: &lt;code&gt;&amp;quot;e&amp;quot;&lt;/code&gt; Yine aynı şekilde b[:-1] kullanımı bize &lt;code&gt;&amp;quot;tör&amp;quot;&lt;/code&gt; alt dizisini (substring) verecektir.&lt;/p&gt;

&lt;p&gt;Artı &lt;code&gt;(+)&lt;/code&gt; operatörünün stringler için kullanıldığında birleştirmeye (concetination) yaradığını biliyoruz. Bu iki karakter dizisini birleştirmek için şimdi bu operatörü kullanalım. &lt;code&gt;a[:-2] + b[:-1]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Son olarak ekrana yazdırma komutumuzu biliyorsunuz. &lt;code&gt;print a[:-2] + b[:-1]&lt;/code&gt; -&amp;gt; Bize &lt;code&gt;&amp;quot;Garantör&amp;quot;&lt;/code&gt;  çıktısını verecektir.&lt;/p&gt;

&lt;p&gt;Programımızın toplu görünüşü:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*-   #türkçe karakterlerle sorun yaşamamak için
a = &amp;quot;Garanti&amp;quot;
b = &amp;quot;töre&amp;quot;

print a[0:-2] + b[0:-1]  # print a[:-2] + b[:-1] kullanımı da geçerlidir
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Alternatif Kullanım:&lt;/strong&gt; Yukarıda son yorum satırında değinildiği gibi başlangıç indexinde 0 kullanmayabilirsiniz. Değer yazılmadığında Python varsayılan değer olarak 0 kullanır.&lt;/p&gt;

&lt;figure class=&#34;half&#34;&gt;
    &lt;a href=&#34;http://pythonistan.net/img/blog/pythonda-stringler/karakter_dizileri_carpim_operatoru.png&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/pythonda-stringler/karakter_dizileri_carpim_operatoru.png&#34; alt=&#34;Paytonda karakter dizileri çarpılabilir&#34;&gt;&lt;/a&gt;
    &lt;figcaption&gt;Paytonda karakter dizileri çarpılabilir&lt;/figcaption&gt;

    &lt;a href=&#34;http://pythonistan.net/img/blog/pythonda-stringler/birebir_saymadan_alt_dizi_olusturma.png&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/pythonda-stringler/birebir_saymadan_alt_dizi_olusturma.png&#34; alt=&#34;Birebir index değeri saymadan substring alt dizi oluşturma&#34;&gt;&lt;/a&gt;
    &lt;figcaption&gt;Birebir İndex Değeri Saymadan Substring Alt Dizi Oluşturma&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;web-sitesi-adreslerini-python-la-ayıklama&#34;&gt;Web Sitesi Adreslerini Python&amp;rsquo;la Ayıklama&lt;/h2&gt;

&lt;p&gt;Hepiniz şimdiye değin muhakkak bir website kodu ile karşılaşmışsınızdır. Web tarayıcısında bir websitenin içindeyken sağ tıklayıp açılan menüden &amp;ldquo;Kaynağı Göster&amp;rdquo;e tıkladığımızda gelen source(kaynak) kodlarında en sık görülen kod satırlarından biri hyperlink gösterimidir.&lt;/p&gt;

&lt;p&gt;Web demek zaten hiper linklerin bir toplamı değil mi? O yüzden hemen her sayfa onlarca hyperlink barındırmaktadır.&lt;/p&gt;

&lt;p&gt;Bahsettiğimiz linklerin web sitelerinin kaynak kodlarında genel gösterimi şu şekildedir: &lt;code&gt;&amp;lt;a href = &amp;quot; http://www.ornekwebsitesi.com &amp;quot; &amp;gt;&lt;/code&gt; Şimdi diyelim ki biz bu koddan sadece &lt;code&gt;http://www.ornekwebsitesi.com&lt;/code&gt; olan kısmı çekip almak (extract) istiyoruz. Şu ana kadar öğrendiğimiz metodlarla bunu çok kolay gerçekleştirebileceğimizi biliyorsunuz.&lt;/p&gt;

&lt;p&gt;Öğrenmiş olduğumuz baş ve son (diğer bir ifadeyle pozitif ve negatif) index değerlerini kullanarak bu problemi çözelim.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;http://www.ornekwebsitesi.com&amp;quot;&amp;gt;&lt;/code&gt; ifadesinde http&amp;rsquo;nin ilk harfi olan &amp;ldquo;h&amp;rdquo; karakterinin pozitif index değeri ne olursa olsun değişmeyecek: &lt;code&gt;9&lt;/code&gt;. (Bkz. Aşağıda Soldaki Ekran Görüntüsü)&lt;/p&gt;

&lt;p&gt;Aynı şekilde linkin sonuna bakarsak linkin uzunluğu ne olursa olsun son iki karakterin (çift tırnak ve büyüktür karakterleri) dışarıda bırakacağımızı görebiliyoruz. Dolayısıyla linkimizin son karakterinin pozitif indeks değeri değişse bile negatif indeks değeri hiç bir zaman değişmez.&lt;/p&gt;

&lt;p&gt;Negatif index değeri linkin son karakterine kadar her zaman için -2 dir. (Üstteki örneğimizi hatırlayın, son 2 karakteri almak istemiyoruz. -2.inci karakter (bu durumda &amp;lsquo;&amp;ldquo;&amp;rsquo;) alınacak alt diziye dahil olmayacaktır, unutmayın.) Aşağıda soldaki ekran alıntısında bu durumu detaylı görebilirsiniz.&lt;/p&gt;

&lt;p&gt;Dolayısıyla bizim istediğimiz kısım [9&amp;rsquo;dan:-2&amp;rsquo;ye] kadar olan kısımdır.(-2. dahil değil) Şimdi bunu kodumuzda görelim.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*-   #türkçe karakterlerle sorun yaşamamak için
link_1 = &#39;&amp;lt;a href=&amp;quot;http://www.python.org&amp;quot;&amp;gt;&#39; # dışarıda tek tırnak kullanımına dikkat
link_2 = &#39;&amp;lt;a href=&amp;quot;http://www.pythonistan.net&amp;quot;&amp;gt;&#39; #çünkü içeride çift tırnak var...
link_3 = &#39;&amp;lt;a href=&amp;quot;http://www.pythoncentral.io&amp;quot;&amp;gt;&#39;

print link_1[9:-2]  # gördüğünüz gibi karakter dizilerimizin uzunluğu
print link_2[9:-2]  # farklı olsa bile hepsi için aynı index değerleri
print link_3[9:-2]  # kullanarak istediğimiz bölümü seçebildik.
# programın çıktısını (output) hemen alt sağdaki ekran görüntüsünde görebilirsiniz.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/img/blog/pythonda-stringler/hyperlink_goreceli_string_index_pozisyonu.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Paytonda hiper link görece string index pozisyon tablo karşılaştırması&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/pythonda-stringler/hyperlink_goreceli_string_index_pozisyonu_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;http://pythonistan.net/img/blog/pythonda-stringler/string_indexing_ile_hyperlink_ayiklamak.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Python&#39;da Karakter Dizisi İndeksi ile Hiper Link Ayıklıyoruz&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/pythonda-stringler/string_indexing_ile_hyperlink_ayiklamak_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Karakter dizileri üzerine dün ve bugün yaptığımız detaylı açıklamalardan sonra artık &lt;a href=&#34;http://pythonistan.net/blog/palindrome-programi/&#34;&gt;palindrom&lt;/a&gt; programımıza geçebiliriz. Bekleyin beni anacım!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Her türlü görüş ve önerileriniz için lütfen sayfa altındaki yorumlar bölümünü kullanın. Yazımı paylaşmak için sosyal medya linkleri aşağıdaki menüde mevcut. Teşekkürler.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python&#39;da Stringleri Öğreniyoruz - 1</title>
      <link>http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-1/</link>
      <pubDate>Sat, 06 Aug 2016 00:00:00 +0300</pubDate>
      
      <guid>http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-1/</guid>
      <description>

&lt;h2 id=&#34;payton-da-stringler-1-bölüm&#34;&gt;Payton&amp;rsquo;da Stringler  - 1. Bölüm&lt;/h2&gt;

&lt;p&gt;Hatırlarsanız bugün &lt;a href=&#34;http://pythonistan.net/blog/sublime-text-kurulum/&#34;&gt;bir önceki makalemde&lt;/a&gt; gösterdiğim palindrome programının detaylı incelemesini yapacaktım. Lakin o örneği daha iyi anlayabilmeniz açısından ilk olarak Python’da stringler (karakter dizileri) konusunu işlemeye karar verdim.&lt;/p&gt;

&lt;p&gt;Bu yazı iki bölümden oluşacak. Bu birincisi. Yarın &lt;a href=&#34;http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-2/&#34;&gt;ikinci ve son bölümü&lt;/a&gt; yayınlamayı planlıyorum.&lt;/p&gt;

&lt;p&gt;Python’da stringler konusu &lt;a href=&#34;http://pythonistan.net/blog/python-kabukta-ilk-program/&#34;&gt;daha önceki yazılarımda&lt;/a&gt; birkaç kez geçmişti. Bugün konuyu en baştan ele alalım.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Karakter dizileri&lt;/em&gt; ile ilgili bilmeniz gereken en önemli şey şu: &lt;em&gt;Karakter dizileri&lt;/em&gt; &lt;strong&gt;tırnak işaretleri arasında&lt;/strong&gt; gösterilmek zorundadır. (Tek Tırnak/ Çift Tırnak/Üçlü Tırnak kullanımlarının hepsi geçerlidir.)&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:tirnak&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:tirnak&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Bilmeniz gereken diğer önemli şey ise tırnak kullanımında tutarlı olma mecburiyetidir. Yani karakter dizisine tek tırnak ile başlamışsanız tek tırnak ile sonlandırmanız gerekir. Çift ile başladıysanız çift ile&amp;hellip;v.b.&lt;/p&gt;

&lt;p&gt;Son olarak tırnak içerisinde görülen &lt;strong&gt;her şey&lt;/strong&gt; karakter dizisidir. Karakter deyince sadece yazı harflerini düşünmeyin, o tırnak işaretleri arasına giren herşey ama herşey bir karakter dizisidir. &lt;code&gt;&amp;quot;5*-|[\}?=)&amp;amp;/%+½$#],.&amp;quot;1é!&amp;quot;&lt;/code&gt; gibi&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;string-karakter-dizisi-örnekleri&#34;&gt;String (Karakter Dizisi) Örnekleri&lt;/h2&gt;

&lt;p&gt;Şimdi artık aşağıda bir kaç tane karakter dizisi yazabiliriz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*-   #türkçe karakterlerle sorun yaşamamak için
print &amp;quot;Ben bir karakter dizisiyim, tamam mı?&amp;quot; # çift tırnak k.dizi örneği
print &#39;Anlaşıldı, tamam&#39;        # tek tırnak k.dizi örneği
print &#39;&#39;&#39;İlk ikisinin aksine üç tırnak ile yazıldığımda bir sonraki satırda 
hata vermeden devam edebilirim&#39;&#39;&#39;   # birden fazla satırlı üç tırnak k.dizi örneği
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu da hatalı kullanıma bir örnek:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*-   #türkçe karakterlerle sorun yaşamamak için
print  &amp;quot;Bakın bu mesela çalışmaz, isterseniz deneyin. Python hata verecek.&#39;

 File &amp;quot;C:\Users\Fatih\Desktop\selam.py&amp;quot;, line 2
    print  &amp;quot;Bakın bu mesela çalışmaz, isterseniz deneyin. Python hata verecek.&#39;
                                                                                     ^
SyntaxError: EOL while scanning string literal
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Not:&lt;/strong&gt; Python baştaki çift tırnaktan sonra karakter dizisini bitirme emaresi olarak ikinci bir çift tırnak aradı, bulamayınca üstteki hatayı verdi. EOL = End of Line = Satır Sonu demektir.
{:.notice}&lt;/p&gt;

&lt;figure class=&#34;half&#34;&gt;
    &lt;a href=&#34;http://pythonistan.net/img/blog/pythonda-stringler/sublimeda_karakter_dizileri_hatasiz_ornekler.png&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/pythonda-stringler/sublimeda_karakter_dizileri_hatasiz_ornekler.png&#34; alt=&#34;Python&#39;da Hatasız Karakter Dizisi Örnekleri&#34;&gt;&lt;/a&gt;
    &lt;figcaption&gt;Python&#39;da Hatasız Karakter Dizisi Örnekleri&lt;/figcaption&gt;

    &lt;a href=&#34;http://pythonistan.net/img/blog/pythonda-stringler/sublimeda_karakter_dizileri_hatali_ornek.png&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/pythonda-stringler/sublimeda_karakter_dizileri_hatali_ornek.png&#34; alt=&#34;Python&#39;da Hatalı Karakter Dizisi Örneği&#34;&gt;&lt;/a&gt;
    &lt;figcaption&gt;Python&#39;da Hatalı Karakter Dizisi Örnekleri&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;karakter-dizisi-sırası-string-index&#34;&gt;Karakter Dizisi Sırası (String Index)&lt;/h2&gt;

&lt;p&gt;Buraya kadar zaten bildiğiniz şeylerden bahsettik. Şimdi yeni bir konsepte geçelim. Karakter dizisi sırası, yani string indexi. Daha açık ifadeyle &lt;strong&gt;String Index&lt;/strong&gt;, dizideki her bir karakterin sırasını veren değerdir. Bu değer baştan 0, sondan -1 ile başlar.(En üstteki büyük fotoya bakın)&lt;/p&gt;

&lt;p&gt;*Karakter dizileri*nin sayılarda olmayan bu çok önemli özelliğini kullanarak bir karakter dizisinden istediğiniz bölümü seçip alabilir ve ayrıca yeni karakter dizileri (alt dizi – substring) oluşturabilirsiniz. Bu seçim yapılırken köşeli parantez kullanılır: karakter_dizisi[index] yada karakter_dizisi[baslangic_index:bitis_index] şeklinde. İkinci örnek birden fazla karakter içeren alt dizi oluşturmak için kullanılır.&lt;/p&gt;

&lt;p&gt;Adından anlaşılacağı üzere “diziler”, alt diziler içerir ve biz bu alt dizilere &lt;em&gt;index pozisyonlarını kullanarak&lt;/em&gt; ulaşıyoruz.&lt;/p&gt;

&lt;p&gt;Pratik bir örnek yapalım. Karakter dizimize ulaşmada kolaylık olsun diye ilk önce &lt;code&gt;selam&lt;/code&gt; adında bir değişken oluşturalım. Değişken konusunu daha sonraki yazılarımızda işleyeceğimiz için şimdilik buna kafa yormayın lütfen.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:degisken&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:degisken&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;selam = “Merhaba Ali!, nasılsın?”&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                            &amp;lt;----- PYTHON&#39;DA KARAKTER DİZİLERİNİN SONDAN İNDEKS DEĞERİ                                              
-22 -21 -20 -19 -18 -17 -16 -15 -14 -13 -12 -11 -10 -9  -8  -7  -6  -5  -4  -3  -2  -1
__  _   _   _   _   _   _       __  _   _   _   _   _   _   _   _   _   _   _   _   _
M   e   r   h   a   b   a       A   l   i   !   ,   n   a   s   ı  l   s   ı  n   ?
__  _   _   _   _   _   _       __  _   _   _   _   _   _   _   _   _   _   _   _   _
0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19  20  21
PYTHON&#39;DA KARAKTER DİZİLERİNİN BAŞTAN İNDEKS DEĞERİ ------&amp;gt;                                                                                    
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;selam&lt;/code&gt; isimli değişkenimize &lt;code&gt;Merhaba Ali!, nasılsın?&lt;/code&gt; karakter dizimizi atadık. Bundan sonra &lt;code&gt;selam&lt;/code&gt;değişkenimizden alt diziler oluşturmayı görelim.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*-   #türkçe karakterlerle sorun yaşamamak için
selam = &amp;quot;Merhaba Ali!, nasılsın?&amp;quot;

print selam[0]      # 1. örnek -&amp;gt; &amp;quot;M&amp;quot;
print selam[2+2]    # 2. örnek -&amp;gt; &amp;quot;a&amp;quot; , (2+2 = 4. karakter)
print selam[0:4]    # 3. örnek -&amp;gt; &amp;quot;Merh&amp;quot; , son index karakteri(4) dahil değil!
print selam[-2]     # 4. örnek -&amp;gt; &amp;quot;n&amp;quot; 
print selam[-5:-1]  # 5. örnek -&amp;gt; &amp;quot;lsın&amp;quot; olmalı, ancak türkçe karakter
            # kaynaklı bir hatayı aşağıda ekran çıktısında görebilirsiniz.
            # bkz. stringler - 2. Türkçenin Azizliği bölümü 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Önemli:&lt;/strong&gt; Karakter dizimizin bizzat kendisini kullanarak alt dizi oluşturabiliriz. &amp;ldquo;Merhaba Ali!, nasılsın?&amp;rdquo;[0] -&amp;gt; &amp;ldquo;M&amp;rdquo; çıktısını verir. Aynen yukarıdaki birinci örnekteki gibi. Ancak değişken kullanımı daha rahat ve yaygındır.
{:.notice}&lt;/p&gt;

&lt;h2 id=&#34;öğrenmemiz-gereken-hususlar&#34;&gt;Öğrenmemiz Gereken Hususlar&lt;/h2&gt;

&lt;p&gt;Burada bilmemiz gereken belli başlı şeyler var. Tek tek bakalım.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Python’da karakter sıralaması sağ veya soldan başlanarak kullanılabilir. Soldan yani baştan başlanıldığında ilk karakter indeks 0&amp;rsquo;dan başlar ve artarak devam eder. (Bkz. En üstteki büyük foto). Sağdan(yani dizinin en sonundan) başlanıldığında ise ilk karakter indeks -1 ile başlar ve azalarak devam eder. Yukarıda ilk örnekte Python, &lt;code&gt;selam&lt;/code&gt; adlı değişkene atanan değer olan &amp;ldquo;Merhaba Ali!, nasılsın?&amp;rdquo; karakter dizisinin 0’ıncı karakterini soldan saymaya başladı ve hemen &amp;ldquo;M&amp;rdquo; karakterini(alt diziyi) daha ilk saymada buldu. 4.örnekte ise bu kez eksi (–) 2 index istendi, en son karakter -1 ve onun index değeri karşılığı &amp;ldquo;?&amp;rdquo;&amp;lsquo;dır. Bir sol yanındaki index değeri -2 olacağı için sonuç olarak bize “n” karakter (dizi)ini getirdi.&lt;/li&gt;
&lt;li&gt;Tek bir karakter(dizisi)i seçmek (yani tek karakterli bir altdiziyi seçmek) için sayı değerli tek bir index değeri kullanılırken [tek_index_değeri], diziden belli aralığı seçmek (yani birden fazla karakterli bir altdizi seçmek için) [baslangic_index:bitis_index] kullanılır. Bkz. yukarıdaki 3 ve 5 no.lu örnekler&lt;/li&gt;
&lt;li&gt;İndex değeri için kullanılan ifade aritmetik bir ifade olabileceği gibi (yukarıda 2 no.lu örnek) bir fonksiyon da olabilir. Mesela;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# -*- coding: utf-8 -*-   #türkçe karakterlerle sorun yaşamamak için
selam = &amp;quot;Merhaba Ali!, nasılsın?&amp;quot;
sayi = &amp;quot;sekiz_erli&amp;quot; # sekiz_erli kelimesi kaç karakter uzunluğunda? 10
print selam[len(sayi)] # -&amp;gt; &amp;quot;i&amp;quot;,  karakter dizisinin 10. karakteri.
print len(sayi) # Gerçekten de 10 karakter olduğunu teyit edelim.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Fonksiyon:&lt;/strong&gt; &lt;a href=&#34;http://pythonistan.net/blog/python-notepad-ile-program-yazma/&#34;&gt;Notepad ile program yazma&lt;/a&gt; makalemde belirttiğim &lt;code&gt;def&lt;/code&gt; ile başlayan prosedürleri hatırladınız mı? Buradaki &lt;code&gt;len&lt;/code&gt; fonksiyonunun tek farkı Python&amp;rsquo;un içinde hazır gelen bir fonksiyon/prosedür olmasıdır.(built-in) &lt;code&gt;len&lt;/code&gt; bize türü &amp;ldquo;dizi&amp;rdquo; olan veri tiplerinin uzunluğunu(length) verir ve her zaman sayısal bir değer üretir.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:diziler&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:diziler&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;
{:.notice}&lt;/p&gt;

&lt;p&gt;Burada &lt;code&gt;len(sayi)&lt;/code&gt; ile yaptığımız şey şudur: &lt;code&gt;sayi&lt;/code&gt; değişkenin değeri olan “sekiz_erli” karakter dizisinin uzunluğunu &lt;code&gt;len&lt;/code&gt; fonksiyonu ile hesaplıyoruz. Bu değer &lt;code&gt;10&lt;/code&gt;&amp;lsquo;dur. Daha sonra bunu karakter indeksinin değeri olarak kullanıyoruz.&lt;/p&gt;

&lt;p&gt;Yani &lt;code&gt;selam&lt;/code&gt; isimli değişkenin belirttiği karakter dizisinin 10 no.lu index pozisyonunda bulunan karakteri alıyoruz. Bu da bize &lt;code&gt;&amp;quot;i&amp;quot;&lt;/code&gt; harfini veriyor. &lt;strong&gt;(Unutmayın, index değeri baştan her zaman 0&amp;rsquo;la başlar, 1&amp;rsquo;le değil&amp;hellip;)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://pythonistan.net/img/blog/pythonda-stringler/pythonda_karakter_dizileri_altdizi_secme.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Paytonda Karakter Dizilerinden Alt Dizi Seçme&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/pythonda-stringler/pythonda_karakter_dizileri_altdizi_secme_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;http://pythonistan.net/img/blog/pythonda-stringler/paytonda_len_fonksiyonu_ile_altdizi_secme.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Paytonda &#39;len&#39; Hazır Fonksiyonu İle Alt Dizi Seçme&#34;&gt;&lt;img src=&#34;http://pythonistan.net/img/blog/pythonda-stringler/paytonda_len_fonksiyonu_ile_altdizi_secme_thumb.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Serimizin &lt;a href=&#34;http://pythonistan.net/blog/pythonda-stringleri-ogreniyoruz-2/&#34;&gt;ikinci ve son bölümünde&lt;/a&gt; yine örnek uygulamalar yapıp Python&amp;rsquo;da stringler konusunu ele almaya çalışacağız. Bu kez sizler için bazı test sorularımız olacak. Takipte kalın!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Yazımla ilgili beğenilerinizi/yapıcı eleştirilerinizi yandaki sosyal medya butonları ile paylaşabilirsiniz. Sayfa altında bu yazıyı ve soruları tartışabilirsiniz.&lt;/p&gt;

&lt;h2 id=&#34;dipnotlar&#34;&gt;DipNotlar&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:tirnak&#34;&gt;Tek tırnak : &amp;lsquo; &amp;rsquo; , Çift Tırnak : &amp;ldquo; &amp;ldquo;, Üçlü Tırnak : &amp;ldquo;&amp;rdquo;&amp;rdquo; &amp;ldquo;&amp;rdquo;&amp;rdquo; yada &amp;ldquo;&amp;rsquo; &amp;ldquo;&amp;rsquo; .
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:tirnak&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:degisken&#34;&gt;Değişkeni içinde her türlü bilgi tutabildiğimiz bir nevi kutuya benzetebiliriz. Burada o uzun karakter dizisini içinde tutan &lt;code&gt;selam&lt;/code&gt; adlı değişkendir.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:degisken&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:diziler&#34;&gt;Dizi türüne sahip Payton veri tipleri: Karakter Dizileri, Listeler, Demetler, Sözlükler, v.s. Bu konuları ileriki zamanlarda göreceğiz.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:diziler&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>